{"version":3,"sources":["components/AnalyticsSearch/index.tsx","pages/AnalyticsPage/AnalyticsHeader.tsx","../node_modules/@material-ui/icons/esm/ArrowForwardIos.js","pages/AnalyticsPairDetails/AnalyticsPairChart.tsx","pages/AnalyticsPairDetails/AnalyticsPairDetails.tsx"],"names":["dayjs","extend","utc","AnalyticsSearch","t","useTranslation","history","useHistory","useState","searchVal","setSearchVal","useDebouncedChangeHandler","searchValInput","setSearchValInput","menuOpen","setMenuOpen","menuRef","useRef","wrapperRef","searchedTokens","setSearchedTokens","searchedPairs","setSearchedPairs","tokensShown","setTokensShown","pairsShown","setPairsShown","tokenMap","useSelectedTokenList","escapeRegExp","str","replace","filteredTokens","useMemo","uniqueTokens","found","length","map","token","id","push","sort","tokenA","tokenB","oneDayVolumeUSD","filter","GlobalConst","blacklists","TOKEN_BLACKLIST","includes","Object","keys","tokenEntryKey","isAddress","slice","match","RegExp","some","m","filteredPairs","uniquePairs","pairsFound","pair","pairA","pairB","Number","trackedReserveETH","PAIR_BLACKLIST","split","toUpperCase","token0","symbol","token1","field","name","useEffect","a","getAllTokensOnUniswap","allTokensUniswap","getAllPairsOnUniswap","allPairsUniswap","allTokens","allPairs","client","query","TOKEN_SEARCH","variables","value","tokens","PAIR_SEARCH","data","asSymbol","pairs","foundPairs","as0","concat","as1","asAddress","searchedPair","included","foundTokens","asName","searchedToken","Promise","all","utcCurrentTime","utcOneDayBack","subtract","unix","getBlockFromTimestamp","oneDayBlock","TOKEN_INFO_OLD","fetchPolicy","oneDayResult","oneDayHistory","tradeVolumeUSD","foundTokensWithData","console","log","fetchData","handleClick","e","current","contains","target","document","addEventListener","removeEventListener","Box","className","placeholder","ref","onFocus","onChange","evt","display","SearchIcon","val","ind","currency0","getTokenFromAddress","MATIC_CHAIN","Token","getAddress","decimals","currency1","onClick","size","currency","React","memo","AnalyticsHeader","type","pathname","useLocation","breakpoints","useTheme","isMobile","useMediaQuery","down","width","mb","maxWidth","margin","AdsSlider","position","marginY","ArrowForwardIos","style","shortenAddress","indexOf","createSvgIcon","d","AnalyticsPairChart","pairData","pairAddress","useRouteMatch","params","pairChartData","setPairChartData","analyticChart","ONE_MONTH_CHART","durationIndex","setDurationIndex","usingUtVolume","oneDayVolumeUntracked","fees","utils","FEEPERCENT","toLocaleString","chartIndex","setChartIndex","chartIndexes","chartIndexTexts","chartData","item","dailyVolumeUSD","reserveUSD","currentData","trackedReserveUSD","currentPercent","volumeChangeUSD","liquidityChangeUSD","volumeChangeUntracked","getPairChartData","ALL_CHART","getChartStartTime","newChartData","getLimitedData","CHART_COUNT","fetchPairChartData","currentPercentClass","getPriceClass","mt","formatCompact","ml","getFormattedPrice","format","Skeleton","variant","height","chartTypes","typeTexts","chartType","setChartType","GlobalData","analytics","CHART_DURATIONS","CHART_DURATION_TEXTS","yAxisValues","getYAXISValuesAnalytics","dates","date","categories","getChartDates","AnalyticsPairDetails","setPairData","pairTransactions","setPairTransactions","pairTransactionsList","mints","TxnType","ADD","swaps","amount0","amount0Out","amount1Out","amount1","amount0In","amount1In","SWAP","burns","REMOVE","chainId","useActiveWeb3React","ChainId","MATIC","undefined","token0Rate","reserve0","reserve1","toFixed","token1Rate","formatNumber","ethPrice","useEthPrice","price","getBulkPairData","pairInfo","getPairTransactions","transactions","checkEthPrice","fetchTransctions","to","marginLeft","my","mr","Grid","container","xs","sm","md","borderRadius","padding","oneWeekVolumeUSD","href","getEtherscanLink","rel"],"mappings":"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","file":"static/js/7.593f9ed3.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef, useMemo } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Box } from '@material-ui/core';\r\nimport { ReactComponent as SearchIcon } from 'assets/images/SearchIcon.svg';\r\nimport { client } from 'apollo/client';\r\nimport { TOKEN_SEARCH, PAIR_SEARCH, TOKEN_INFO_OLD } from 'apollo/queries';\r\nimport {\r\n  getAllTokensOnUniswap,\r\n  getAllPairsOnUniswap,\r\n  getBlockFromTimestamp,\r\n  getTokenFromAddress,\r\n} from 'utils';\r\nimport { GlobalConst, MATIC_CHAIN } from 'constants/index';\r\nimport { CurrencyLogo, DoubleCurrencyLogo } from 'components';\r\nimport { ChainId, Token } from '@uniswap/sdk';\r\nimport { getAddress } from '@ethersproject/address';\r\nimport 'components/styles/SearchWidget.scss';\r\nimport { useTranslation } from 'react-i18next';\r\nimport dayjs from 'dayjs';\r\nimport utc from 'dayjs/plugin/utc';\r\nimport useDebouncedChangeHandler from 'utils/useDebouncedChangeHandler';\r\nimport { useSelectedTokenList } from 'state/lists/hooks';\r\ndayjs.extend(utc);\r\n\r\nconst AnalyticsSearch: React.FC = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  const [searchVal, setSearchVal] = useState('');\r\n  const [searchValInput, setSearchValInput] = useDebouncedChangeHandler(\r\n    searchVal,\r\n    setSearchVal,\r\n  );\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n  const menuRef = useRef<any>(null);\r\n  const wrapperRef = useRef<any>(null);\r\n  const [searchedTokens, setSearchedTokens] = useState<any[]>([]);\r\n  const [searchedPairs, setSearchedPairs] = useState<any[]>([]);\r\n  const [tokensShown, setTokensShown] = useState(3);\r\n  const [pairsShown, setPairsShown] = useState(3);\r\n  const tokenMap = useSelectedTokenList();\r\n\r\n  const escapeRegExp = (str: string) => {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n  };\r\n\r\n  const filteredTokens = useMemo(() => {\r\n    const uniqueTokens: any[] = [];\r\n    const found: any = {};\r\n    if (searchedTokens && searchedTokens.length > 0) {\r\n      searchedTokens.map((token) => {\r\n        if (!found[token.id]) {\r\n          found[token.id] = true;\r\n          uniqueTokens.push(token);\r\n        }\r\n        return true;\r\n      });\r\n    }\r\n    const filtered =\r\n      uniqueTokens && uniqueTokens.length > 0\r\n        ? uniqueTokens\r\n            .sort((tokenA, tokenB) => {\r\n              return tokenA.oneDayVolumeUSD > tokenB.oneDayVolumeUSD ? -1 : 1;\r\n            })\r\n            .filter((token) => {\r\n              if (GlobalConst.blacklists.TOKEN_BLACKLIST.includes(token.id)) {\r\n                return false;\r\n              }\r\n              const regexMatches = Object.keys(token).map((tokenEntryKey) => {\r\n                const isAddress = searchVal.slice(0, 2) === '0x';\r\n                if (tokenEntryKey === 'id' && isAddress) {\r\n                  return token[tokenEntryKey].match(\r\n                    new RegExp(escapeRegExp(searchVal), 'i'),\r\n                  );\r\n                }\r\n                if (tokenEntryKey === 'symbol' && !isAddress) {\r\n                  return token[tokenEntryKey].match(\r\n                    new RegExp(escapeRegExp(searchVal), 'i'),\r\n                  );\r\n                }\r\n                if (tokenEntryKey === 'name' && !isAddress) {\r\n                  return token[tokenEntryKey].match(\r\n                    new RegExp(escapeRegExp(searchVal), 'i'),\r\n                  );\r\n                }\r\n                return false;\r\n              });\r\n              return regexMatches.some((m) => m);\r\n            })\r\n        : [];\r\n    return filtered;\r\n  }, [searchedTokens, searchVal]);\r\n\r\n  const filteredPairs = useMemo(() => {\r\n    const uniquePairs: any[] = [];\r\n    const pairsFound: any = {};\r\n    if (searchedPairs && searchedPairs.length > 0)\r\n      searchedPairs.map((pair) => {\r\n        if (!pairsFound[pair.id]) {\r\n          pairsFound[pair.id] = true;\r\n          uniquePairs.push(pair);\r\n        }\r\n        return true;\r\n      });\r\n\r\n    const filtered = uniquePairs\r\n      ? uniquePairs\r\n          .sort((pairA, pairB) => {\r\n            const pairAReserveETH = Number(pairA?.trackedReserveETH ?? 0);\r\n            const pairBReserveETH = Number(pairB?.trackedReserveETH ?? 0);\r\n            return pairAReserveETH > pairBReserveETH ? -1 : 1;\r\n          })\r\n          .filter((pair) => {\r\n            if (GlobalConst.blacklists.PAIR_BLACKLIST.includes(pair.id)) {\r\n              return false;\r\n            }\r\n            if (searchVal && searchVal.includes(' ')) {\r\n              const pairA = searchVal.split(' ')[0]?.toUpperCase();\r\n              const pairB = searchVal.split(' ')[1]?.toUpperCase();\r\n              return (\r\n                (pair.token0.symbol.includes(pairA) ||\r\n                  pair.token0.symbol.includes(pairB)) &&\r\n                (pair.token1.symbol.includes(pairA) ||\r\n                  pair.token1.symbol.includes(pairB))\r\n              );\r\n            }\r\n            if (searchVal && searchVal.includes('-')) {\r\n              const pairA = searchVal.split('-')[0]?.toUpperCase();\r\n              const pairB = searchVal.split('-')[1]?.toUpperCase();\r\n              return (\r\n                (pair.token0.symbol.includes(pairA) ||\r\n                  pair.token0.symbol.includes(pairB)) &&\r\n                (pair.token1.symbol.includes(pairA) ||\r\n                  pair.token1.symbol.includes(pairB))\r\n              );\r\n            }\r\n            const regexMatches = Object.keys(pair).map((field) => {\r\n              const isAddress = searchVal.slice(0, 2) === '0x';\r\n              if (field === 'id' && isAddress) {\r\n                return pair[field].match(\r\n                  new RegExp(escapeRegExp(searchVal), 'i'),\r\n                );\r\n              }\r\n              if (field === 'token0' || field === 'token1') {\r\n                return (\r\n                  pair[field].symbol.match(\r\n                    new RegExp(escapeRegExp(searchVal), 'i'),\r\n                  ) ||\r\n                  pair[field].name.match(\r\n                    new RegExp(escapeRegExp(searchVal), 'i'),\r\n                  )\r\n                );\r\n              }\r\n              return false;\r\n            });\r\n            return regexMatches.some((m) => m);\r\n          })\r\n      : [];\r\n    return filtered;\r\n  }, [searchedPairs, searchVal]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const allTokensUniswap = await getAllTokensOnUniswap();\r\n        const allPairsUniswap = await getAllPairsOnUniswap();\r\n        let allTokens = allTokensUniswap ?? [];\r\n        let allPairs = allPairsUniswap ?? [];\r\n        if (searchVal.length > 0) {\r\n          const tokens = await client.query({\r\n            query: TOKEN_SEARCH,\r\n            variables: {\r\n              value: searchVal ? searchVal.toUpperCase() : '',\r\n              id: searchVal,\r\n            },\r\n          });\r\n\r\n          const pairs = await client.query({\r\n            query: PAIR_SEARCH,\r\n            variables: {\r\n              tokens: tokens.data.asSymbol?.map((t: any) => t.id),\r\n              id: searchVal,\r\n            },\r\n          });\r\n\r\n          const foundPairs = pairs.data.as0\r\n            .concat(pairs.data.as1)\r\n            .concat(pairs.data.asAddress);\r\n\r\n          allPairs = allPairs.concat(\r\n            foundPairs.filter((searchedPair: any) => {\r\n              let included = false;\r\n              allPairs.map((pair) => {\r\n                if (pair.id === searchedPair.id) {\r\n                  included = true;\r\n                }\r\n                return true;\r\n              });\r\n              return !included;\r\n            }),\r\n          );\r\n\r\n          const foundTokens = tokens.data.asSymbol\r\n            .concat(tokens.data.asAddress)\r\n            .concat(tokens.data.asName);\r\n\r\n          allTokens = allTokens.concat(\r\n            foundTokens.filter((searchedToken: any) => {\r\n              let included = false;\r\n              allTokens.map((token) => {\r\n                if (token.id === searchedToken.id) {\r\n                  included = true;\r\n                }\r\n                return true;\r\n              });\r\n              return !included;\r\n            }),\r\n          );\r\n        }\r\n\r\n        const foundTokensWithData = await Promise.all(\r\n          allTokens.map(async (token: any) => {\r\n            const utcCurrentTime = dayjs();\r\n            const utcOneDayBack = utcCurrentTime.subtract(1, 'day').unix();\r\n            const oneDayBlock = await getBlockFromTimestamp(utcOneDayBack);\r\n            const oneDayResult = await client.query({\r\n              query: TOKEN_INFO_OLD(oneDayBlock, token.id),\r\n              fetchPolicy: 'network-only',\r\n            });\r\n            if (\r\n              oneDayResult &&\r\n              oneDayResult.data &&\r\n              oneDayResult.data.tokens &&\r\n              oneDayResult.data.tokens.length > 0\r\n            ) {\r\n              const oneDayHistory = oneDayResult.data.tokens[0];\r\n              const oneDayVolumeUSD =\r\n                (token?.tradeVolumeUSD ?? 0) -\r\n                (oneDayHistory?.tradeVolumeUSD ?? 0);\r\n              return { ...token, oneDayVolumeUSD };\r\n            }\r\n            return token;\r\n          }),\r\n        );\r\n        setSearchedTokens(foundTokensWithData);\r\n        setSearchedPairs(allPairs);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [searchVal]);\r\n\r\n  const handleClick = (e: any) => {\r\n    if (\r\n      !(menuRef.current && menuRef.current.contains(e.target)) &&\r\n      !(wrapperRef.current && wrapperRef.current.contains(e.target))\r\n    ) {\r\n      setPairsShown(3);\r\n      setTokensShown(3);\r\n      setMenuOpen(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleClick);\r\n    return () => {\r\n      document.removeEventListener('click', handleClick);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Box className='searchWidgetWrapper'>\r\n      <Box className='searchWidgetInput'>\r\n        <input\r\n          placeholder={t('searchTokenPair')}\r\n          value={searchValInput}\r\n          ref={menuRef}\r\n          onFocus={() => setMenuOpen(true)}\r\n          onChange={(evt) => setSearchValInput(evt.target.value)}\r\n        />\r\n        <Box display='flex'>\r\n          <SearchIcon />\r\n        </Box>\r\n      </Box>\r\n      {menuOpen && (\r\n        <div ref={wrapperRef} className='searchWidgetContent'>\r\n          <h6>{t('pairs')}</h6>\r\n          {filteredPairs.slice(0, pairsShown).map((val, ind) => {\r\n            const currency0 = getTokenFromAddress(\r\n              val.token0.id,\r\n              MATIC_CHAIN,\r\n              tokenMap,\r\n              [\r\n                new Token(\r\n                  MATIC_CHAIN,\r\n                  getAddress(val.token0.id),\r\n                  val.token0.decimals,\r\n                ),\r\n              ],\r\n            );\r\n            const currency1 = getTokenFromAddress(\r\n              val.token1.id,\r\n              MATIC_CHAIN,\r\n              tokenMap,\r\n              [\r\n                new Token(\r\n                  MATIC_CHAIN,\r\n                  getAddress(val.token1.id),\r\n                  val.token1.decimals,\r\n                ),\r\n              ],\r\n            );\r\n            return (\r\n              <Box\r\n                key={ind}\r\n                className='searchWidgetRow'\r\n                onClick={() => {\r\n                  history.push(`/analytics/pair/${val.id}`);\r\n                  setMenuOpen(false);\r\n                }}\r\n              >\r\n                <DoubleCurrencyLogo\r\n                  currency0={currency0}\r\n                  currency1={currency1}\r\n                  size={28}\r\n                />\r\n                <small>\r\n                  {val.token0.symbol} - {val.token1.symbol} {t('pair')}\r\n                </small>\r\n              </Box>\r\n            );\r\n          })}\r\n          <Box\r\n            className='searchWidgetShowMore'\r\n            onClick={() => setPairsShown(pairsShown + 5)}\r\n          >\r\n            <small>{t('showMore')}</small>\r\n          </Box>\r\n          <h6>{t('tokens')}</h6>\r\n          {filteredTokens.slice(0, tokensShown).map((val, ind) => {\r\n            const currency = getTokenFromAddress(\r\n              getAddress(val.id),\r\n              MATIC_CHAIN,\r\n              tokenMap,\r\n              [new Token(MATIC_CHAIN, getAddress(val.id), val.decimals)],\r\n            );\r\n            return (\r\n              <Box\r\n                key={ind}\r\n                className='searchWidgetRow'\r\n                onClick={() => {\r\n                  history.push(`/analytics/token/${val.id}`);\r\n                  setMenuOpen(false);\r\n                }}\r\n              >\r\n                <CurrencyLogo currency={currency} size='28px' />\r\n                <small>\r\n                  {val.name} ({val.symbol})\r\n                </small>\r\n              </Box>\r\n            );\r\n          })}\r\n          <Box\r\n            className='searchWidgetShowMore'\r\n            onClick={() => setTokensShown(tokensShown + 5)}\r\n          >\r\n            <small>{t('showMore')}</small>\r\n          </Box>\r\n        </div>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default React.memo(AnalyticsSearch);\r\n","import React from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { Box, useMediaQuery, useTheme } from '@material-ui/core';\r\nimport { ArrowForwardIos } from '@material-ui/icons';\r\nimport AnalyticsSearch from 'components/AnalyticsSearch';\r\nimport { shortenAddress } from 'utils';\r\nimport 'pages/styles/analytics.scss';\r\nimport { useTranslation } from 'react-i18next';\r\nimport AdsSlider from 'components/AdsSlider';\r\n\r\ninterface AnalyticHeaderProps {\r\n  data?: any;\r\n  type?: string;\r\n}\r\n\r\nconst AnalyticsHeader: React.FC<AnalyticHeaderProps> = ({ data, type }) => {\r\n  const history = useHistory();\r\n  const { pathname } = useLocation();\r\n  const { t } = useTranslation();\r\n  const { breakpoints } = useTheme();\r\n  const isMobile = useMediaQuery(breakpoints.down('xs'));\r\n\r\n  return (\r\n    <Box width='100%' mb={3}>\r\n      <Box mb={3}>\r\n        <h4>{t('quickswapAnalytics')}</h4>\r\n      </Box>\r\n      <Box maxWidth={isMobile ? '320px' : '1136px'} margin='0 auto 24px'>\r\n        <AdsSlider sort='analytics' />\r\n      </Box>\r\n      <Box\r\n        mb={4}\r\n        position='relative'\r\n        className='flex justify-between flex-wrap'\r\n      >\r\n        <Box marginY={1.5} className='flex items-center'>\r\n          {type && data && (\r\n            <Box className='flex items-center text-hint'>\r\n              <span\r\n                className='link'\r\n                onClick={() => {\r\n                  history.push('/analytics');\r\n                }}\r\n              >\r\n                {t('analytics')}\r\n              </span>\r\n              <ArrowForwardIos style={{ width: 16 }} />\r\n              <span\r\n                className='link'\r\n                onClick={() => {\r\n                  history.push(`/analytics/${type}s`);\r\n                }}\r\n              >\r\n                {type === 'token' ? t('tokens') : t('pairs')}\r\n              </span>\r\n              <ArrowForwardIos style={{ width: 16 }} />\r\n              <span>\r\n                <span className='text-gray19'>\r\n                  {type === 'token'\r\n                    ? data.symbol\r\n                    : `${data.token0.symbol}/${data.token1.symbol}`}\r\n                </span>\r\n                ({shortenAddress(data.id)})\r\n              </span>\r\n            </Box>\r\n          )}\r\n          {!type && (\r\n            <>\r\n              <Box\r\n                className={`topTab ${pathname.indexOf('pair') === -1 &&\r\n                  pathname.indexOf('token') === -1 &&\r\n                  'selectedTab'}`}\r\n                onClick={() => history.push(`/analytics`)}\r\n              >\r\n                <p>{t('overview')}</p>\r\n              </Box>\r\n              <Box\r\n                className={`topTab ${pathname.indexOf('token') > -1 &&\r\n                  'selectedTab'}`}\r\n                onClick={() => history.push(`/analytics/tokens`)}\r\n              >\r\n                <p>{t('tokens')}</p>\r\n              </Box>\r\n              <Box\r\n                className={`topTab ${pathname.indexOf('pair') > -1 &&\r\n                  'selectedTab'}`}\r\n                onClick={() => history.push(`/analytics/pairs`)}\r\n              >\r\n                <p>{t('pairs')}</p>\r\n              </Box>\r\n            </>\r\n          )}\r\n        </Box>\r\n\r\n        <AnalyticsSearch />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AnalyticsHeader;\r\n","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M5.88 4.12L13.76 12l-7.88 7.88L8 22l10-10L8 2z\"\n}), 'ArrowForwardIos');","import React, { useState, useEffect, useMemo } from 'react';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport { Box } from '@material-ui/core';\r\nimport { Skeleton } from '@material-ui/lab';\r\nimport dayjs from 'dayjs';\r\nimport {\r\n  formatCompact,\r\n  getPairChartData,\r\n  getFormattedPrice,\r\n  getPriceClass,\r\n  getChartDates,\r\n  getChartStartTime,\r\n  getLimitedData,\r\n  getYAXISValuesAnalytics,\r\n} from 'utils';\r\nimport { AreaChart, ChartType } from 'components';\r\nimport { GlobalConst, GlobalData } from 'constants/index';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst CHART_VOLUME = 0;\r\nconst CHART_LIQUIDITY = 1;\r\nconst CHART_FEES = 2;\r\n\r\nconst AnalyticsPairChart: React.FC<{ pairData: any }> = ({ pairData }) => {\r\n  const { t } = useTranslation();\r\n  const match = useRouteMatch<{ id: string }>();\r\n  const pairAddress = match.params.id;\r\n  const [pairChartData, setPairChartData] = useState<any[] | null>(null);\r\n  const [durationIndex, setDurationIndex] = useState(\r\n    GlobalConst.analyticChart.ONE_MONTH_CHART,\r\n  );\r\n\r\n  const usingUtVolume =\r\n    pairData &&\r\n    pairData.oneDayVolumeUSD === 0 &&\r\n    !!pairData.oneDayVolumeUntracked;\r\n  const fees =\r\n    pairData && (pairData.oneDayVolumeUSD || pairData.oneDayVolumeUSD === 0)\r\n      ? usingUtVolume\r\n        ? (\r\n            Number(pairData.oneDayVolumeUntracked) *\r\n            GlobalConst.utils.FEEPERCENT\r\n          ).toLocaleString()\r\n        : (\r\n            Number(pairData.oneDayVolumeUSD) * GlobalConst.utils.FEEPERCENT\r\n          ).toLocaleString()\r\n      : '-';\r\n  const [chartIndex, setChartIndex] = useState(CHART_VOLUME);\r\n  const chartIndexes = [CHART_VOLUME, CHART_LIQUIDITY, CHART_FEES];\r\n  const chartIndexTexts = [t('volume'), t('liquidity'), t('fees')];\r\n\r\n  const chartData = useMemo(() => {\r\n    if (!pairChartData) return;\r\n    return pairChartData.map((item: any) => {\r\n      switch (chartIndex) {\r\n        case CHART_VOLUME:\r\n          return Number(item.dailyVolumeUSD);\r\n        case CHART_LIQUIDITY:\r\n          return Number(item.reserveUSD);\r\n        case CHART_FEES:\r\n          return Number(item.dailyVolumeUSD) * GlobalConst.utils.FEEPERCENT;\r\n        default:\r\n          return;\r\n      }\r\n    });\r\n  }, [pairChartData, chartIndex]);\r\n\r\n  const currentData = useMemo(() => {\r\n    if (!pairData) return;\r\n    switch (chartIndex) {\r\n      case CHART_VOLUME:\r\n        return pairData.oneDayVolumeUSD;\r\n      case CHART_LIQUIDITY:\r\n        return pairData.reserveUSD ?? pairData.trackedReserveUSD;\r\n      case CHART_FEES:\r\n        return fees;\r\n      default:\r\n        return;\r\n    }\r\n  }, [pairData, chartIndex, fees]);\r\n\r\n  const currentPercent = useMemo(() => {\r\n    if (!pairData) return;\r\n    switch (chartIndex) {\r\n      case CHART_VOLUME:\r\n        return pairData.volumeChangeUSD;\r\n      case CHART_LIQUIDITY:\r\n        return pairData.liquidityChangeUSD;\r\n      case CHART_FEES:\r\n        return usingUtVolume\r\n          ? pairData.volumeChangeUntracked\r\n          : pairData.volumeChangeUSD;\r\n      default:\r\n        return;\r\n    }\r\n  }, [pairData, chartIndex, usingUtVolume]);\r\n\r\n  useEffect(() => {\r\n    async function fetchPairChartData() {\r\n      setPairChartData(null);\r\n      const chartData = await getPairChartData(\r\n        pairAddress,\r\n        durationIndex === GlobalConst.analyticChart.ALL_CHART\r\n          ? 0\r\n          : getChartStartTime(durationIndex),\r\n      );\r\n      if (chartData && chartData.length > 0) {\r\n        const newChartData = getLimitedData(\r\n          chartData,\r\n          GlobalConst.analyticChart.CHART_COUNT,\r\n        );\r\n        setPairChartData(newChartData);\r\n      }\r\n    }\r\n    fetchPairChartData();\r\n  }, [pairAddress, durationIndex]);\r\n\r\n  const currentPercentClass = getPriceClass(Number(currentPercent));\r\n\r\n  return (\r\n    <>\r\n      <Box className='flex flex-wrap justify-between'>\r\n        <Box mt={1.5}>\r\n          <span>{chartIndexTexts[chartIndex]}</span>\r\n          <Box mt={1}>\r\n            {currentPercent && currentData ? (\r\n              <>\r\n                <Box className='flex items-center'>\r\n                  <h4>\r\n                    $\r\n                    {currentData > 100000\r\n                      ? formatCompact(currentData)\r\n                      : currentData.toLocaleString()}\r\n                  </h4>\r\n                  <Box\r\n                    className={`priceChangeWrapper ${currentPercentClass}`}\r\n                    ml={1}\r\n                  >\r\n                    <small>{getFormattedPrice(Number(currentPercent))}%</small>\r\n                  </Box>\r\n                </Box>\r\n                <Box>\r\n                  <span>{dayjs().format('MMM DD, YYYY')}</span>\r\n                </Box>\r\n              </>\r\n            ) : (\r\n              <Skeleton variant='rect' width='120px' height='30px' />\r\n            )}\r\n          </Box>\r\n        </Box>\r\n        <Box className='flex flex-col items-end'>\r\n          <Box mt={1.5}>\r\n            <ChartType\r\n              chartTypes={chartIndexes}\r\n              typeTexts={chartIndexTexts}\r\n              chartType={chartIndex}\r\n              setChartType={setChartIndex}\r\n            />\r\n          </Box>\r\n          <Box mt={1.5}>\r\n            <ChartType\r\n              chartTypes={GlobalData.analytics.CHART_DURATIONS}\r\n              typeTexts={GlobalData.analytics.CHART_DURATION_TEXTS}\r\n              chartType={durationIndex}\r\n              setChartType={setDurationIndex}\r\n            />\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <Box mt={2} width={1}>\r\n        {chartData && pairChartData ? (\r\n          <AreaChart\r\n            data={chartData}\r\n            yAxisValues={getYAXISValuesAnalytics(chartData)}\r\n            dates={pairChartData.map((value: any) => value.date)}\r\n            width='100%'\r\n            height={240}\r\n            categories={getChartDates(pairChartData, durationIndex)}\r\n          />\r\n        ) : (\r\n          <Skeleton variant='rect' width='100%' height={217} />\r\n        )}\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AnalyticsPairChart;\r\n","import React, { useState, useEffect, useMemo } from 'react';\r\nimport { useHistory, useRouteMatch, Link } from 'react-router-dom';\r\nimport { Box, Grid } from '@material-ui/core';\r\nimport { Skeleton } from '@material-ui/lab';\r\nimport { ChainId, Token } from '@uniswap/sdk';\r\nimport {\r\n  shortenAddress,\r\n  getEtherscanLink,\r\n  getPairTransactions,\r\n  getBulkPairData,\r\n  formatNumber,\r\n  getTokenFromAddress,\r\n} from 'utils';\r\nimport { useActiveWeb3React } from 'hooks';\r\nimport {\r\n  CurrencyLogo,\r\n  DoubleCurrencyLogo,\r\n  TransactionsTable,\r\n} from 'components';\r\nimport { getAddress } from '@ethersproject/address';\r\nimport { GlobalConst, TxnType } from 'constants/index';\r\nimport 'pages/styles/analytics.scss';\r\nimport AnalyticsHeader from 'pages/AnalyticsPage/AnalyticsHeader';\r\nimport AnalyticsPairChart from './AnalyticsPairChart';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useEthPrice } from 'state/application/hooks';\r\nimport { useSelectedTokenList } from 'state/lists/hooks';\r\n\r\nconst AnalyticsPairDetails: React.FC = () => {\r\n  const { t } = useTranslation();\r\n  const history = useHistory();\r\n  const match = useRouteMatch<{ id: string }>();\r\n  const pairAddress = match.params.id;\r\n  const tokenMap = useSelectedTokenList();\r\n  const [pairData, setPairData] = useState<any>(null);\r\n  const [pairTransactions, setPairTransactions] = useState<any>(null);\r\n  const pairTransactionsList = useMemo(() => {\r\n    if (pairTransactions) {\r\n      const mints = pairTransactions.mints.map((item: any) => {\r\n        return { ...item, type: TxnType.ADD };\r\n      });\r\n      const swaps = pairTransactions.swaps.map((item: any) => {\r\n        const amount0 = item.amount0Out > 0 ? item.amount0Out : item.amount1Out;\r\n        const amount1 = item.amount0In > 0 ? item.amount0In : item.amount1In;\r\n        const token0 =\r\n          item.amount0Out > 0 ? item.pair.token0 : item.pair.token1;\r\n        const token1 =\r\n          item.amount0Out > 0 ? item.pair.token1 : item.pair.token0;\r\n        return {\r\n          ...item,\r\n          amount0,\r\n          amount1,\r\n          pair: { token0, token1 },\r\n          type: TxnType.SWAP,\r\n        };\r\n      });\r\n      const burns = pairTransactions.burns.map((item: any) => {\r\n        return { ...item, type: TxnType.REMOVE };\r\n      });\r\n      return mints.concat(swaps).concat(burns);\r\n    } else {\r\n      return null;\r\n    }\r\n  }, [pairTransactions]);\r\n  const { chainId } = useActiveWeb3React();\r\n  const currency0 = pairData\r\n    ? getTokenFromAddress(pairData.token0.id, ChainId.MATIC, tokenMap, [\r\n        new Token(\r\n          ChainId.MATIC,\r\n          getAddress(pairData.token0.id),\r\n          pairData.token0.decimals,\r\n        ),\r\n      ])\r\n    : undefined;\r\n  const currency1 = pairData\r\n    ? getTokenFromAddress(pairData.token1.id, ChainId.MATIC, tokenMap, [\r\n        new Token(\r\n          ChainId.MATIC,\r\n          getAddress(pairData.token1.id),\r\n          pairData.token1.decimals,\r\n        ),\r\n      ])\r\n    : undefined;\r\n\r\n  const token0Rate =\r\n    pairData && pairData.reserve0 && pairData.reserve1\r\n      ? Number(pairData.reserve1) / Number(pairData.reserve0) >= 0.0001\r\n        ? (Number(pairData.reserve1) / Number(pairData.reserve0)).toFixed(\r\n            Number(pairData.reserve1) / Number(pairData.reserve0) > 1 ? 2 : 4,\r\n          )\r\n        : '< 0.0001'\r\n      : '-';\r\n  const token1Rate =\r\n    pairData && pairData.reserve0 && pairData.reserve1\r\n      ? Number(pairData.reserve0) / Number(pairData.reserve1) >= 0.0001\r\n        ? (Number(pairData.reserve0) / Number(pairData.reserve1)).toFixed(\r\n            Number(pairData.reserve0) / Number(pairData.reserve1) > 1 ? 2 : 4,\r\n          )\r\n        : '< 0.0001'\r\n      : '-';\r\n  const usingUtVolume =\r\n    pairData &&\r\n    pairData.oneDayVolumeUSD === 0 &&\r\n    !!pairData.oneDayVolumeUntracked;\r\n  const fees =\r\n    pairData && (pairData.oneDayVolumeUSD || pairData.oneDayVolumeUSD === 0)\r\n      ? usingUtVolume\r\n        ? formatNumber(\r\n            Number(pairData.oneDayVolumeUntracked) *\r\n              GlobalConst.utils.FEEPERCENT,\r\n          )\r\n        : formatNumber(\r\n            Number(pairData.oneDayVolumeUSD) * GlobalConst.utils.FEEPERCENT,\r\n          )\r\n      : '-';\r\n  const { ethPrice } = useEthPrice();\r\n\r\n  useEffect(() => {\r\n    async function checkEthPrice() {\r\n      if (ethPrice.price) {\r\n        const pairInfo = await getBulkPairData([pairAddress], ethPrice.price);\r\n        if (pairInfo && pairInfo.length > 0) {\r\n          setPairData(pairInfo[0]);\r\n        }\r\n      }\r\n    }\r\n    async function fetchTransctions() {\r\n      const transactions = await getPairTransactions(pairAddress);\r\n      if (transactions) {\r\n        setPairTransactions(transactions);\r\n      }\r\n    }\r\n    checkEthPrice();\r\n    fetchTransctions();\r\n  }, [pairAddress, ethPrice.price]);\r\n\r\n  useEffect(() => {\r\n    setPairData(null);\r\n    setPairTransactions(null);\r\n  }, [pairAddress]);\r\n\r\n  return (\r\n    <>\r\n      <AnalyticsHeader type='pair' data={pairData} />\r\n      {pairData ? (\r\n        <>\r\n          <Box width={1} className='flex flex-wrap justify-between'>\r\n            <Box>\r\n              <Box className='flex items-center'>\r\n                <DoubleCurrencyLogo\r\n                  currency0={currency0}\r\n                  currency1={currency1}\r\n                  size={32}\r\n                />\r\n                <Box ml={1}>\r\n                  <p className='heading1'>\r\n                    <Link to={`/analytics/token/${pairData.token0.id}`}>\r\n                      {pairData.token0.symbol}\r\n                    </Link>{' '}\r\n                    /{' '}\r\n                    <Link to={`/analytics/token/${pairData.token1.id}`}>\r\n                      {pairData.token1.symbol}\r\n                    </Link>\r\n                  </p>\r\n                </Box>\r\n              </Box>\r\n              <Box mt={2} display='flex'>\r\n                <Box className='analyticsPairRate'>\r\n                  <CurrencyLogo currency={currency0} size='16px' />\r\n                  <small style={{ marginLeft: 6 }}>\r\n                    1 {pairData.token0.symbol} = {token0Rate}{' '}\r\n                    {pairData.token1.symbol}\r\n                  </small>\r\n                </Box>\r\n                <Box ml={1} className='analyticsPairRate'>\r\n                  <CurrencyLogo currency={currency1} size='16px' />\r\n                  <small style={{ marginLeft: 6 }}>\r\n                    1 {pairData.token1.symbol} = {token1Rate}{' '}\r\n                    {pairData.token0.symbol}\r\n                  </small>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n            <Box my={2} display='flex'>\r\n              <Box\r\n                className='button border-primary'\r\n                mr={1.5}\r\n                onClick={() => {\r\n                  history.push(\r\n                    `/pools?currency0=${pairData.token0.id}&currency1=${pairData.token1.id}`,\r\n                  );\r\n                }}\r\n              >\r\n                <small>{t('addLiquidity')}</small>\r\n              </Box>\r\n              <Box\r\n                className='button filledButton'\r\n                onClick={() => {\r\n                  history.push(\r\n                    `/swap?currency0=${pairData.token0.id}&currency1=${pairData.token1.id}`,\r\n                  );\r\n                }}\r\n              >\r\n                <small>{t('swap')}</small>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n          <Box width={1} className='panel' mt={4}>\r\n            <Grid container>\r\n              <Grid item xs={12} sm={12} md={6}>\r\n                <AnalyticsPairChart pairData={pairData} />\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} md={6}>\r\n                <Box className='analyticsDetailsInfo'>\r\n                  <Box>\r\n                    <Box width={212}>\r\n                      <Box>\r\n                        <span className='text-disabled'>\r\n                          {t('totalTokensLocked')}\r\n                        </span>\r\n                        <Box\r\n                          mt={1.5}\r\n                          className='bg-gray2'\r\n                          borderRadius={8}\r\n                          padding={1.5}\r\n                        >\r\n                          <Box className='flex items-center justify-between'>\r\n                            <Box className='flex items-center'>\r\n                              <CurrencyLogo currency={currency0} size='16px' />\r\n                              <span style={{ marginLeft: 6 }}>\r\n                                {pairData.token0.symbol} :\r\n                              </span>\r\n                            </Box>\r\n                            <span>{formatNumber(pairData.reserve0)}</span>\r\n                          </Box>\r\n                          <Box\r\n                            mt={1}\r\n                            className='flex items-center justify-between'\r\n                          >\r\n                            <Box className='flex items-center'>\r\n                              <CurrencyLogo currency={currency1} size='16px' />\r\n                              <span style={{ marginLeft: 6 }}>\r\n                                {pairData.token1.symbol} :\r\n                              </span>\r\n                            </Box>\r\n                            <span>{formatNumber(pairData.reserve1)}</span>\r\n                          </Box>\r\n                        </Box>\r\n                      </Box>\r\n                      <Box mt={4}>\r\n                        <span className='text-disabled'>\r\n                          {t('7dTradingVol')}\r\n                        </span>\r\n                        <h5>${formatNumber(pairData.oneWeekVolumeUSD)}</h5>\r\n                      </Box>\r\n                      <Box mt={4}>\r\n                        <span className='text-disabled'>{t('24hFees')}</span>\r\n                        <h5>${fees}</h5>\r\n                      </Box>\r\n                    </Box>\r\n                    <Box width={140}>\r\n                      <span className='text-disabled'>\r\n                        {t('totalLiquidity')}\r\n                      </span>\r\n                      <h5>\r\n                        $\r\n                        {formatNumber(\r\n                          pairData.reserveUSD\r\n                            ? pairData.reserveUSD\r\n                            : pairData.trackedReserveUSD,\r\n                        )}\r\n                      </h5>\r\n                      <Box mt={4}>\r\n                        <span className='text-disabled'>\r\n                          {t('24hTradingVol1')}\r\n                        </span>\r\n                        <h5>${formatNumber(pairData.oneDayVolumeUSD)}</h5>\r\n                      </Box>\r\n                      <Box mt={4}>\r\n                        <span className='text-disabled'>\r\n                          {t('contractAddress')}\r\n                        </span>\r\n                        <h5 className='text-primary'>\r\n                          {chainId ? (\r\n                            <a\r\n                              href={getEtherscanLink(\r\n                                chainId,\r\n                                pairData.id,\r\n                                'address',\r\n                              )}\r\n                              target='_blank'\r\n                              rel='noopener noreferrer'\r\n                              className='text-primary no-decoration'\r\n                            >\r\n                              {shortenAddress(pairData.id)}\r\n                            </a>\r\n                          ) : (\r\n                            shortenAddress(pairData.id)\r\n                          )}\r\n                        </h5>\r\n                      </Box>\r\n                    </Box>\r\n                  </Box>\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n          <Box width={1} mt={5}>\r\n            <p>{t('transactions')}</p>\r\n          </Box>\r\n          <Box width={1} className='panel' mt={4}>\r\n            {pairTransactionsList ? (\r\n              <TransactionsTable data={pairTransactionsList} />\r\n            ) : (\r\n              <Skeleton variant='rect' width='100%' height={150} />\r\n            )}\r\n          </Box>\r\n        </>\r\n      ) : (\r\n        <Skeleton width='100%' height={100} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AnalyticsPairDetails;\r\n"],"sourceRoot":""}