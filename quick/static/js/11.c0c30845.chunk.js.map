{"version":3,"sources":["assets/images/HelpIcon1.svg","assets/images/SettingsIcon.svg","pages/SwapPage/SwapMain.tsx","pages/SwapPage/LiquidityPoolRow.tsx","pages/SwapPage/LiquidityPools.tsx","pages/SwapPage/SwapProChart.tsx","pages/SwapPage/SwapProChartTrade.tsx","pages/SwapPage/SwapInfoTx.tsx","pages/SwapPage/SwapProInfo.tsx","pages/SwapPage/SwapProFilter.tsx","pages/SwapPage/SwapPage.tsx"],"names":["_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgHelpIcon1","_ref","svgRef","title","titleId","props","xmlns","width","height","ref","id","d","transform","style","fill","ForwardRef","SvgSettingsIcon","rx","SwapMain","useState","swapIndex","setSwapIndex","openSettingsModal","setOpenSettingsModal","useIsProMode","isProMode","updateIsProMode","parsedQuery","useParsedQueryString","currency0","useCurrency","undefined","currency1","t","useTranslation","open","onClose","Box","className","display","onClick","my","mr","marginRight","toggled","onToggle","SettingsIcon","padding","mt","textAlign","Trans","i18nKey","components","bold","alink","rel","href","LiquidityPoolRow","pair","breakpoints","useTheme","daysCurrentYear","getDaysCurrentYear","isMobile","useMediaQuery","down","dayVolumeUSD","Number","oneDayVolumeUSD","oneDayVolumeUntracked","GlobalConst","utils","FEEPERCENT","trackReserveUSD","trackedReserveUSD","reserveUSD","apy","isNaN","liquidity","volume","token0","token1","size","marginLeft","symbol","toUpperCase","formatCompact","toFixed","React","memo","LiquidityPools","token2","liquidityPoolClosed","setLiquidityPoolClosed","liquidityFilterIndex","setLiquidityFilterIndex","tokenPairs","updateTokenPairs","token1Address","address","toLowerCase","token2Address","allTokenList","useAllTokens","ethPrice","useEthPrice","liquidityPairs","useMemo","filter","slice","whiteListAddressList","map","item","useEffect","price","a","getTokenPairs","formattedPairs","includes","getBulkPairData","pairData","marginBottom","KeyboardArrowDown","KeyboardArrowUp","Divider","ind","SwapProChart","pairAddress","pairName","pairTokenReversed","src","frameBorder","SwapProChartTrade","showChart","showTrades","transactions","chainId","useActiveWeb3React","TradesTable","data","Table","fixedHeaderContent","align","itemContent","index","tx","txType","amount0In","txAmount0","amount0Out","txAmount1","amount1In","amount1Out","token1Amount","token2Amount","txPrice","amountUSD","dayjs","unix","transaction","timestamp","format","formatNumber","getEtherscanLink","shortenTx","orientation","minSize","addresses","MATIC_USDT_PAIR","Height","extend","utc","SwapInfoTx","txFilter","setTxFilter","subtractTimeAmount","split","subtractTimeType","firstTime","subtract","filteredTxs","filteredBuyTxs","filteredSellTxs","reduce","total","value","onChange","items","label","Skeleton","SwapProInfo","token1Data","setToken1Data","token2Data","setToken2Data","unwrappedToken","currency2","oneDayPrice","getTokenInfo","tokenInfo","TokenInfo","currency","tokenData","priceUpPercent","priceChangeUSD","p","ml","flex","priceUSD","py","px","mb","SwapHoriz","SwapProFilter","infoPos","setInfoPos","setShowChart","setShowTrades","infoPosItems","pos","text","condition","Checkbox","checked","disabled","evt","Replay","SwapPage","isTiny","isTablet","pairId","setPairId","setPairTokenReversed","setTransactions","Math","floor","Date","now","currentTime","setCurrentTime","currencies","useDerivedSwapInfo","wrappedCurrency","Field","INPUT","OUTPUT","interval","setInterval","_currentTime","clearInterval","getPairAddress","tokenReversed","getPairId","getSwapTransactions","txns","filteredTxns","txn","find","getTradesData","minHeight","maxWidth","margin","AdsSlider","sort","Grid","container","spacing","xs","sm","md","lg","token","marginTop"],"mappings":"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","file":"static/js/11.c0c30845.chunk.js","sourcesContent":["var _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgHelpIcon1(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 16,\n    height: 16,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    \"data-name\": \"Path 11469\",\n    d: \"M10.78-7.061c0-1.268-.918-1.919-2.319-1.919a3.829 3.829 0 0 0-2.353.78l.167 1.068a3.446 3.446 0 0 1 2.069-.8c.767 0 1.2.334 1.2.918 0 .617-.417.968-1.6 1.4l-.334.117.133 1.518.784-.15.067-.734c1.218-.396 2.186-.997 2.186-2.198zm-2 5.306V-3.09H7.493v1.335zM.352-5.192a7.851 7.851 0 0 0 7.992 8.008 7.855 7.855 0 0 0 8.008-8.008 7.831 7.831 0 0 0-8.008-7.992A7.827 7.827 0 0 0 .352-5.192zm1.1 0a6.789 6.789 0 0 1 6.891-6.941 6.789 6.789 0 0 1 6.891 6.941 6.793 6.793 0 0 1-6.89 6.957 6.793 6.793 0 0 1-6.891-6.957z\",\n    transform: \"translate(-.352 13.184)\",\n    style: {\n      fill: \"#636780\"\n    }\n  }));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgHelpIcon1);\nexport default __webpack_public_path__ + \"static/media/HelpIcon1.66c8c791.svg\";\nexport { ForwardRef as ReactComponent };","var _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSettingsIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"data-name\": \"Component 37 \\\\u2013 6\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 40,\n    height: 40,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"rect\", {\n    \"data-name\": \"Rectangle 18293\",\n    width: 40,\n    height: 40,\n    rx: 20,\n    style: {\n      fill: \"none\"\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    \"data-name\": \"Settings 2\",\n    d: \"M20 11.823V8.177c-1.79-.638-2.272-.668-2.522-1.274s.069-.974.882-2.686L15.782 1.64c-1.688.8-2.073 1.137-2.687.883S12.456 1.782 11.823 0H8.177C7.541 1.787 7.511 2.271 6.9 2.522c-.627.261-1-.083-2.686-.883L1.64 4.217c.814 1.713 1.135 2.078.882 2.683S1.788 7.541 0 8.177v3.646c1.783.633 2.271.667 2.523 1.273s-.068.972-.883 2.686l2.577 2.578c1.666-.792 2.058-1.144 2.686-.882.607.252.637.733 1.274 2.522h3.645c.632-1.776.666-2.269 1.281-2.526s.988.083 2.679.885l2.578-2.578c-.812-1.708-1.135-2.077-.882-2.686s.733-.635 2.522-1.272zm-4.062.637a3.3 3.3 0 0 0 .407 2.982l-.9.9a3.288 3.288 0 0 0-2.978-.408 3.309 3.309 0 0 0-1.823 2.4H9.362a3.3 3.3 0 0 0-1.819-2.4 3.307 3.307 0 0 0-2.983.407l-.9-.9a3.3 3.3 0 0 0 .406-2.983 3.307 3.307 0 0 0-2.4-1.818V9.362a3.3 3.3 0 0 0 2.4-1.82 3.3 3.3 0 0 0-.407-2.983l.9-.9a3.3 3.3 0 0 0 2.983.407 3.3 3.3 0 0 0 1.819-2.4h1.279a3.3 3.3 0 0 0 1.82 2.4 3.308 3.308 0 0 0 2.983-.407l.9.9a3.307 3.307 0 0 0-.407 2.983 3.3 3.3 0 0 0 2.4 1.819v1.279a3.3 3.3 0 0 0-2.4 1.819zM10 7.5A2.5 2.5 0 1 1 7.5 10 2.5 2.5 0 0 1 10 7.5zm0-1.667A4.167 4.167 0 1 0 14.167 10 4.166 4.166 0 0 0 10 5.833z\",\n    transform: \"translate(10 10)\",\n    style: {\n      fill: \"#696c80\"\n    }\n  }));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSettingsIcon);\nexport default __webpack_public_path__ + \"static/media/SettingsIcon.5b7ed28d.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport { ReactComponent as SettingsIcon } from 'assets/images/SettingsIcon.svg';\r\nimport { useIsProMode } from 'state/application/hooks';\r\nimport useParsedQueryString from 'hooks/useParsedQueryString';\r\nimport { useCurrency } from 'hooks/Tokens';\r\nimport { Swap, SettingsModal, ToggleSwitch } from 'components';\r\nimport {\r\n  GelatoLimitOrderPanel,\r\n  GelatoLimitOrdersHistoryPanel,\r\n} from '@gelatonetwork/limit-orders-react';\r\nimport { Trans, useTranslation } from 'react-i18next';\r\n\r\nconst SWAP_NORMAL = 0;\r\nconst SWAP_LIMIT = 1;\r\n\r\nconst SwapMain: React.FC = () => {\r\n  const [swapIndex, setSwapIndex] = useState(SWAP_NORMAL);\r\n  const [openSettingsModal, setOpenSettingsModal] = useState(false);\r\n  const { isProMode, updateIsProMode } = useIsProMode();\r\n\r\n  const parsedQuery = useParsedQueryString();\r\n  const currency0 = useCurrency(\r\n    parsedQuery && parsedQuery.currency0\r\n      ? (parsedQuery.currency0 as string)\r\n      : undefined,\r\n  );\r\n  const currency1 = useCurrency(\r\n    parsedQuery && parsedQuery.currency1\r\n      ? (parsedQuery.currency1 as string)\r\n      : undefined,\r\n  );\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <>\r\n      {openSettingsModal && (\r\n        <SettingsModal\r\n          open={openSettingsModal}\r\n          onClose={() => setOpenSettingsModal(false)}\r\n        />\r\n      )}\r\n      <Box\r\n        className={`flex flex-wrap items-center justify-between ${\r\n          isProMode ? ' proModeWrapper' : ''\r\n        }`}\r\n      >\r\n        <Box display='flex'>\r\n          <Box\r\n            className={`${\r\n              swapIndex === SWAP_NORMAL ? 'activeSwap' : ''\r\n            } swapItem headingItem\r\n            `}\r\n            onClick={() => setSwapIndex(SWAP_NORMAL)}\r\n          >\r\n            <p>{t('market')}</p>\r\n          </Box>\r\n          <Box\r\n            className={`${\r\n              swapIndex === SWAP_LIMIT ? 'activeSwap' : ''\r\n            } swapItem headingItem ${isProMode ? 'border-right' : ''}`}\r\n            onClick={() => setSwapIndex(SWAP_LIMIT)}\r\n          >\r\n            <p>{t('limit')}</p>\r\n          </Box>\r\n        </Box>\r\n        <Box my={1} className='flex items-center'>\r\n          {!isProMode && (\r\n            <Box className='flex items-center' mr={1}>\r\n              <span\r\n                className='text-secondary text-uppercase'\r\n                style={{ marginRight: 8 }}\r\n              >\r\n                {t('proMode')}\r\n              </span>\r\n              <ToggleSwitch\r\n                toggled={isProMode}\r\n                onToggle={() => updateIsProMode(!isProMode)}\r\n              />\r\n            </Box>\r\n          )}\r\n          <Box className='headingItem' marginRight={isProMode ? 2.5 : 0}>\r\n            <SettingsIcon onClick={() => setOpenSettingsModal(true)} />\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      <Box padding={isProMode ? '0 24px' : '0'} mt={3.5}>\r\n        {swapIndex === SWAP_NORMAL && (\r\n          <Swap\r\n            currency0={currency0 ?? undefined}\r\n            currency1={currency1 ?? undefined}\r\n          />\r\n        )}\r\n        {swapIndex === SWAP_LIMIT && (\r\n          <Box className='limitOrderPanel'>\r\n            <GelatoLimitOrderPanel />\r\n            <GelatoLimitOrdersHistoryPanel />\r\n            <Box mt={2} textAlign='center'>\r\n              <small>\r\n                <Trans\r\n                  i18nKey='limitOrderDisclaimer'\r\n                  components={{\r\n                    bold: <b />,\r\n                    alink: (\r\n                      <a\r\n                        target='_blank'\r\n                        rel='noopener noreferrer'\r\n                        href='https://www.certik.org/projects/gelato'\r\n                      />\r\n                    ),\r\n                  }}\r\n                />\r\n              </small>\r\n            </Box>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SwapMain;\r\n","import React from 'react';\r\nimport { Box, useMediaQuery } from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { GlobalConst } from 'constants/index';\r\nimport { DoubleCurrencyLogo } from 'components';\r\nimport { formatCompact, getDaysCurrentYear } from 'utils';\r\nimport { useCurrency } from 'hooks/Tokens';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst LiquidityPoolRow: React.FC<{\r\n  pair: any;\r\n  key: number;\r\n}> = ({ pair, key }) => {\r\n  const { breakpoints } = useTheme();\r\n  const daysCurrentYear = getDaysCurrentYear();\r\n  const isMobile = useMediaQuery(breakpoints.down('xs'));\r\n  const { t } = useTranslation();\r\n\r\n  const dayVolumeUSD =\r\n    Number(\r\n      pair.oneDayVolumeUSD ? pair.oneDayVolumeUSD : pair.oneDayVolumeUntracked,\r\n    ) *\r\n    GlobalConst.utils.FEEPERCENT *\r\n    daysCurrentYear *\r\n    100;\r\n  const trackReserveUSD = Number(\r\n    pair.oneDayVolumeUSD ? pair.trackedReserveUSD : pair.reserveUSD,\r\n  );\r\n  const apy =\r\n    isNaN(dayVolumeUSD) || trackReserveUSD === 0\r\n      ? 0\r\n      : dayVolumeUSD / trackReserveUSD;\r\n  const liquidity = pair.trackedReserveUSD\r\n    ? pair.trackedReserveUSD\r\n    : pair.reserveUSD;\r\n  const volume = pair.oneDayVolumeUSD\r\n    ? pair.oneDayVolumeUSD\r\n    : pair.oneDayVolumeUntracked;\r\n  const token0 = useCurrency(pair.token0.id);\r\n  const token1 = useCurrency(pair.token1.id);\r\n  return (\r\n    <Box key={key} className='liquidityContent'>\r\n      <Box className='flex items-center' width={isMobile ? 1 : 0.5}>\r\n        <DoubleCurrencyLogo\r\n          currency0={token0 ?? undefined}\r\n          currency1={token1 ?? undefined}\r\n          size={28}\r\n        />\r\n        <small style={{ marginLeft: 12 }}>\r\n          {pair.token0.symbol.toUpperCase()} /{' '}\r\n          {pair.token1.symbol.toUpperCase()}\r\n        </small>\r\n      </Box>\r\n      <Box\r\n        width={isMobile ? 1 : 0.2}\r\n        mt={isMobile ? 2.5 : 0}\r\n        className='flex justify-between'\r\n      >\r\n        {isMobile && <small className='text-secondary'>{t('tvl')}</small>}\r\n        <small>${formatCompact(liquidity)}</small>\r\n      </Box>\r\n      <Box\r\n        width={isMobile ? 1 : 0.15}\r\n        mt={isMobile ? 1 : 0}\r\n        className='flex justify-between'\r\n      >\r\n        {isMobile && <small className='text-secondary'>{t('24hVol')}</small>}\r\n        <small>${formatCompact(volume)}</small>\r\n      </Box>\r\n      <Box\r\n        width={isMobile ? 1 : 0.15}\r\n        mt={isMobile ? 1 : 0}\r\n        className={`flex ${isMobile ? 'justify-between' : 'justify-end'}`}\r\n      >\r\n        {isMobile && <small className='text-secondary'>{t('apy')}</small>}\r\n        <small\r\n          className={`text-right ${apy < 0 ? 'text-error' : 'text-success'}`}\r\n        >\r\n          {apy.toFixed(2)}%\r\n        </small>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default React.memo(LiquidityPoolRow);\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { Box, Divider, useMediaQuery } from '@material-ui/core';\r\nimport { KeyboardArrowUp, KeyboardArrowDown } from '@material-ui/icons';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { getTokenPairs, getBulkPairData } from 'utils';\r\nimport { Token } from '@uniswap/sdk';\r\nimport LiquidityPoolRow from './LiquidityPoolRow';\r\nimport { useAllTokens } from 'hooks/Tokens';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useEthPrice } from 'state/application/hooks';\r\n\r\nconst LiquidityPools: React.FC<{\r\n  token1: Token;\r\n  token2: Token;\r\n}> = ({ token1, token2 }) => {\r\n  const { breakpoints } = useTheme();\r\n  const isMobile = useMediaQuery(breakpoints.down('xs'));\r\n  const [liquidityPoolClosed, setLiquidityPoolClosed] = useState(false);\r\n  const [liquidityFilterIndex, setLiquidityFilterIndex] = useState(0);\r\n  const [tokenPairs, updateTokenPairs] = useState<any[] | null>(null);\r\n  const token1Address = token1.address.toLowerCase();\r\n  const token2Address = token2.address.toLowerCase();\r\n  const allTokenList = useAllTokens();\r\n  const { t } = useTranslation();\r\n  const { ethPrice } = useEthPrice();\r\n\r\n  const liquidityPairs = useMemo(\r\n    () =>\r\n      tokenPairs\r\n        ? tokenPairs\r\n            .filter((pair: any) => {\r\n              if (liquidityFilterIndex === 0) {\r\n                return true;\r\n              } else if (liquidityFilterIndex === 1) {\r\n                return (\r\n                  pair.token0.id === token1Address ||\r\n                  pair.token1.id === token1Address\r\n                );\r\n              } else {\r\n                return (\r\n                  pair.token0.id === token2Address ||\r\n                  pair.token1.id === token2Address\r\n                );\r\n              }\r\n            })\r\n            .slice(0, 5)\r\n        : [],\r\n    [tokenPairs, liquidityFilterIndex, token1Address, token2Address],\r\n  );\r\n\r\n  const whiteListAddressList = useMemo(\r\n    () => Object.keys(allTokenList).map((item) => item.toLowerCase()),\r\n    [allTokenList],\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!ethPrice.price) return;\r\n    (async () => {\r\n      const tokenPairs = await getTokenPairs(token1Address, token2Address);\r\n\r\n      const formattedPairs = tokenPairs\r\n        ? tokenPairs\r\n            .filter((pair: any) => {\r\n              return (\r\n                whiteListAddressList.includes(pair?.token0?.id) &&\r\n                whiteListAddressList.includes(pair?.token1?.id)\r\n              );\r\n            })\r\n            .map((pair: any) => {\r\n              return pair.id;\r\n            })\r\n        : [];\r\n\r\n      const pairData = await getBulkPairData(formattedPairs, ethPrice.price);\r\n\r\n      if (pairData) {\r\n        updateTokenPairs(pairData);\r\n      }\r\n    })();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [token1Address, token2Address, whiteListAddressList, ethPrice.price]);\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        className='flex items-center justify-between'\r\n        marginBottom={liquidityPoolClosed ? 0 : '20px'}\r\n      >\r\n        <Box className='flex items-center'>\r\n          <p className='weight-600' style={{ marginRight: 8 }}>\r\n            {t('liquidityPools')}\r\n          </p>\r\n          <small className='text-secondary'>\r\n            ({token1.symbol?.toUpperCase()}, {token2.symbol?.toUpperCase()})\r\n          </small>\r\n        </Box>\r\n        <Box\r\n          className='flex cursor-pointer text-secondary'\r\n          onClick={() => setLiquidityPoolClosed(!liquidityPoolClosed)}\r\n        >\r\n          {liquidityPoolClosed ? <KeyboardArrowDown /> : <KeyboardArrowUp />}\r\n        </Box>\r\n      </Box>\r\n      {!liquidityPoolClosed && (\r\n        <>\r\n          <Divider />\r\n          <Box width={1}>\r\n            <Box padding={2} className='flex liquidityMain'>\r\n              <Box width={0.5} className='flex liquidityFilter'>\r\n                <small\r\n                  className={liquidityFilterIndex === 0 ? 'active' : ''}\r\n                  onClick={() => setLiquidityFilterIndex(0)}\r\n                >\r\n                  {t('all')}\r\n                </small>\r\n                <small\r\n                  className={liquidityFilterIndex === 1 ? 'active' : ''}\r\n                  onClick={() => setLiquidityFilterIndex(1)}\r\n                >\r\n                  {token1.symbol?.toUpperCase()}\r\n                </small>\r\n                <small\r\n                  className={liquidityFilterIndex === 2 ? 'active' : ''}\r\n                  onClick={() => setLiquidityFilterIndex(2)}\r\n                >\r\n                  {token2.symbol?.toUpperCase()}\r\n                </small>\r\n              </Box>\r\n              {!isMobile && (\r\n                <>\r\n                  <Box width={0.2}>\r\n                    <small>{t('tvl')}</small>\r\n                  </Box>\r\n                  <Box width={0.15}>\r\n                    <small>{t('24hVol')}</small>\r\n                  </Box>\r\n                  <Box width={0.15} className='text-right'>\r\n                    <small>{t('apy')}</small>\r\n                  </Box>\r\n                </>\r\n              )}\r\n            </Box>\r\n            {liquidityPairs.map((pair: any, ind: any) => (\r\n              <LiquidityPoolRow pair={pair} key={ind} />\r\n            ))}\r\n          </Box>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LiquidityPools;\r\n","import React from 'react';\r\n\r\nconst SwapProChart: React.FC<{\r\n  pairName: string;\r\n  pairAddress: string;\r\n  pairTokenReversed: boolean;\r\n}> = ({ pairAddress, pairName, pairTokenReversed }) => {\r\n  return (\r\n    <iframe\r\n      src={`https://mode.quickswap.exchange?pairAddress=${pairAddress}&pairName=${pairName}&tokenReversed=${pairTokenReversed}`}\r\n      height='100%'\r\n      width='100%'\r\n      frameBorder='0'\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.memo(SwapProChart);\r\n","import React from 'react';\r\nimport SwapProChart from './SwapProChart';\r\nimport { Token } from '@uniswap/sdk';\r\nimport { Box } from '@material-ui/core';\r\nimport { Height } from '@material-ui/icons';\r\nimport { ReflexContainer, ReflexSplitter, ReflexElement } from 'react-reflex';\r\nimport 'react-reflex/styles.css';\r\nimport { formatNumber, shortenTx, getEtherscanLink } from 'utils';\r\nimport dayjs from 'dayjs';\r\nimport { useActiveWeb3React } from 'hooks';\r\nimport { TableVirtuoso } from 'react-virtuoso';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { GlobalConst } from 'constants/index';\r\n\r\nconst SwapProChartTrade: React.FC<{\r\n  showChart: boolean;\r\n  showTrades: boolean;\r\n  token1?: Token;\r\n  token2?: Token;\r\n  pairAddress?: string;\r\n  pairTokenReversed: boolean;\r\n  transactions?: any[];\r\n}> = ({\r\n  showChart,\r\n  showTrades,\r\n  token1,\r\n  token2,\r\n  pairAddress,\r\n  pairTokenReversed,\r\n  transactions,\r\n}) => {\r\n  const { chainId } = useActiveWeb3React();\r\n  const { t } = useTranslation();\r\n\r\n  const TradesTable = () =>\r\n    token1 && token2 && pairAddress ? (\r\n      <TableVirtuoso\r\n        data={transactions}\r\n        components={{\r\n          Table: ({ ...props }) => <table className='tradeTable' {...props} />,\r\n        }}\r\n        fixedHeaderContent={() => (\r\n          <tr>\r\n            <th align='left'>{t('date')}</th>\r\n            <th align='left'>{t('type')}</th>\r\n            <th align='right'>{t('usd')}</th>\r\n            <th align='right'>{token1.symbol}</th>\r\n            <th align='right'>{token2.symbol}</th>\r\n            <th align='right'>{t('price')}</th>\r\n            <th align='right'>{t('txn')}</th>\r\n          </tr>\r\n        )}\r\n        itemContent={(index, tx) => {\r\n          const txType = Number(tx.amount0In) > 0 ? 'sell' : 'buy';\r\n          const txAmount0 =\r\n            Number(tx.amount0In) > 0 ? tx.amount0In : tx.amount0Out;\r\n          const txAmount1 =\r\n            Number(tx.amount1In) > 0 ? tx.amount1In : tx.amount1Out;\r\n          const token1Amount =\r\n            tx.pair.token0.id.toLowerCase() === token1.address.toLowerCase()\r\n              ? txAmount0\r\n              : txAmount1;\r\n          const token2Amount =\r\n            tx.pair.token0.id.toLowerCase() === token1.address.toLowerCase()\r\n              ? txAmount1\r\n              : txAmount0;\r\n          const txPrice = Number(tx.amountUSD) / token1Amount;\r\n          return (\r\n            <>\r\n              <td align='left'>\r\n                {dayjs\r\n                  .unix(tx.transaction.timestamp)\r\n                  .format('MMM DD, hh:mm:ss a')}\r\n              </td>\r\n              <td className={txType} align='left'>\r\n                {txType.toUpperCase()}\r\n              </td>\r\n              <td className={txType} align='right'>\r\n                {formatNumber(tx.amountUSD)}\r\n              </td>\r\n              <td className={txType} align='right'>\r\n                {formatNumber(token1Amount)}\r\n              </td>\r\n              <td className={txType} align='right'>\r\n                {formatNumber(token2Amount)}\r\n              </td>\r\n              <td className={txType} align='right'>\r\n                {formatNumber(txPrice)}\r\n              </td>\r\n              <td className={txType} align='right'>\r\n                {chainId ? (\r\n                  <a\r\n                    href={getEtherscanLink(\r\n                      chainId,\r\n                      tx.transaction.id,\r\n                      'transaction',\r\n                    )}\r\n                    target='_blank'\r\n                    rel='noreferrer'\r\n                  >\r\n                    {shortenTx(tx.transaction.id)}\r\n                  </a>\r\n                ) : (\r\n                  shortenTx(tx.transaction.id)\r\n                )}\r\n              </td>\r\n            </>\r\n          );\r\n        }}\r\n      />\r\n    ) : (\r\n      <></>\r\n    );\r\n\r\n  return (\r\n    <ReflexContainer orientation='horizontal'>\r\n      {showChart && (\r\n        <ReflexElement className='top-pane' minSize={200}>\r\n          <SwapProChart\r\n            pairName={`${token1?.symbol ?? 'MATIC'}/${token2?.symbol ??\r\n              'USDT'}`}\r\n            pairAddress={pairAddress ?? GlobalConst.addresses.MATIC_USDT_PAIR}\r\n            pairTokenReversed={pairTokenReversed}\r\n          />\r\n        </ReflexElement>\r\n      )}\r\n      {showChart && showTrades && pairAddress && (\r\n        <ReflexSplitter>\r\n          <Box\r\n            width={1}\r\n            height='2px'\r\n            className='flex justify-center items-center'\r\n          >\r\n            <Height />\r\n          </Box>\r\n        </ReflexSplitter>\r\n      )}\r\n      {showTrades && pairAddress && (\r\n        <ReflexElement className='bottom-pane' minSize={200}>\r\n          <TradesTable />\r\n        </ReflexElement>\r\n      )}\r\n    </ReflexContainer>\r\n  );\r\n};\r\n\r\nexport default React.memo(SwapProChartTrade);\r\n","import React, { useState } from 'react';\r\nimport { Box, Divider } from '@material-ui/core';\r\nimport { ButtonSwitch } from 'components';\r\nimport dayjs, { ManipulateType } from 'dayjs';\r\nimport utc from 'dayjs/plugin/utc';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport { formatCompact, formatNumber } from 'utils';\r\nimport { useTranslation } from 'react-i18next';\r\ndayjs.extend(utc);\r\n\r\nconst SwapInfoTx: React.FC<{\r\n  transactions?: any[];\r\n}> = ({ transactions }) => {\r\n  const [txFilter, setTxFilter] = useState('5_minute');\r\n  const subtractTimeAmount = Number(txFilter.split('_')[0]);\r\n  const subtractTimeType = txFilter.split('_')[1];\r\n  const currentTime = dayjs.utc();\r\n  const firstTime = currentTime\r\n    .subtract(subtractTimeAmount, subtractTimeType as ManipulateType)\r\n    .unix();\r\n\r\n  const filteredTxs = transactions?.filter(\r\n    (tx) => tx.transaction.timestamp >= firstTime,\r\n  );\r\n  const filteredBuyTxs = filteredTxs?.filter((tx) => Number(tx.amount1In) > 0);\r\n  const filteredSellTxs = filteredTxs?.filter((tx) => Number(tx.amount0In) > 0);\r\n  const volume = filteredTxs\r\n    ? filteredTxs.reduce((total, tx) => total + Number(tx.amountUSD), 0)\r\n    : undefined;\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <>\r\n      <ButtonSwitch\r\n        height={32}\r\n        value={txFilter}\r\n        onChange={setTxFilter}\r\n        items={[\r\n          { label: `5${t('min')}`, value: '5_minute' },\r\n          { label: `1${t('hour')}`, value: '1_hour' },\r\n          { label: `6${t('hour')}`, value: '6_hour' },\r\n          { label: `24${t('hour')}`, value: '24_hour' },\r\n        ]}\r\n      />\r\n      <Box className='swapTxInfo'>\r\n        <Box>\r\n          <small className='text-secondary'>{t('transactions')}:</small>\r\n          {filteredTxs ? (\r\n            <small>{filteredTxs.length}</small>\r\n          ) : (\r\n            <Skeleton width={60} height={14} />\r\n          )}\r\n        </Box>\r\n        <Divider />\r\n        <Box>\r\n          <small className='text-secondary'>{t('buys')}:</small>\r\n          <small>\r\n            {filteredBuyTxs ? (\r\n              filteredBuyTxs.length\r\n            ) : (\r\n              <Skeleton width={60} height={14} />\r\n            )}\r\n          </small>\r\n        </Box>\r\n        <Divider />\r\n        <Box>\r\n          <small className='text-secondary'>{t('sells')}:</small>\r\n          <small>\r\n            {filteredSellTxs ? (\r\n              filteredSellTxs.length\r\n            ) : (\r\n              <Skeleton width={60} height={14} />\r\n            )}\r\n          </small>\r\n        </Box>\r\n        <Divider />\r\n        <Box>\r\n          <small className='text-secondary'>{t('volume')}:</small>\r\n          <small>\r\n            {filteredTxs ? (\r\n              volume > 1000 ? (\r\n                formatCompact(volume)\r\n              ) : (\r\n                formatNumber(volume)\r\n              )\r\n            ) : (\r\n              <Skeleton width={60} height={14} />\r\n            )}\r\n          </small>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(SwapInfoTx);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Box, Divider } from '@material-ui/core';\r\nimport { SwapHoriz } from '@material-ui/icons';\r\nimport { Currency, Token } from '@uniswap/sdk';\r\nimport { CurrencyLogo } from 'components';\r\nimport { getTokenInfo, formatNumber } from 'utils';\r\nimport { unwrappedToken } from 'utils/wrappedCurrency';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport SwapInfoTx from './SwapInfoTx';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useEthPrice } from 'state/application/hooks';\r\n\r\nconst SwapProInfo: React.FC<{\r\n  token1?: Token;\r\n  token2?: Token;\r\n  transactions?: any[];\r\n}> = ({ token1, token2, transactions }) => {\r\n  const { t } = useTranslation();\r\n  const [token1Data, setToken1Data] = useState<any>(null);\r\n  const [token2Data, setToken2Data] = useState<any>(null);\r\n  const token1Address = token1?.address;\r\n  const token2Address = token2?.address;\r\n  const currency1 = token1 ? unwrappedToken(token1) : undefined;\r\n  const currency2 = token2 ? unwrappedToken(token2) : undefined;\r\n  const { ethPrice } = useEthPrice();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (ethPrice.price && ethPrice.oneDayPrice) {\r\n        if (token1Address) {\r\n          const tokenInfo = await getTokenInfo(\r\n            ethPrice.price,\r\n            ethPrice.oneDayPrice,\r\n            token1Address,\r\n          );\r\n          if (tokenInfo) {\r\n            setToken1Data(tokenInfo[0]);\r\n          }\r\n        }\r\n        if (token2Address) {\r\n          const tokenInfo = await getTokenInfo(\r\n            ethPrice.price,\r\n            ethPrice.oneDayPrice,\r\n            token2Address,\r\n          );\r\n          if (tokenInfo) {\r\n            setToken2Data(tokenInfo[0]);\r\n          }\r\n        }\r\n      }\r\n    })();\r\n  }, [token1Address, token2Address, ethPrice.price, ethPrice.oneDayPrice]);\r\n\r\n  const TokenInfo: React.FC<{ currency: Currency; tokenData: any }> = ({\r\n    currency,\r\n    tokenData,\r\n  }) => {\r\n    const priceUpPercent = Number(tokenData?.priceChangeUSD);\r\n    return (\r\n      <>\r\n        <Box p={1} display='flex'>\r\n          <CurrencyLogo currency={currency} />\r\n          <Box ml={1} flex={1}>\r\n            <Box className='flex justify-between'>\r\n              <small>{currency.symbol}</small>\r\n              {tokenData ? (\r\n                <small>${formatNumber(tokenData?.priceUSD)}</small>\r\n              ) : (\r\n                <Skeleton width={60} height={14} />\r\n              )}\r\n            </Box>\r\n            {tokenData ? (\r\n              <span>\r\n                {t('24h')}:{' '}\r\n                <span\r\n                  className={priceUpPercent > 0 ? 'text-success' : 'text-error'}\r\n                >\r\n                  {formatNumber(priceUpPercent)}%\r\n                </span>\r\n              </span>\r\n            ) : (\r\n              <Skeleton width={60} height={12} />\r\n            )}\r\n          </Box>\r\n        </Box>\r\n        <Divider />\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box p={1}>\r\n        <p className='text-uppercase'>{t('info')}:</p>\r\n      </Box>\r\n      <Divider />\r\n      {currency1 && <TokenInfo currency={currency1} tokenData={token1Data} />}\r\n      {currency2 && <TokenInfo currency={currency2} tokenData={token2Data} />}\r\n      {currency1 && currency2 && (\r\n        <>\r\n          <Box py={2} px={1}>\r\n            <Box mb={1} px={1} className='flex items-center justify-between'>\r\n              <small>\r\n                {currency1.symbol} / {currency2.symbol}\r\n              </small>\r\n              <Box className='swapIcon'>\r\n                <SwapHoriz />\r\n              </Box>\r\n            </Box>\r\n            <SwapInfoTx transactions={transactions} />\r\n          </Box>\r\n          <Divider />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(SwapProInfo);\r\n","import React from 'react';\r\nimport { Box, Checkbox } from '@material-ui/core';\r\nimport { Replay } from '@material-ui/icons';\r\nimport { CustomSwitch } from 'components';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ninterface SwapProFilterProps {\r\n  infoPos: string;\r\n  setInfoPos: (pos: string) => void;\r\n  showChart: boolean;\r\n  setShowChart: (value: boolean) => void;\r\n  showTrades: boolean;\r\n  setShowTrades: (value: boolean) => void;\r\n}\r\n\r\nconst SwapProFilter: React.FC<SwapProFilterProps> = ({\r\n  infoPos,\r\n  setInfoPos,\r\n  showChart,\r\n  setShowChart,\r\n  showTrades,\r\n  setShowTrades,\r\n}) => {\r\n  const { t } = useTranslation();\r\n  const swapPositions = [t('left'), t('right'), t('none')];\r\n\r\n  const infoPosItems = swapPositions.map((pos) => {\r\n    return {\r\n      text: pos,\r\n      onClick: () => setInfoPos(pos),\r\n      condition: infoPos === pos,\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Box className='swapFilter'>\r\n      <Box className='checkWrapper'>\r\n        <Checkbox\r\n          checked={showChart}\r\n          disabled={!showTrades}\r\n          onChange={(evt) => setShowChart(evt.target.checked)}\r\n        />\r\n        <small>{t('chart')}</small>\r\n      </Box>\r\n      <Box className='checkWrapper'>\r\n        <Checkbox\r\n          checked={showTrades}\r\n          disabled={!showChart}\r\n          onChange={(evt) => setShowTrades(evt.target.checked)}\r\n        />\r\n        <small>{t('trades')}</small>\r\n      </Box>\r\n      <Box className='flex items-center'>\r\n        <small className='text-uppercase'>{t('info')}:</small>\r\n        <Box ml={1}>\r\n          <CustomSwitch width={190} height={30} items={infoPosItems} />\r\n        </Box>\r\n      </Box>\r\n      <Box\r\n        className='replayButton'\r\n        onClick={() => {\r\n          setInfoPos(t('right'));\r\n          setShowChart(true);\r\n          setShowTrades(true);\r\n        }}\r\n      >\r\n        <Replay />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SwapProFilter;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { Box, Grid, useMediaQuery } from '@material-ui/core';\r\nimport { ReactComponent as HelpIcon } from 'assets/images/HelpIcon1.svg';\r\nimport { SwapTokenDetails, ToggleSwitch } from 'components';\r\nimport { useIsProMode } from 'state/application/hooks';\r\nimport { useDerivedSwapInfo } from 'state/swap/hooks';\r\nimport { Field } from 'state/swap/actions';\r\nimport { getPairAddress, getSwapTransactions } from 'utils';\r\nimport { wrappedCurrency } from 'utils/wrappedCurrency';\r\nimport { useActiveWeb3React } from 'hooks';\r\nimport SwapMain from './SwapMain';\r\nimport LiquidityPools from './LiquidityPools';\r\nimport SwapProChartTrade from './SwapProChartTrade';\r\nimport SwapProInfo from './SwapProInfo';\r\nimport SwapProFilter from './SwapProFilter';\r\nimport { useTranslation } from 'react-i18next';\r\nimport 'pages/styles/swap.scss';\r\nimport AdsSlider from 'components/AdsSlider';\r\n\r\nconst SwapPage: React.FC = () => {\r\n  const { isProMode, updateIsProMode } = useIsProMode();\r\n  const { breakpoints } = useTheme();\r\n  const isTiny = useMediaQuery(breakpoints.down('xs'));\r\n  const isMobile = useMediaQuery(breakpoints.down('sm'));\r\n  const isTablet = useMediaQuery(breakpoints.down('md'));\r\n  const [showChart, setShowChart] = useState(true);\r\n  const [showTrades, setShowTrades] = useState(true);\r\n  const [pairId, setPairId] = useState<string | undefined>(undefined);\r\n  const [pairTokenReversed, setPairTokenReversed] = useState(false);\r\n  const [transactions, setTransactions] = useState<any[] | undefined>(\r\n    undefined,\r\n  );\r\n  const [currentTime, setCurrentTime] = useState(Math.floor(Date.now() / 1000));\r\n  const [infoPos, setInfoPos] = useState('right');\r\n\r\n  const { currencies } = useDerivedSwapInfo();\r\n  const { chainId } = useActiveWeb3React();\r\n\r\n  const token1 = wrappedCurrency(currencies[Field.INPUT], chainId);\r\n  const token2 = wrappedCurrency(currencies[Field.OUTPUT], chainId);\r\n\r\n  // this is for refreshing data of trades table every 60 seconds\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const _currentTime = Math.floor(Date.now() / 1000);\r\n      setCurrentTime(_currentTime);\r\n    }, 60000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function getPairId(token1Address: string, token2Address: string) {\r\n      const pairData = await getPairAddress(token1Address, token2Address);\r\n      if (pairData) {\r\n        setPairTokenReversed(pairData.tokenReversed);\r\n        setPairId(pairData.pairId);\r\n      }\r\n    }\r\n    if (token1?.address && token2?.address) {\r\n      getPairId(token1?.address, token2?.address);\r\n    }\r\n  }, [token1?.address, token2?.address]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (pairId && transactions && transactions.length > 0) {\r\n        const txns = await getSwapTransactions(\r\n          pairId,\r\n          Number(transactions[0].transaction.timestamp),\r\n        );\r\n        if (txns) {\r\n          const filteredTxns = txns.filter(\r\n            (txn) =>\r\n              !transactions.find(\r\n                (tx) => tx.transaction.id === txn.transaction.id,\r\n              ),\r\n          );\r\n          setTransactions([...filteredTxns, ...transactions]);\r\n        }\r\n      }\r\n    })();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentTime]);\r\n\r\n  useEffect(() => {\r\n    async function getTradesData(pairId: string) {\r\n      setTransactions(undefined);\r\n      const transactions = await getSwapTransactions(pairId);\r\n      setTransactions(transactions);\r\n    }\r\n    if (pairId && isProMode) {\r\n      getTradesData(pairId);\r\n    }\r\n  }, [pairId, isProMode]);\r\n\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Box width='100%' mb={3} id='swap-page'>\r\n      {!isProMode && (\r\n        <Box className='pageHeading'>\r\n          <h4>{t('swap')}</h4>\r\n          <Box className='helpWrapper'>\r\n            <small>{t('help')}</small>\r\n            <HelpIcon />\r\n          </Box>\r\n        </Box>\r\n      )}\r\n      {!isProMode ? (\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={12} sm={12} md={6} lg={5}>\r\n            <Box className='wrapper'>\r\n              <SwapMain />\r\n            </Box>\r\n            <Box maxWidth={isTiny ? '320px' : '352px'} margin='16px auto 0'>\r\n              <AdsSlider sort='swap' />\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={6} lg={7}>\r\n            <Box className='flex flex-wrap justify-between fullWidth'>\r\n              {token1 && (\r\n                <Box className='swapTokenDetails'>\r\n                  <SwapTokenDetails token={token1} />\r\n                </Box>\r\n              )}\r\n              {token2 && (\r\n                <Box className='swapTokenDetails'>\r\n                  <SwapTokenDetails token={token2} />\r\n                </Box>\r\n              )}\r\n            </Box>\r\n            {token1 && token2 && (\r\n              <Box className='wrapper' marginTop='32px'>\r\n                <LiquidityPools token1={token1} token2={token2} />\r\n              </Box>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      ) : (\r\n        <Box\r\n          className='border-top border-bottom bg-palette flex flex-wrap'\r\n          minHeight='calc(100vh - 140px)'\r\n        >\r\n          <Box\r\n            width={isMobile ? 1 : '450px'}\r\n            padding='20px 0'\r\n            className={isMobile ? '' : 'border-right'}\r\n          >\r\n            <Box\r\n              className='flex justify-between items-center'\r\n              padding='0 24px'\r\n              mb={3}\r\n            >\r\n              <h4>{t('swap')}</h4>\r\n              <Box className='flex items-center' mr={1}>\r\n                <span\r\n                  className='text-secondary text-uppercase'\r\n                  style={{ marginRight: 8 }}\r\n                >\r\n                  {t('proMode')}\r\n                </span>\r\n                <ToggleSwitch\r\n                  toggled={isProMode}\r\n                  onToggle={() => updateIsProMode(!isProMode)}\r\n                />\r\n              </Box>\r\n            </Box>\r\n            <SwapMain />\r\n            <Box maxWidth={isTiny ? '320px' : '352px'} margin='16px auto 0'>\r\n              <AdsSlider sort='swap' />\r\n            </Box>\r\n          </Box>\r\n          {infoPos === 'left' && (\r\n            <Box\r\n              className={isMobile ? 'border-top' : 'border-left border-right'}\r\n              width={isMobile ? 1 : 250}\r\n            >\r\n              <SwapProInfo\r\n                token1={token1}\r\n                token2={token2}\r\n                transactions={transactions}\r\n              />\r\n            </Box>\r\n          )}\r\n          <Box className='swapProWrapper'>\r\n            <SwapProFilter\r\n              infoPos={infoPos}\r\n              setInfoPos={setInfoPos}\r\n              showChart={showChart}\r\n              setShowChart={setShowChart}\r\n              showTrades={showTrades}\r\n              setShowTrades={setShowTrades}\r\n            />\r\n            <SwapProChartTrade\r\n              showChart={showChart}\r\n              showTrades={showTrades}\r\n              token1={token1}\r\n              token2={token2}\r\n              pairAddress={pairId}\r\n              pairTokenReversed={pairTokenReversed}\r\n              transactions={transactions}\r\n            />\r\n          </Box>\r\n          {infoPos === 'right' && (\r\n            <Box\r\n              className={isMobile ? 'border-top' : 'border-left'}\r\n              width={isTablet ? 1 : 250}\r\n            >\r\n              <SwapProInfo\r\n                token1={token1}\r\n                token2={token2}\r\n                transactions={transactions}\r\n              />\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SwapPage;\r\n"],"sourceRoot":""}