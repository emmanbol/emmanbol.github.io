{"version":3,"sources":["utils/getRpcUrl.ts","state/farms/fetchFarms.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","state/teams/helpers.ts","config/constants/teams.ts","config/constants/nfts.ts","hooks/useRefresh.ts","utils/wallet.ts","hooks/useAuth.ts","config/constants/ifo.ts","state/block/index.ts","contexts/RefreshContext.tsx","config/constants/types.ts","utils/makeBatchRequest.ts","state/prices/index.ts","utils/web3React.ts","contexts/Localisation/translationsContext.ts","config/constants/campaigns.ts","utils/achievements.ts","state/achievements/helpers.ts","state/achievements/index.ts","config/constants/contracts.ts","utils/addressHelpers.ts","hooks/useI18n.ts","utils/formatBalance.ts","config/constants/index.ts","components/layout/Page.tsx","config/constants/tokens.ts","components/layout/Container.tsx","utils/multicall.ts","config/constants/pools.ts","state/hooks.ts","config/constants/farms.ts","utils/web3.ts","state/teams/index.tsx","utils/contractHelpers.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/index.ts","hooks/useEagerConnect.ts","hooks/useGetDocumentTitlePrice.ts","style/Global.tsx","config/localisation/languageCodes.ts","contexts/Localisation/languageContext.tsx","contexts/ThemeContext.tsx","hooks/useTheme.ts","components/Menu/config.ts","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/ToastListener/index.tsx","components/PageLoader.tsx","components/EasterEgg/EasterEgg.tsx","views/Collectibles/hooks/useGetBullHiccupClaimableStatus.ts","routerHistory.ts","views/Collectibles/components/ClaimBullHiccupNftModal.tsx","views/Collectibles/components/GlobalCheckBullHiccupClaimStatus.tsx","App.tsx","state/index.ts","Providers.tsx","index.tsx","state/actions.ts","state/toasts/index.ts","state/profile/helpers.ts","state/profile/getProfile.ts","state/profile/index.tsx"],"names":["nodes","process","getNodeUrl","randomIndex","random","length","fetchFarms","a","Promise","all","farmsConfig","map","farmConfig","lpAddress","getAddress","lpAddresses","calls","address","token","name","params","quoteToken","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBlanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","lpTokenRatio","BigNumber","div","lpTotalInQuoteToken","pow","times","tokenAmount","quoteTokenAmount","masterchefABI","pid","info","totalAllocPoint","allocPoint","_hex","poolWeight","toJSON","tokenPriceVsQuote","multiplier","toString","depositFeeBP","data","fetchFarmUserAllowances","account","masterChefAdress","farm","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","initialState","farmsSlice","createSlice","reducers","setFarmsPublicData","state","action","liveFarmsData","payload","liveFarmData","find","f","setFarmUserData","arrayOfUserDataObjects","forEach","userDataEl","index","userData","actions","fetchFarmsPublicDataAsync","dispatch","farms","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","allowance","profileContract","getProfileContract","getTeam","teamId","methods","getTeamProfile","call","teamName","numberUsers","numberPoints","isJoinable","staticTeamInfo","teamsList","staticTeam","id","merge","users","points","getTeams","teamsById","reduce","accum","team","numberTeams","nbTeams","i","push","makeBatchRequest","teamData","onChainTeamData","Number","teams","Nfts","description","images","lg","md","sm","ipfs","video","webm","mp4","sortOrder","bunnyId","blur","useRefresh","useContext","RefreshContext","fastRefresh","fast","slowRefresh","slow","setupNetwork","provider","window","ethereum","chainId","parseInt","request","method","chainName","nativeCurrency","symbol","decimals","rpcUrls","blockExplorerUrls","console","error","useAuth","useWeb3React","activate","deactivate","toastError","useToast","login","useCallback","connectorID","connector","connectorsByName","UnsupportedChainIdError","localStorage","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","message","logout","ifos","blockSlice","currentBlock","initialBlock","setBlock","React","createContext","RefreshContextProvider","children","useState","setSlow","setFast","useEffect","interval","setInterval","prev","clearInterval","Provider","value","PoolCategory","batch","getWeb3NoAccount","BatchRequest","promises","resolve","reject","add","err","result","execute","fetchPrices","createAsyncThunk","fetch","response","json","update_at","prices","Object","keys","toLowerCase","pricesSlice","isLoading","lastUpdated","extraReducers","builder","addCase","pending","fulfilled","rpcUrl","injected","InjectedConnector","supportedChainIds","walletconnect","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","defaultTranslationState","translations","setTranslations","TranslationsContext","campaigns","campaignMap","Map","campaign","set","getAchievementTitle","type","fallback","title","getAchievementDescription","getUserPointIncreaseEvents","gql","user","getAchievements","pointIncreaseEvents","userPoint","campaignMeta","get","campaignId","badge","achievementSlice","addAchievement","addAchievements","concat","setAchievements","clearAchievements","fetchAchievements","achievements","kebabCase","toastTypes","DANGER","97","56","getCakeAddress","tokens","piano","addresses","getMulticallAddress","getWbnbAddress","wbnb","getLotteryAddress","getLotteryTicketAddress","getPancakeProfileAddress","getPancakeRabbitsAddress","getBunnyFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","useI18n","translationId","foundTranslation","translation","stringId","text","includesVariable","includes","interpolatedText","isEmpty","dataKey","templateKey","RegExp","replace","getBalanceNumber","balance","displayBalance","dividedBy","toNumber","getFullDisplayBalance","toFixed","communityFarms","filter","isCommunity","Page","styled","Container","theme","mediaQueries","bnb","projectLink","foam","busd","cake","usdc","ada","dot","eth","usdt","abi","web3","multi","Contract","MultiCallAbi","itf","Interface","calldata","encodeFunctionData","aggregate","returnData","res","decodeFunctionResult","pools","sousId","stakingToken","earningToken","contractAddress","poolCategory","CORE","harvest","tokenPerBlock","isFinished","useFetchPublicData","useDispatch","fetchPoolsPublicDataAsync","getBlockNumber","blockNumber","useFarms","useSelector","useFarmFromPid","useFarmFromSymbol","lpSymbol","useFarmUser","useMemo","toast","pushToast","toastInfo","INFO","toastSuccess","SUCCESS","toastWarning","WARNING","remove","removeToast","clear","clearToast","useFetchProfile","fetchProfile","useFetchPriceList","useGetApiPrices","usePriceCakeBusd","ZERO","cakeBnbFarm","bnbBusdFarm","bnbBusdPrice","useTotalValue","quoteTokenPriceUsd","totalLiquidity","plus","pool","totalStaked","RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","web3NoAccount","isInitialized","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","fetchTeam","fetchTeams","getContract","getBep20Contract","bep20Abi","getIfoContract","ifoAbi","getSouschefContract","config","poolsConfig","BINANCE","sousChefBnb","sousChef","getPointCenterIfoContract","pointCenterIfo","getCakeContract","cakeAbi","profileABI","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getLotteryContract","lotteryAbi","getLotteryTicketContract","lotteryTicketAbi","getMasterchefContract","masterChef","getClaimRefundContract","claimRefundAbi","fetchPoolsBlockLimits","poolsWithEnd","p","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","startBlock","endBlock","fetchPoolsTotalStatking","nonBnbPools","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","bnbPools","nonMasterPools","masterChefContract","masterChefABI","fetchPoolsAllowance","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","amount","masterPoolAmount","0","fetchUserPendingRewards","pendingRewards","pendingPiano","pendingReward","PoolsSlice","setPoolsPublicData","livePoolsData","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","field","findIndex","blockLimits","totalStakings","liveData","blockLimit","totalStaking","fetchPoolsUserDataAsync","stakingTokenBalances","stakingTokenBalance","updateUserAllowance","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","useEagerConnect","connectorId","getItem","useGetDocumentTitlePrice","cakePriceUsd","cakePriceUsdString","eq","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","document","GlobalStyle","createGlobalStyle","colors","background","EN","code","language","allLanguages","CACHE_KEY","LanguageContext","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","projectId","REACT_APP_CROWDIN_PROJECTID","stringTranslationsApi","StringTranslations","REACT_APP_CROWDIN_APIKEY","LanguageContextProvider","storedLangCode","storedLang","getStoredLang","listLanguageTranslations","fetchTranslationsForSelectedLanguage","then","translationApiResponse","catch","e","langObject","setItem","ThemeContext","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","JSON","parse","setIsDark","prevState","stringify","dark","light","useTheme","StyledThemeContext","label","icon","href","items","Menu","props","currentLang","langs","setLang","links","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","history","nextState","replaceState","location","reload","this","Component","ToastListener","toasts","onRemove","Wrapper","StyledImage","img","PageLoader","src","alt","width","height","EasterEgg","show","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","memo","bunnySpecialContract","useGetBullHiccupClaimableStatus","hasChecked","setHasChecked","claimables","setClaimables","canClaimMultiple","isBullClaimable","isHiccupClaimable","checkClaimableStatus","isSomeClaimable","values","some","status","createBrowserHistory","bullNft","nftList","nft","hiccupNft","NftImage","showConfetti","confetti","resize","particleCount","startVelocity","gravity","spread","origin","x","y","renderNftPreview","style","marginBottom","ClaimBullHiccupNftModal","onDismiss","TranslateString","collectibleMessage","delay","flexDirection","alignItems","justifyContent","bold","color","fontSize","mb","onClick","GlobalCheckBullHiccupClaimStatus","hasDisplayedModal","useRef","useModal","onPresentGiftModal","pathname","useLocation","current","Lottery","lazy","NotFound","EXPONENTIAL_AT","DECIMAL_PLACES","App","warn","Global","path","exact","component","iterations","configureStore","devTools","reducer","farmsReducer","toastsReducer","poolsReducer","pricesReducer","profile","profileReducer","teamsReducer","achievementsReducer","block","blockReducer","Providers","store","ReactDOM","render","StrictMode","getElementById","toastsSlice","toastIndex","splice","unshift","transformProfileResponse","profileResponse","userId","nftAddress","tokenId","isActive","rabbitContract","profileApi","REACT_APP_API_PROFILE","getUsername","ok","username","getProfile","hasRegistered","getUserProfile","getBunnyId","nfts","nftItem","Cookies","avatar","domain","secure","expires","profileSlice","profileFetchStart","profileFetchSucceeded","profileFetchFailed","addPoints"],"mappings":"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","file":"static/js/main.a0d68961.chunk.js","sourcesContent":["import random from 'lodash/random'\r\n\r\n// Array of available nodes to connect to\r\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\r\n\r\nconst getNodeUrl = () => {\r\n  const randomIndex = random(0, nodes.length - 1)\r\n  return nodes[randomIndex]\r\n}\r\n\r\nexport default getNodeUrl\r\n","import BigNumber from 'bignumber.js'\r\nimport erc20 from 'config/abi/erc20.json'\r\nimport masterchefABI from 'config/abi/masterchef.json'\r\nimport multicall from 'utils/multicall'\r\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\r\nimport farmsConfig from 'config/constants/farms'\r\n\r\nconst fetchFarms = async () => {\r\n  const data = await Promise.all(\r\n    farmsConfig.map(async (farmConfig) => {\r\n      const lpAddress = getAddress(farmConfig.lpAddresses)\r\n      const calls = [\r\n        // Balance of token in the LP contract\r\n        {\r\n          address: getAddress(farmConfig.token.address),\r\n          name: 'balanceOf',\r\n          params: [lpAddress],\r\n        },\r\n        // Balance of quote token on LP contract\r\n        {\r\n          address: getAddress(farmConfig.quoteToken.address),\r\n          name: 'balanceOf',\r\n          params: [lpAddress],\r\n        },\r\n        // Balance of LP tokens in the master chef contract\r\n        {\r\n          address: lpAddress,\r\n          name: 'balanceOf',\r\n          params: [getMasterChefAddress()],\r\n        },\r\n        // Total supply of LP tokens\r\n        {\r\n          address: lpAddress,\r\n          name: 'totalSupply',\r\n        },\r\n        // Token decimals\r\n        {\r\n          address: getAddress(farmConfig.token.address),\r\n          name: 'decimals',\r\n        },\r\n        // Quote token decimals\r\n        {\r\n          address: getAddress(farmConfig.quoteToken.address),\r\n          name: 'decimals',\r\n        },\r\n      ]\r\n\r\n      const [\r\n        tokenBalanceLP,\r\n        quoteTokenBlanceLP,\r\n        lpTokenBalanceMC,\r\n        lpTotalSupply,\r\n        tokenDecimals,\r\n        quoteTokenDecimals,\r\n      ] = await multicall(erc20, calls)\r\n\r\n      // Ratio in % a LP tokens that are in staking, vs the total number in circulation\r\n      const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\r\n\r\n      // Total value in staking in quote token value\r\n      const lpTotalInQuoteToken = new BigNumber(quoteTokenBlanceLP)\r\n        .div(new BigNumber(10).pow(18))\r\n        .times(new BigNumber(2))\r\n        .times(lpTokenRatio)\r\n\r\n      // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\r\n      const tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)).times(lpTokenRatio)\r\n      const quoteTokenAmount = new BigNumber(quoteTokenBlanceLP)\r\n        .div(new BigNumber(10).pow(quoteTokenDecimals))\r\n        .times(lpTokenRatio)\r\n\r\n      const [info, totalAllocPoint] = await multicall(masterchefABI, [\r\n        {\r\n          address: getMasterChefAddress(),\r\n          name: 'poolInfo',\r\n          params: [farmConfig.pid],\r\n        },\r\n        {\r\n          address: getMasterChefAddress(),\r\n          name: 'totalAllocPoint',\r\n        },\r\n      ])\r\n\r\n      const allocPoint = new BigNumber(info.allocPoint._hex)\r\n      const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\r\n\r\n      return {\r\n        ...farmConfig,\r\n        tokenAmount: tokenAmount.toJSON(),\r\n        quoteTokenAmount: quoteTokenAmount.toJSON(),\r\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\r\n        tokenPriceVsQuote: quoteTokenAmount.div(tokenAmount).toJSON(),\r\n        poolWeight: poolWeight.toJSON(),\r\n        multiplier: `${allocPoint.div(100).toString()}X`,\r\n        depositFeeBP: info.depositFeeBP,\r\n      }\r\n    }),\r\n  )\r\n  return data\r\n}\r\n\r\nexport default fetchFarms\r\n","import BigNumber from 'bignumber.js'\r\nimport erc20ABI from 'config/abi/erc20.json'\r\nimport masterchefABI from 'config/abi/masterchef.json'\r\nimport multicall from 'utils/multicall'\r\nimport farmsConfig from 'config/constants/farms'\r\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\r\n\r\nexport const fetchFarmUserAllowances = async (account: string) => {\r\n  const masterChefAdress = getMasterChefAddress()\r\n\r\n  const calls = farmsConfig.map((farm) => {\r\n    const lpContractAddress = getAddress(farm.lpAddresses)\r\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAdress] }\r\n  })\r\n\r\n  const rawLpAllowances = await multicall(erc20ABI, calls)\r\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\r\n    return new BigNumber(lpBalance).toJSON()\r\n  })\r\n  return parsedLpAllowances\r\n}\r\n\r\nexport const fetchFarmUserTokenBalances = async (account: string) => {\r\n  const calls = farmsConfig.map((farm) => {\r\n    const lpContractAddress = getAddress(farm.lpAddresses)\r\n    return {\r\n      address: lpContractAddress,\r\n      name: 'balanceOf',\r\n      params: [account],\r\n    }\r\n  })\r\n\r\n  const rawTokenBalances = await multicall(erc20ABI, calls)\r\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\r\n    return new BigNumber(tokenBalance).toJSON()\r\n  })\r\n  return parsedTokenBalances\r\n}\r\n\r\nexport const fetchFarmUserStakedBalances = async (account: string) => {\r\n  const masterChefAdress = getMasterChefAddress()\r\n\r\n  const calls = farmsConfig.map((farm) => {\r\n    return {\r\n      address: masterChefAdress,\r\n      name: 'userInfo',\r\n      params: [farm.pid, account],\r\n    }\r\n  })\r\n\r\n  const rawStakedBalances = await multicall(masterchefABI, calls)\r\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\r\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\r\n  })\r\n  return parsedStakedBalances\r\n}\r\n\r\nexport const fetchFarmUserEarnings = async (account: string) => {\r\n  const masterChefAdress = getMasterChefAddress()\r\n\r\n  const calls = farmsConfig.map((farm) => {\r\n    return {\r\n      address: masterChefAdress,\r\n      name: 'pendingPiano',\r\n      params: [farm.pid, account],\r\n    }\r\n  })\r\n\r\n  const rawEarnings = await multicall(masterchefABI, calls)\r\n  const parsedEarnings = rawEarnings.map((earnings) => {\r\n    return new BigNumber(earnings).toJSON()\r\n  })\r\n  return parsedEarnings\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice } from '@reduxjs/toolkit'\r\nimport farmsConfig from 'config/constants/farms'\r\nimport fetchFarms from './fetchFarms'\r\nimport {\r\n  fetchFarmUserEarnings,\r\n  fetchFarmUserAllowances,\r\n  fetchFarmUserTokenBalances,\r\n  fetchFarmUserStakedBalances,\r\n} from './fetchFarmUser'\r\nimport { FarmsState, Farm } from '../types'\r\n\r\nconst initialState: FarmsState = { data: [...farmsConfig] }\r\n\r\nexport const farmsSlice = createSlice({\r\n  name: 'Farms',\r\n  initialState,\r\n  reducers: {\r\n    setFarmsPublicData: (state, action) => {\r\n      const liveFarmsData: Farm[] = action.payload\r\n      state.data = state.data.map((farm) => {\r\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\r\n        return { ...farm, ...liveFarmData }\r\n      })\r\n    },\r\n    setFarmUserData: (state, action) => {\r\n      const { arrayOfUserDataObjects } = action.payload\r\n      arrayOfUserDataObjects.forEach((userDataEl) => {\r\n        const { index } = userDataEl\r\n        state.data[index] = { ...state.data[index], userData: userDataEl }\r\n      })\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setFarmsPublicData, setFarmUserData } = farmsSlice.actions\r\n\r\n// Thunks\r\nexport const fetchFarmsPublicDataAsync = () => async (dispatch) => {\r\n  const farms = await fetchFarms()\r\n  dispatch(setFarmsPublicData(farms))\r\n}\r\nexport const fetchFarmUserDataAsync = (account) => async (dispatch) => {\r\n  const userFarmAllowances = await fetchFarmUserAllowances(account)\r\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account)\r\n  const userStakedBalances = await fetchFarmUserStakedBalances(account)\r\n  const userFarmEarnings = await fetchFarmUserEarnings(account)\r\n\r\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\r\n    return {\r\n      index,\r\n      allowance: userFarmAllowances[index],\r\n      tokenBalance: userFarmTokenBalances[index],\r\n      stakedBalance: userStakedBalances[index],\r\n      earnings: userFarmEarnings[index],\r\n    }\r\n  })\r\n\r\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\r\n}\r\n\r\nexport default farmsSlice.reducer\r\n","import merge from 'lodash/merge'\r\nimport teamsList from 'config/constants/teams'\r\nimport { getProfileContract } from 'utils/contractHelpers'\r\nimport { Team } from 'config/constants/types'\r\nimport makeBatchRequest from 'utils/makeBatchRequest'\r\nimport { TeamsById, TeamResponse } from 'state/types'\r\n\r\nconst profileContract = getProfileContract()\r\n\r\nexport const getTeam = async (teamId: number): Promise<Team> => {\r\n  try {\r\n    const {\r\n      0: teamName,\r\n      2: numberUsers,\r\n      3: numberPoints,\r\n      4: isJoinable,\r\n    } = await profileContract.methods.getTeamProfile(teamId).call()\r\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\r\n\r\n    return merge({}, staticTeamInfo, {\r\n      isJoinable,\r\n      name: teamName,\r\n      users: numberUsers,\r\n      points: numberPoints,\r\n    })\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n\r\n/**\r\n * Gets on-chain data and merges it with the existing static list of teams\r\n */\r\nexport const getTeams = async (): Promise<TeamsById> => {\r\n  try {\r\n    const teamsById = teamsList.reduce((accum, team) => {\r\n      return {\r\n        ...accum,\r\n        [team.id]: team,\r\n      }\r\n    }, {})\r\n    const nbTeams = await profileContract.methods.numberTeams().call()\r\n    const calls = []\r\n\r\n    for (let i = 1; i <= nbTeams; i++) {\r\n      calls.push(profileContract.methods.getTeamProfile(i).call)\r\n    }\r\n\r\n    const teamData = (await makeBatchRequest(calls)) as TeamResponse[]\r\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\r\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\r\n\r\n      return {\r\n        ...accum,\r\n        [index + 1]: {\r\n          name: teamName,\r\n          users: Number(numberUsers),\r\n          points: Number(numberPoints),\r\n          isJoinable,\r\n        },\r\n      }\r\n    }, {})\r\n\r\n    return merge({}, teamsById, onChainTeamData)\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n","import { Team } from './types'\r\n\r\nconst teams: Team[] = [\r\n\r\n]\r\n\r\nexport default teams\r\n","import { Nft } from './types'\r\n\r\nconst Nfts: Nft[] = [\r\n  {\r\n    name: 'Bullish',\r\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\r\n    images: {\r\n      lg: 'bullish-lg.png',\r\n      md: 'bullish-md.png',\r\n      sm: 'bullish-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png',\r\n    },\r\n    video: {\r\n      webm: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm',\r\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 11,\r\n  },\r\n  {\r\n    name: 'Hiccup',\r\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\r\n    images: {\r\n      lg: 'hiccup-lg.png',\r\n      md: 'hiccup-md.png',\r\n      sm: 'hiccup-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 10,\r\n  },\r\n  {\r\n    name: 'Sleepy',\r\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\r\n    images: {\r\n      lg: 'sleepy-lg.png',\r\n      md: 'sleepy-md.png',\r\n      sm: 'sleepy-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png',\r\n      blur: 'sleepy-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 5,\r\n  },\r\n  {\r\n    name: 'Sunny',\r\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\r\n    images: {\r\n      lg: 'sunny-lg.png',\r\n      md: 'sunny-md.png',\r\n      sm: 'sunny-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png',\r\n      blur: 'sunny-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 9,\r\n  },\r\n  {\r\n    name: 'Churro',\r\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\r\n    images: {\r\n      lg: 'churro-lg.png',\r\n      md: 'churro-md.png',\r\n      sm: 'churro-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png',\r\n      blur: 'churro-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 8,\r\n  },\r\n  {\r\n    name: 'Dollop',\r\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\r\n    images: {\r\n      lg: 'dollop-lg.png',\r\n      md: 'dollop-md.png',\r\n      sm: 'dollop-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png',\r\n      blur: 'dollop-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 6,\r\n  },\r\n  {\r\n    name: 'Twinkle',\r\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\r\n    images: {\r\n      lg: 'twinkle-lg.png',\r\n      md: 'twinkle-md.png',\r\n      sm: 'twinkle-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png',\r\n      blur: 'twinkle-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 7,\r\n  },\r\n  {\r\n    name: 'Swapsies',\r\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\r\n    images: {\r\n      lg: 'swapsies-lg.png',\r\n      md: 'swapsies-md.png',\r\n      sm: 'swapsies-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\r\n      blur: 'swapsies-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 0,\r\n  },\r\n  {\r\n    name: 'Drizzle',\r\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\r\n    images: {\r\n      lg: 'drizzle-lg.png',\r\n      md: 'drizzle-md.png',\r\n      sm: 'drizzle-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\r\n      blur: 'drizzle-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 1,\r\n  },\r\n  {\r\n    name: 'Blueberries',\r\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\r\n    images: {\r\n      lg: 'blueberries-lg.png',\r\n      md: 'blueberries-md.png',\r\n      sm: 'blueberries-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\r\n      blur: 'blueberries-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 2,\r\n  },\r\n  {\r\n    name: 'Circular',\r\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\r\n    images: {\r\n      lg: 'circular-lg.png',\r\n      md: 'circular-md.png',\r\n      sm: 'circular-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\r\n      blur: 'circular-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 3,\r\n  },\r\n  {\r\n    name: 'Sparkle',\r\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\r\n    images: {\r\n      lg: 'sparkle-lg.png',\r\n      md: 'sparkle-md.png',\r\n      sm: 'sparkle-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\r\n      blur: 'sparkle-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 4,\r\n  },\r\n]\r\n\r\nexport default Nfts\r\n","import { useContext } from 'react'\r\nimport { RefreshContext } from 'contexts/RefreshContext'\r\n\r\nconst useRefresh = () => {\r\n  const { fast, slow } = useContext(RefreshContext)\r\n  return { fastRefresh: fast, slowRefresh: slow }\r\n}\r\n\r\nexport default useRefresh\r\n","// Set of helper functions to facilitate wallet setup\r\n\r\nimport { nodes } from './getRpcUrl'\r\n\r\n/**\r\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\r\n * @returns {boolean} true if the setup succeeded, false otherwise\r\n */\r\nexport const setupNetwork = async () => {\r\n  const provider = (window as WindowChain).ethereum\r\n  if (provider) {\r\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\r\n    try {\r\n      await provider.request({\r\n        method: 'wallet_addEthereumChain',\r\n        params: [\r\n          {\r\n            chainId: `0x${chainId.toString(16)}`,\r\n            chainName: 'Binance Smart Chain Mainnet',\r\n            nativeCurrency: {\r\n              name: 'BNB',\r\n              symbol: 'bnb',\r\n              decimals: 18,\r\n            },\r\n            rpcUrls: nodes,\r\n            blockExplorerUrls: ['https://bscscan.com/'],\r\n          },\r\n        ],\r\n      })\r\n      return true\r\n    } catch (error) {\r\n      console.error(error)\r\n      return false\r\n    }\r\n  } else {\r\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\r\n    return false\r\n  }\r\n}\r\n\r\n/**\r\n * Prompt the user to add a custom token to metamask\r\n * @param tokenAddress\r\n * @param tokenSymbol\r\n * @param tokenDecimals\r\n * @param tokenImage\r\n * @returns {boolean} true if the token has been added, false otherwise\r\n */\r\nexport const registerToken = async (\r\n  tokenAddress: string,\r\n  tokenSymbol: string,\r\n  tokenDecimals: number,\r\n  tokenImage: string,\r\n) => {\r\n  const tokenAdded = await (window as WindowChain).ethereum.request({\r\n    method: 'wallet_watchAsset',\r\n    params: {\r\n      type: 'ERC20',\r\n      options: {\r\n        address: tokenAddress,\r\n        symbol: tokenSymbol,\r\n        decimals: tokenDecimals,\r\n        image: tokenImage,\r\n      },\r\n    },\r\n  })\r\n\r\n  return tokenAdded\r\n}\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\r\nimport {\r\n  NoEthereumProviderError,\r\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\r\n} from '@web3-react/injected-connector'\r\nimport {\r\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\r\n  WalletConnectConnector,\r\n} from '@web3-react/walletconnect-connector'\r\nimport { ConnectorNames, connectorLocalStorageKey } from '@mozartfinance/uikit'\r\nimport { useToast } from 'state/hooks'\r\nimport { connectorsByName } from 'utils/web3React'\r\nimport { setupNetwork } from 'utils/wallet'\r\n\r\nconst useAuth = () => {\r\n  const { activate, deactivate } = useWeb3React()\r\n  const { toastError } = useToast()\r\n\r\n  const login = useCallback((connectorID: ConnectorNames) => {\r\n    const connector = connectorsByName[connectorID]\r\n    if (connector) {\r\n      activate(connector, async (error: Error) => {\r\n        if (error instanceof UnsupportedChainIdError) {\r\n          const hasSetup = await setupNetwork()\r\n          if (hasSetup) {\r\n            activate(connector)\r\n          }\r\n        } else {\r\n          window.localStorage.removeItem(connectorLocalStorageKey)\r\n          if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\r\n            toastError('Provider Error', 'No provider was found')\r\n          } else if (\r\n            error instanceof UserRejectedRequestErrorInjected ||\r\n            error instanceof UserRejectedRequestErrorWalletConnect\r\n          ) {\r\n            if (connector instanceof WalletConnectConnector) {\r\n              const walletConnector = connector as WalletConnectConnector\r\n              walletConnector.walletConnectProvider = null\r\n            }\r\n            toastError('Authorization Error', 'Please authorize to access your account')\r\n          } else {\r\n            toastError(error.name, error.message)\r\n          }\r\n        }\r\n      })\r\n    } else {\r\n      toastError(\"Can't find connector\", 'The connector config is wrong')\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return { login, logout: deactivate }\r\n}\r\n\r\nexport default useAuth\r\n","import { Ifo } from './types'\r\n\r\nconst ifos: Ifo[] = [\r\n\r\n]\r\n\r\nexport default ifos\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { BlockState } from '../types'\r\n\r\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\r\n\r\nexport const blockSlice = createSlice({\r\n  name: 'Block',\r\n  initialState,\r\n  reducers: {\r\n    setBlock: (state, action: PayloadAction<number>) => {\r\n      if (state.initialBlock === 0) {\r\n        state.initialBlock = action.payload\r\n      }\r\n\r\n      state.currentBlock = action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setBlock } = blockSlice.actions\r\n\r\nexport default blockSlice.reducer\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nconst FAST_INTERVAL = 10000\r\nconst SLOW_INTERVAL = 60000\r\n\r\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\r\n\r\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\r\nconst RefreshContextProvider = ({ children }) => {\r\n  const [slow, setSlow] = useState(0)\r\n  const [fast, setFast] = useState(0)\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      setFast((prev) => prev + 1)\r\n    }, FAST_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      setSlow((prev) => prev + 1)\r\n    }, SLOW_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\r\n}\r\n\r\nexport { RefreshContext, RefreshContextProvider }\r\n","import { TranslatableText } from 'state/types'\r\n\r\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\r\n\r\nexport interface Ifo {\r\n  id: string\r\n  isActive: boolean\r\n  address: string\r\n  name: string\r\n  subTitle?: string\r\n  description?: string\r\n  launchDate: string\r\n  launchTime: string\r\n  saleAmount: string\r\n  raiseAmount: string\r\n  cakeToBurn: string\r\n  projectSiteUrl: string\r\n  currency: string\r\n  currencyAddress: string\r\n  tokenDecimals: number\r\n  tokenSymbol: string\r\n  releaseBlockNumber: number\r\n  campaignId?: string\r\n}\r\n\r\nexport enum PoolCategory {\r\n  'COMMUNITY' = 'Community',\r\n  'CORE' = 'Core',\r\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\r\n}\r\n\r\nexport interface Address {\r\n  97?: string\r\n  56: string\r\n}\r\n\r\nexport interface Token {\r\n  symbol: string\r\n  address?: Address\r\n  decimals?: number\r\n  projectLink?: string\r\n}\r\n\r\nexport interface FarmConfig {\r\n  pid: number\r\n  lpSymbol: string\r\n  lpAddresses: Address\r\n  token: Token\r\n  quoteToken: Token\r\n  multiplier?: string\r\n  isCommunity?: boolean\r\n  dual?: {\r\n    rewardPerBlock: number\r\n    earnLabel: string\r\n    endBlock: number\r\n  }\r\n  depositFeeBP?: number\r\n}\r\n\r\nexport interface PoolConfig {\r\n  sousId: number\r\n  earningToken: Token\r\n  stakingToken: Token\r\n  stakingLimit?: number\r\n  contractAddress: Address\r\n  poolCategory: PoolCategory\r\n  tokenPerBlock: string\r\n  sortOrder?: number\r\n  harvest?: boolean\r\n  isFinished?: boolean\r\n}\r\n\r\nexport type Images = {\r\n  lg: string\r\n  md: string\r\n  sm: string\r\n  ipfs?: string\r\n}\r\n\r\nexport type NftImages = {\r\n  blur?: string\r\n} & Images\r\n\r\nexport type NftVideo = {\r\n  webm: string\r\n  mp4: string\r\n}\r\n\r\nexport type Nft = {\r\n  name: string\r\n  description: string\r\n  images: NftImages\r\n  sortOrder: number\r\n  bunnyId: number\r\n  video?: NftVideo\r\n}\r\n\r\nexport type TeamImages = {\r\n  alt: string\r\n} & Images\r\n\r\nexport type Team = {\r\n  id: number\r\n  name: string\r\n  description: string\r\n  isJoinable?: boolean\r\n  users: number\r\n  points: number\r\n  images: TeamImages\r\n  background: string\r\n  textColor: string\r\n}\r\n\r\nexport type CampaignType = 'ifo'\r\n\r\nexport type Campaign = {\r\n  id: string\r\n  type: CampaignType\r\n  title?: TranslatableText\r\n  description?: TranslatableText\r\n  badge?: string\r\n}\r\n","import { getWeb3NoAccount } from './web3'\r\n\r\n/**\r\n * Accepts an array of contract method calls and batches them\r\n *\r\n * Example:\r\n *\r\n * [\r\n *  contract.method.balanceOf().call,\r\n *  contract.method.startBlockNumber().call\r\n * ]\r\n */\r\nconst makeBatchRequest = (calls: any[]) => {\r\n  try {\r\n    const web3 = getWeb3NoAccount()\r\n    const batch = new web3.BatchRequest()\r\n\r\n    const promises = calls.map((call) => {\r\n      return new Promise((resolve, reject) => {\r\n        batch.add(\r\n          call.request({}, (err, result) => {\r\n            if (err) {\r\n              reject(err)\r\n            } else {\r\n              resolve(result)\r\n            }\r\n          }),\r\n        )\r\n      })\r\n    })\r\n\r\n    batch.execute()\r\n\r\n    return Promise.all(promises)\r\n  } catch {\r\n    return null\r\n  }\r\n}\r\n\r\nexport default makeBatchRequest\r\n","/* eslint-disable no-param-reassign */\r\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { PriceApiResponse, PriceState } from 'state/types'\r\n\r\nconst initialState: PriceState = {\r\n  isLoading: false,\r\n  lastUpdated: null,\r\n  data: null,\r\n}\r\n\r\n// Thunks\r\nexport const fetchPrices = createAsyncThunk<PriceApiResponse>('prices/fetch', async () => {\r\n  const response = await fetch('https://api.pancakeswap.com/api/v1/price')\r\n  const data = (await response.json()) as PriceApiResponse\r\n\r\n  // Return normalized token names\r\n  return {\r\n    update_at: data.update_at,\r\n    prices: Object.keys(data.prices).reduce((accum, token) => {\r\n      return {\r\n        ...accum,\r\n        [token.toLowerCase()]: data.prices[token],\r\n      }\r\n    }, {}),\r\n  }\r\n})\r\n\r\nexport const pricesSlice = createSlice({\r\n  name: 'prices',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchPrices.pending, (state) => {\r\n      state.isLoading = true\r\n    })\r\n    builder.addCase(fetchPrices.fulfilled, (state, action: PayloadAction<PriceApiResponse>) => {\r\n      state.isLoading = false\r\n      state.lastUpdated = action.payload.update_at\r\n      state.data = action.payload.prices\r\n    })\r\n  },\r\n})\r\n\r\nexport default pricesSlice.reducer\r\n","import { InjectedConnector } from '@web3-react/injected-connector'\r\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\r\nimport { BscConnector } from '@binance-chain/bsc-connector'\r\nimport { ConnectorNames } from '@mozartfinance/uikit'\r\nimport Web3 from 'web3'\r\nimport getNodeUrl from './getRpcUrl'\r\n\r\nconst POLLING_INTERVAL = 12000\r\nconst rpcUrl = getNodeUrl()\r\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\r\n\r\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\r\n\r\nconst walletconnect = new WalletConnectConnector({\r\n  rpc: { [chainId]: rpcUrl },\r\n  bridge: 'https://bridge.walletconnect.org',\r\n  qrcode: true,\r\n  pollingInterval: POLLING_INTERVAL,\r\n})\r\n\r\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\r\n\r\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\r\n  [ConnectorNames.Injected]: injected,\r\n  [ConnectorNames.WalletConnect]: walletconnect,\r\n  [ConnectorNames.BSC]: bscConnector,\r\n}\r\n\r\nexport const getLibrary = (provider): Web3 => {\r\n  return provider\r\n}\r\n","import React, { createContext } from 'react'\r\n\r\nexport interface TranslationState {\r\n  translations: Array<any>\r\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\r\n}\r\n\r\nconst defaultTranslationState: TranslationState = {\r\n  translations: [],\r\n  setTranslations: (): void => undefined,\r\n}\r\n\r\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\r\n","import { Campaign } from './types'\r\n\r\n/**\r\n * id: The campaign id (required)\r\n * type: The type of the achievement\r\n * title: A string or an object to be translated.\r\n * Note: If the value is a string it is likely used as data in a translation object\r\n *\r\n * badge: Achievement avatar\r\n */\r\n\r\nconst campaigns: Campaign[] = [\r\n\r\n]\r\n\r\n/**\r\n * Transform the campaign config into a map. Keeps the config the same\r\n * as the others and allows easy access to a campaign by id\r\n */\r\nexport const campaignMap = new Map<string, Campaign>()\r\n\r\ncampaigns.forEach((campaign) => {\r\n  campaignMap.set(campaign.id, campaign)\r\n})\r\n\r\nexport default campaigns\r\n","import { Campaign } from 'config/constants/types'\r\nimport { getPointCenterIfoContract } from 'utils/contractHelpers'\r\nimport ifosList from 'config/constants/ifo'\r\nimport { campaignMap } from 'config/constants/campaigns'\r\nimport { Achievement, TranslatableText } from 'state/types'\r\nimport makeBatchRequest from './makeBatchRequest'\r\n\r\ninterface IfoMapResponse {\r\n  thresholdToClaim: string\r\n  campaignId: string\r\n  numberPoints: string\r\n}\r\n\r\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\r\n  switch (campaign.type) {\r\n    case 'ifo':\r\n      return {\r\n        id: 999,\r\n        fallback: `IFO Shopper: ${campaign.title}`,\r\n        data: {\r\n          name: campaign.title as string,\r\n        },\r\n      }\r\n    default:\r\n      return campaign.title\r\n  }\r\n}\r\n\r\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\r\n  switch (campaign.type) {\r\n    case 'ifo':\r\n      return {\r\n        id: 999,\r\n        fallback: `Committed more than $5 worth of LP in the ${campaign.title} IFO`,\r\n        data: {\r\n          name: campaign.title as string,\r\n        },\r\n      }\r\n    default:\r\n      return campaign.description\r\n  }\r\n}\r\n\r\n/**\r\n * Checks if a wallet is eligble to claim points from valid IFO's\r\n */\r\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\r\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\r\n  const ifoCampaignAddresses = ifoCampaigns.map((ifoItem) => ifoItem.address)\r\n  const pointCenterContract = getPointCenterIfoContract()\r\n\r\n  // Returns the claim status of every IFO with a campaign ID\r\n  const claimStatuses = (await pointCenterContract.methods\r\n    .checkClaimStatuses(account, ifoCampaignAddresses)\r\n    .call()) as boolean[]\r\n\r\n  // Get IFO data for all IFO's that are eligible to claim\r\n  const claimableIfoData = (await makeBatchRequest(\r\n    claimStatuses.reduce((accum, claimStatus, index) => {\r\n      if (claimStatus === true) {\r\n        return [...accum, pointCenterContract.methods.ifos(ifoCampaignAddresses[index]).call]\r\n      }\r\n\r\n      return accum\r\n    }, []),\r\n  )) as IfoMapResponse[]\r\n\r\n  // Transform response to an Achievement\r\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\r\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\r\n      return accum\r\n    }\r\n\r\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\r\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\r\n\r\n    return [\r\n      ...accum,\r\n      {\r\n        address,\r\n        id: claimableIfoDataItem.campaignId,\r\n        type: 'ifo',\r\n        title: getAchievementTitle(campaignMeta),\r\n        description: getAchievementDescription(campaignMeta),\r\n        badge: campaignMeta.badge,\r\n        points: Number(claimableIfoDataItem.numberPoints),\r\n      },\r\n    ]\r\n  }, [])\r\n}\r\n","import { request, gql } from 'graphql-request'\r\nimport { campaignMap } from 'config/constants/campaigns'\r\nimport { Achievement } from 'state/types'\r\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\r\n\r\ninterface UserPointIncreaseEvent {\r\n  campaignId: string\r\n  id: string // wallet address\r\n  points: string\r\n}\r\n\r\nconst profileSubgraphApi = process.env.REACT_APP_SUBGRAPH_PROFILE\r\n\r\n/**\r\n * Gets all user point increase events on the profile filtered by wallet address\r\n */\r\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\r\n  try {\r\n    const data = await request(\r\n      profileSubgraphApi,\r\n      gql`\r\n        {\r\n          user(id: \"${account.toLowerCase()}\") {\r\n            points {\r\n              id\r\n              campaignId\r\n              points\r\n            }\r\n          }\r\n        }\r\n      `,\r\n    )\r\n    return data.user.points\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n\r\n/**\r\n * Gets all user point increase events and adds achievement meta\r\n */\r\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\r\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\r\n\r\n  if (!pointIncreaseEvents) {\r\n    return []\r\n  }\r\n\r\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\r\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\r\n\r\n    return [\r\n      ...accum,\r\n      {\r\n        id: userPoint.campaignId,\r\n        type: campaignMeta.type,\r\n        address: userPoint.id,\r\n        title: getAchievementTitle(campaignMeta),\r\n        description: getAchievementDescription(campaignMeta),\r\n        badge: campaignMeta.badge,\r\n        points: Number(userPoint.points),\r\n      },\r\n    ]\r\n  }, [])\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { toastTypes } from '@mozartfinance/uikit'\r\nimport { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\r\nimport { kebabCase } from 'lodash'\r\nimport { push } from 'state/toasts'\r\nimport { AchievementState, Achievement } from '../types'\r\nimport { getAchievements } from './helpers'\r\n\r\nconst initialState: AchievementState = {\r\n  data: [],\r\n}\r\n\r\nexport const achievementSlice = createSlice({\r\n  name: 'achievements',\r\n  initialState,\r\n  reducers: {\r\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\r\n      state.data.push(action.payload)\r\n    },\r\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\r\n      state.data.concat(action.payload)\r\n    },\r\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\r\n      state.data = action.payload\r\n    },\r\n    clearAchievements: (state) => {\r\n      state.data = []\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\r\n\r\n// Thunks\r\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\r\n  try {\r\n    const achievements = await getAchievements(account)\r\n    dispatch(setAchievements(achievements))\r\n  } catch (error) {\r\n    console.error(error)\r\n    const title = 'Error fetching achievements'\r\n    dispatch(push({ id: kebabCase(title), type: toastTypes.DANGER, title }))\r\n  }\r\n}\r\n\r\nexport default achievementSlice.reducer\r\n","export default {\r\n  masterChef: {\r\n    97: '',\r\n    56: '0x2AED73484814e67F8b795Fc38Af71E2CEc429d0f',\r\n  },\r\n  sousChef: {\r\n    97: '',\r\n    56: '0xeE685114AaA400e196B7aa38633a7Cc8E10243D1',\r\n  },\r\n  lottery: {\r\n    97: '0x99c2EcD51d52c036B00130d882Bc65f20Fdecf9f',\r\n    56: '0x3C3f2049cc17C136a604bE23cF7E42745edf3b91',\r\n  },\r\n  lotteryNFT: {\r\n    97: '0x8175c10383511b3a1C68f9dB222dc14A19CC950e',\r\n    56: '0x5e74094Cd416f55179DBd0E45b1a8ED030e396A1',\r\n  },\r\n  mulltiCall: {\r\n    56: '0x1ee38d535d541c55c9dae27b12edf090c608e6fb',\r\n    97: '0x67ADCB4dF3931b0C5Da724058ADC2174a9844412',\r\n  },\r\n  pancakeProfile: {\r\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\r\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\r\n  },\r\n  pancakeRabbits: {\r\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\r\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\r\n  },\r\n  bunnyFactory: {\r\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\r\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\r\n  },\r\n  claimRefund: {\r\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\r\n    97: '',\r\n  },\r\n  pointCenterIfo: {\r\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\r\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\r\n  },\r\n  bunnySpecial: {\r\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\r\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\r\n  },\r\n}\r\n","import addresses from 'config/constants/contracts'\r\nimport tokens from 'config/constants/tokens'\r\nimport { Address } from 'config/constants/types'\r\n\r\nexport const getAddress = (address: Address): string => {\r\n  const mainNetChainId = 56\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  return address[chainId] ? address[chainId] : address[mainNetChainId]\r\n}\r\n\r\nexport const getCakeAddress = () => {\r\n  return getAddress(tokens.piano.address)\r\n}\r\nexport const getMasterChefAddress = () => {\r\n  return getAddress(addresses.masterChef)\r\n}\r\nexport const getMulticallAddress = () => {\r\n  return getAddress(addresses.mulltiCall)\r\n}\r\nexport const getWbnbAddress = () => {\r\n  return getAddress(tokens.wbnb.address)\r\n}\r\nexport const getLotteryAddress = () => {\r\n  return getAddress(addresses.lottery)\r\n}\r\nexport const getLotteryTicketAddress = () => {\r\n  return getAddress(addresses.lotteryNFT)\r\n}\r\nexport const getPancakeProfileAddress = () => {\r\n  return getAddress(addresses.pancakeProfile)\r\n}\r\nexport const getPancakeRabbitsAddress = () => {\r\n  return getAddress(addresses.pancakeRabbits)\r\n}\r\nexport const getBunnyFactoryAddress = () => {\r\n  return getAddress(addresses.bunnyFactory)\r\n}\r\nexport const getClaimRefundAddress = () => {\r\n  return getAddress(addresses.claimRefund)\r\n}\r\nexport const getPointCenterIfoAddress = () => {\r\n  return getAddress(addresses.pointCenterIfo)\r\n}\r\nexport const getBunnySpecialAddress = () => {\r\n  return getAddress(addresses.bunnySpecial)\r\n}\r\n","import { useContext } from 'react'\r\nimport { isEmpty } from 'lodash'\r\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\r\n\r\ninterface ContextData {\r\n  [key: string]: number | string\r\n}\r\n\r\nconst useI18n = () => {\r\n  const { translations } = useContext(TranslationsContext)\r\n\r\n  return (translationId: number, fallback: string, data: ContextData = {}) => {\r\n    if (translations.length === 0) {\r\n      return fallback\r\n    }\r\n\r\n    const foundTranslation = translations.find((translation) => {\r\n      return translation.data.stringId === translationId\r\n    })\r\n\r\n    if (foundTranslation) {\r\n      const { text } = foundTranslation.data\r\n      const includesVariable = text.includes('%')\r\n\r\n      if (includesVariable) {\r\n        let interpolatedText = text\r\n\r\n        // If dynamic tags are found but no data was passed return the fallback\r\n        if (isEmpty(data)) {\r\n          return fallback\r\n        }\r\n\r\n        Object.keys(data).forEach((dataKey) => {\r\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\r\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey])\r\n        })\r\n\r\n        return interpolatedText\r\n      }\r\n\r\n      return text\r\n    }\r\n\r\n    return fallback\r\n  }\r\n}\r\n\r\nexport default useI18n\r\n","import BigNumber from 'bignumber.js'\r\n\r\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\r\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\r\n  return displayBalance.toNumber()\r\n}\r\n\r\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\r\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\r\n}\r\n","import farmsConfig from './farms'\r\n\r\nconst communityFarms = farmsConfig.filter((farm) => farm.isCommunity).map((farm) => farm.token.symbol)\r\n\r\nexport { farmsConfig, communityFarms }\r\nexport { default as poolsConfig } from './pools'\r\nexport { default as ifosConfig } from './ifo'\r\n","import styled from 'styled-components'\r\nimport Container from './Container'\r\n\r\nconst Page = styled(Container)`\r\n  min-height: calc(100vh - 64px);\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-top: 24px;\r\n    padding-bottom: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 32px;\r\n    padding-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport default Page\r\n","const tokens = {\r\n  bnb: {\r\n    symbol: 'BNB',\r\n    projectLink: 'https://www.binance.com/',\r\n  },\r\n  wbnb: {\r\n    symbol: 'wBNB',\r\n    address: {\r\n      56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\r\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://mozartfinance.io/',\r\n  },\r\n  piano: {\r\n    symbol: 'PIANO',\r\n    address: {\r\n      56: '0xd46936677b2c1bb696f2b67c55239331e2b7cd42',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://mozartfinance.io/',\r\n  },\r\n  foam: {\r\n    symbol: 'FOAM',\r\n    address: {\r\n      56: '0x5380ce816082d9a01c914cab73eb062f290131d6',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://mozartfinance.io/',\r\n  },\r\n  busd: {\r\n    symbol: 'BUSD',\r\n    address: {\r\n      56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.paxos.com/busd/',\r\n  },\r\n  cake: {\r\n    symbol: 'CAKE',\r\n    address: {\r\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\r\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://pancakeswap.finance/',\r\n  },\r\n  usdc: {\r\n    symbol: 'USDC',\r\n    address: {\r\n      56: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.centre.io/usdc',\r\n  },\r\n  ada: {\r\n    symbol: 'ADA',\r\n    address: {\r\n      56: '0x3ee2200efb3400fabb9aacf31297cbdd1d435d47',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.cardano.org/',\r\n  },\r\n  dot: {\r\n    symbol: 'DOT',\r\n    address: {\r\n      56: '0x7083609fce4d1d8dc0c979aab8c869ea2c873402',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://polkadot.network/',\r\n  },\r\n  eth: {\r\n    symbol: 'ETH',\r\n    address: {\r\n      56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://ethereum.org/en/',\r\n  },\r\n  usdt: {\r\n    symbol: 'USDT',\r\n    address: {\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n      56: '0x55d398326f99059ff775485246999027b3197955',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://tether.to/',\r\n  },\r\n}\r\n\r\nexport default tokens\r\n","import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 1200px;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-left: 24px;\r\n    padding-right: 24px;\r\n  }\r\n`\r\n\r\nexport default Container\r\n","import { AbiItem } from 'web3-utils'\r\nimport { Interface } from '@ethersproject/abi'\r\nimport { getWeb3NoAccount } from 'utils/web3'\r\nimport MultiCallAbi from 'config/abi/Multicall.json'\r\nimport { getMulticallAddress } from 'utils/addressHelpers'\r\n\r\ninterface Call {\r\n  address: string // Address of the contract\r\n  name: string // Function name on the contract (exemple: balanceOf)\r\n  params?: any[] // Function params\r\n}\r\n\r\nconst multicall = async (abi: any[], calls: Call[]) => {\r\n  const web3 = getWeb3NoAccount()\r\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\r\n  const itf = new Interface(abi)\r\n\r\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\r\n  const { returnData } = await multi.methods.aggregate(calldata).call()\r\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\r\n\r\n  return res\r\n}\r\n\r\nexport default multicall\r\n","import tokens from './tokens'\r\nimport { PoolConfig, PoolCategory } from './types'\r\n\r\nconst pools: PoolConfig[] = [\r\n  {\r\n    sousId: 0,\r\n    stakingToken: tokens.piano,\r\n    earningToken: tokens.piano,\r\n    contractAddress: {\r\n      56: '0x2AED73484814e67F8b795Fc38Af71E2CEc429d0f',\r\n      97: ''\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.2499779405276626',\r\n    sortOrder: 1,\r\n    isFinished: false,\r\n  },\r\n]\r\n\r\nexport default pools\r\n","import { useEffect, useMemo } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { kebabCase } from 'lodash'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Toast, toastTypes } from '@mozartfinance/uikit'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Team } from 'config/constants/types'\r\nimport { getWeb3NoAccount } from 'utils/web3'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport {\r\n  fetchFarmsPublicDataAsync,\r\n  fetchPoolsPublicDataAsync,\r\n  fetchPoolsUserDataAsync,\r\n  push as pushToast,\r\n  remove as removeToast,\r\n  clear as clearToast,\r\n  setBlock,\r\n} from './actions'\r\nimport { State, Farm, Pool, ProfileState, TeamsState, AchievementState, PriceState } from './types'\r\nimport { fetchProfile } from './profile'\r\nimport { fetchTeam, fetchTeams } from './teams'\r\nimport { fetchAchievements } from './achievements'\r\nimport { fetchPrices } from './prices'\r\nimport {getBalanceNumber} from \"../utils/formatBalance\";\r\n\r\nexport const useFetchPublicData = () => {\r\n  const dispatch = useDispatch()\r\n  const { slowRefresh } = useRefresh()\r\n  useEffect(() => {\r\n    dispatch(fetchFarmsPublicDataAsync())\r\n    dispatch(fetchPoolsPublicDataAsync())\r\n  }, [dispatch, slowRefresh])\r\n\r\n  useEffect(() => {\r\n    const web3 = getWeb3NoAccount()\r\n    const interval = setInterval(async () => {\r\n      const blockNumber = await web3.eth.getBlockNumber()\r\n      dispatch(setBlock(blockNumber))\r\n    }, 6000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [dispatch])\r\n}\r\n\r\n// Farms\r\n\r\nexport const useFarms = (): Farm[] => {\r\n  const farms = useSelector((state: State) => state.farms.data)\r\n  return farms\r\n}\r\n\r\nexport const useFarmFromPid = (pid): Farm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\r\n  return farm\r\n}\r\n\r\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\r\n  return farm\r\n}\r\n\r\nexport const useFarmUser = (pid) => {\r\n  const farm = useFarmFromPid(pid)\r\n\r\n  return {\r\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\r\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\r\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\r\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\r\n  }\r\n}\r\n\r\n// Pools\r\n\r\nexport const usePools = (account): Pool[] => {\r\n  const { fastRefresh } = useRefresh()\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchPoolsUserDataAsync(account))\r\n    }\r\n  }, [account, dispatch, fastRefresh])\r\n\r\n  const pools = useSelector((state: State) => state.pools.data)\r\n  return pools\r\n}\r\n\r\nexport const usePoolFromPid = (sousId): Pool => {\r\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\r\n  return pool\r\n}\r\n\r\n// Toasts\r\nexport const useToast = () => {\r\n  const dispatch = useDispatch()\r\n  const helpers = useMemo(() => {\r\n    const push = (toast: Toast) => dispatch(pushToast(toast))\r\n\r\n    return {\r\n      toastError: (title: string, description?: string) => {\r\n        return push({ id: kebabCase(title), type: toastTypes.DANGER, title, description })\r\n      },\r\n      toastInfo: (title: string, description?: string) => {\r\n        return push({ id: kebabCase(title), type: toastTypes.INFO, title, description })\r\n      },\r\n      toastSuccess: (title: string, description?: string) => {\r\n        return push({ id: kebabCase(title), type: toastTypes.SUCCESS, title, description })\r\n      },\r\n      toastWarning: (title: string, description?: string) => {\r\n        return push({ id: kebabCase(title), type: toastTypes.WARNING, title, description })\r\n      },\r\n      push,\r\n      remove: (id: string) => dispatch(removeToast(id)),\r\n      clear: () => dispatch(clearToast()),\r\n    }\r\n  }, [dispatch])\r\n\r\n  return helpers\r\n}\r\n\r\n// Profile\r\n\r\nexport const useFetchProfile = () => {\r\n  const { account } = useWeb3React()\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchProfile(account))\r\n  }, [account, dispatch])\r\n}\r\n\r\nexport const useProfile = () => {\r\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\r\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\r\n}\r\n\r\n// Teams\r\n\r\nexport const useTeam = (id: number) => {\r\n  const team: Team = useSelector((state: State) => state.teams.data[id])\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTeam(id))\r\n  }, [id, dispatch])\r\n\r\n  return team\r\n}\r\n\r\nexport const useTeams = () => {\r\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTeams())\r\n  }, [dispatch])\r\n\r\n  return { teams: data, isInitialized, isLoading }\r\n}\r\n\r\n// Achievements\r\n\r\nexport const useFetchAchievements = () => {\r\n  const { account } = useWeb3React()\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchAchievements(account))\r\n    }\r\n  }, [account, dispatch])\r\n}\r\n\r\nexport const useAchievements = () => {\r\n  const achievements: AchievementState['data'] = useSelector((state: State) => state.achievements.data)\r\n  return achievements\r\n}\r\n\r\n// Prices\r\nexport const useFetchPriceList = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPrices())\r\n  }, [dispatch, slowRefresh])\r\n}\r\n\r\nexport const useGetApiPrices = () => {\r\n  const prices: PriceState['data'] = useSelector((state: State) => state.prices.data)\r\n  return prices\r\n}\r\n\r\nexport const useGetApiPrice = (token: string) => {\r\n  const prices = useGetApiPrices()\r\n\r\n  if (!prices) {\r\n    return null\r\n  }\r\n\r\n  return prices[token.toLowerCase()]\r\n}\r\n\r\nexport const usePriceCakeBusd = (): BigNumber => {\r\n  const ZERO = new BigNumber(0)\r\n  const cakeBnbFarm = useFarmFromPid(1)\r\n  const bnbBusdFarm = useFarmFromPid(4)\r\n\r\n  const bnbBusdPrice = bnbBusdFarm.tokenPriceVsQuote ? new BigNumber(1).div(bnbBusdFarm.tokenPriceVsQuote) : ZERO\r\n  const cakeBusdPrice = cakeBnbFarm.tokenPriceVsQuote ? bnbBusdPrice.times(cakeBnbFarm.tokenPriceVsQuote) : ZERO\r\n\r\n  return cakeBusdPrice\r\n}\r\n\r\n// Block\r\nexport const useBlock = () => {\r\n  return useSelector((state: State) => state.block)\r\n}\r\n\r\nexport const useInitialBlock = () => {\r\n  return useSelector((state: State) => state.block.initialBlock)\r\n}\r\n\r\nexport const usePoolsEx = (): Pool[] => {\r\n  const pools = useSelector((state: State) => state.pools.data)\r\n  return pools\r\n}\r\n\r\nexport const useTotalValue = (): BigNumber => {\r\n  const prices = useGetApiPrices()\r\n  const farms = useFarms()\r\n  const pools = usePoolsEx()\r\n\r\n  let value = new BigNumber(0)\r\n  if(prices) {\r\n    for (let i = 0; i < farms.length; i++) {\r\n      const farm = farms[i]\r\n      const quoteTokenPriceUsd = prices[farm.quoteToken.symbol.toLowerCase()]\r\n      const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(quoteTokenPriceUsd)\r\n      value = value.plus(totalLiquidity);\r\n    }\r\n    for (let i = 0; i < pools.length; i++) {\r\n      const pool = pools[i]\r\n      const quoteTokenPriceUsd = prices[pool.stakingToken.symbol.toLowerCase()]\r\n      const totalLiquidity = new BigNumber(getBalanceNumber(pool.totalStaked, pool.stakingToken.decimals)).times(quoteTokenPriceUsd)\r\n      value = value.plus(totalLiquidity);\r\n    }\r\n  }\r\n  return value;\r\n}","import tokens from './tokens'\r\nimport { FarmConfig } from './types'\r\n\r\nconst farms: FarmConfig[] = [\r\n  {\r\n    pid: 0,\r\n    lpSymbol: 'PIANO',\r\n    lpAddresses: {\r\n      56: '0xd46936677B2C1Bb696F2b67c55239331E2b7Cd42',\r\n      97: '',\r\n    },\r\n    token: tokens.foam,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 1,\r\n    lpSymbol: 'PIANO-BNB LP',\r\n    lpAddresses: {\r\n      56: '0xb40AE531Da43F7D114F2E6D9c331171Ef4130f5F',\r\n      97: '',\r\n    },\r\n    token: tokens.piano,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 2,\r\n    lpSymbol: 'PIANO-BUSD LP',\r\n    lpAddresses: {\r\n      56: '0xd8D201CeBC25c39AD3E05536F94ECc3B6Bc8cAcc',\r\n      97: '',\r\n    },\r\n    token: tokens.piano,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 3,\r\n    lpSymbol: 'PIANO-CAKE LP',\r\n    lpAddresses: {\r\n      56: '0x0E7197386A37c0D792D9D357D59f89b679cf1b06',\r\n      97: '',\r\n    },\r\n    token: tokens.piano,\r\n    quoteToken: tokens.cake,\r\n  },\r\n  {\r\n    pid: 4,\r\n    lpSymbol: 'BUSD-BNB LP',\r\n    lpAddresses: {\r\n      56: '0x1b96b92314c44b159149f7e0303511fb2fc4774f',\r\n      97: ''\r\n    },\r\n    token: tokens.busd,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 5,\r\n    lpSymbol: 'USDC-BUSD LP',\r\n    lpAddresses: {\r\n      56: '0x680dd100e4b394bda26a59dd5c119a391e747d18',\r\n      97: ''\r\n    },\r\n    token: tokens.usdc,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 6,\r\n    lpSymbol: 'CAKE-BNB LP',\r\n    lpAddresses: {\r\n      56: '0xa527a61703d82139f8a06bc30097cc9caa2df5a6',\r\n      97: ''\r\n    },\r\n    token: tokens.cake,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 8,\r\n    lpSymbol: 'PIANO-ADA LP',\r\n    lpAddresses: {\r\n      56: '0xfFeb22c6143B982699E2dcBafBb0EAC51d0F408E',\r\n      97: ''\r\n    },\r\n    token: tokens.piano,\r\n    quoteToken: tokens.ada,\r\n  },\r\n  {\r\n    pid: 9,\r\n    lpSymbol: 'PIANO-DOT LP',\r\n    lpAddresses: {\r\n      56: '0xe3905652c879d9df7319b5756350dd2bb5e052e9',\r\n      97: ''\r\n    },\r\n    token: tokens.piano,\r\n    quoteToken: tokens.dot,\r\n  },\r\n  {\r\n    pid: 10,\r\n    lpSymbol: 'USDT-BUSD LP',\r\n    lpAddresses: {\r\n      56: '0xc15fa3e22c912a276550f3e5fe3b0deb87b55acd',\r\n      97: ''\r\n    },\r\n    token: tokens.usdt,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 11,\r\n    lpSymbol: 'DOT-ETH LP',\r\n    lpAddresses: {\r\n      56: '0x84cd882a0abaf8ad69b85fef0a8d5a36f5c0ecc1',\r\n      97: ''\r\n    },\r\n    token: tokens.dot,\r\n    quoteToken: tokens.eth,\r\n  },\r\n\r\n\r\n]\r\n\r\nexport default farms\r\n","import Web3 from 'web3'\r\nimport { HttpProviderOptions } from 'web3-core-helpers'\r\nimport getRpcUrl from 'utils/getRpcUrl'\r\n\r\nconst RPC_URL = getRpcUrl()\r\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\r\nconst web3NoAccount = new Web3(httpProvider)\r\n\r\nconst getWeb3NoAccount = () => {\r\n  return web3NoAccount\r\n}\r\n\r\nexport { getWeb3NoAccount }\r\nexport default web3NoAccount\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport teamsList from 'config/constants/teams'\r\nimport { Team } from 'config/constants/types'\r\nimport { TeamsById, TeamsState } from '../types'\r\nimport { getTeam, getTeams } from './helpers'\r\n\r\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\r\n  return {\r\n    ...accum,\r\n    [team.id]: team,\r\n  }\r\n}, {})\r\n\r\nconst initialState: TeamsState = {\r\n  isInitialized: false,\r\n  isLoading: true,\r\n  data: teamsById,\r\n}\r\n\r\nexport const teamsSlice = createSlice({\r\n  name: 'teams',\r\n  initialState,\r\n  reducers: {\r\n    fetchStart: (state) => {\r\n      state.isLoading = true\r\n    },\r\n    fetchFailed: (state) => {\r\n      state.isLoading = false\r\n      state.isInitialized = true\r\n    },\r\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\r\n      state.isInitialized = true\r\n      state.isLoading = false\r\n      state.data[action.payload.id] = action.payload\r\n    },\r\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\r\n      state.isInitialized = true\r\n      state.isLoading = false\r\n      state.data = action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\r\n\r\n// Thunks\r\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\r\n  try {\r\n    dispatch(fetchStart())\r\n    const team = await getTeam(teamId)\r\n    dispatch(teamFetchSucceeded(team))\r\n  } catch (error) {\r\n    dispatch(fetchFailed())\r\n  }\r\n}\r\n\r\nexport const fetchTeams = () => async (dispatch) => {\r\n  try {\r\n    dispatch(fetchStart())\r\n    const teams = await getTeams()\r\n    dispatch(teamsFetchSucceeded(teams))\r\n  } catch (error) {\r\n    dispatch(fetchFailed())\r\n  }\r\n}\r\n\r\nexport default teamsSlice.reducer\r\n","import Web3 from 'web3'\r\nimport { AbiItem } from 'web3-utils'\r\nimport web3NoAccount from 'utils/web3'\r\nimport { poolsConfig } from 'config/constants'\r\nimport { PoolCategory } from 'config/constants/types'\r\n\r\n// Addresses\r\nimport {\r\n  getAddress,\r\n  getPancakeProfileAddress,\r\n  getPancakeRabbitsAddress,\r\n  getBunnyFactoryAddress,\r\n  getBunnySpecialAddress,\r\n  getCakeAddress,\r\n  getLotteryAddress,\r\n  getLotteryTicketAddress,\r\n  getMasterChefAddress,\r\n  getPointCenterIfoAddress,\r\n  getClaimRefundAddress,\r\n} from 'utils/addressHelpers'\r\n\r\n// ABI\r\nimport profileABI from 'config/abi/pancakeProfile.json'\r\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\r\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\r\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\r\nimport bep20Abi from 'config/abi/erc20.json'\r\nimport lpTokenAbi from 'config/abi/lpToken.json'\r\nimport cakeAbi from 'config/abi/cake.json'\r\nimport ifoAbi from 'config/abi/ifo.json'\r\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\r\nimport lotteryAbi from 'config/abi/lottery.json'\r\nimport lotteryTicketAbi from 'config/abi/lotteryNft.json'\r\nimport masterChef from 'config/abi/masterchef.json'\r\nimport sousChef from 'config/abi/sousChef.json'\r\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\r\nimport claimRefundAbi from 'config/abi/claimRefund.json'\r\n\r\nconst getContract = (abi: any, address: string, web3?: Web3) => {\r\n  const _web3 = web3 ?? web3NoAccount\r\n  return new _web3.eth.Contract((abi as unknown) as AbiItem, address)\r\n}\r\n\r\nexport const getBep20Contract = (address: string, web3?: Web3) => {\r\n  return getContract(bep20Abi, address, web3)\r\n}\r\nexport const getLpContract = (address: string, web3?: Web3) => {\r\n  return getContract(lpTokenAbi, address, web3)\r\n}\r\nexport const getIfoContract = (address: string, web3?: Web3) => {\r\n  return getContract(ifoAbi, address, web3)\r\n}\r\nexport const getSouschefContract = (id: number, web3?: Web3) => {\r\n  const config = poolsConfig.find((pool) => pool.sousId === id)\r\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\r\n  return getContract(abi, getAddress(config.contractAddress), web3)\r\n}\r\nexport const getPointCenterIfoContract = (web3?: Web3) => {\r\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), web3)\r\n}\r\nexport const getCakeContract = (web3?: Web3) => {\r\n  return getContract(cakeAbi, getCakeAddress(), web3)\r\n}\r\nexport const getProfileContract = (web3?: Web3) => {\r\n  return getContract(profileABI, getPancakeProfileAddress(), web3)\r\n}\r\nexport const getPancakeRabbitContract = (web3?: Web3) => {\r\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), web3)\r\n}\r\nexport const getBunnyFactoryContract = (web3?: Web3) => {\r\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), web3)\r\n}\r\nexport const getBunnySpecialContract = (web3?: Web3) => {\r\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), web3)\r\n}\r\nexport const getLotteryContract = (web3?: Web3) => {\r\n  return getContract(lotteryAbi, getLotteryAddress(), web3)\r\n}\r\nexport const getLotteryTicketContract = (web3?: Web3) => {\r\n  return getContract(lotteryTicketAbi, getLotteryTicketAddress(), web3)\r\n}\r\nexport const getMasterchefContract = (web3?: Web3) => {\r\n  return getContract(masterChef, getMasterChefAddress(), web3)\r\n}\r\nexport const getClaimRefundContract = (web3?: Web3) => {\r\n  return getContract(claimRefundAbi, getClaimRefundAddress(), web3)\r\n}\r\n","import poolsConfig from 'config/constants/pools'\r\nimport sousChefABI from 'config/abi/sousChef.json'\r\nimport cakeABI from 'config/abi/cake.json'\r\nimport wbnbABI from 'config/abi/weth.json'\r\nimport multicall from 'utils/multicall'\r\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\r\nimport BigNumber from 'bignumber.js'\r\n\r\nexport const fetchPoolsBlockLimits = async () => {\r\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\r\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\r\n    return {\r\n      address: getAddress(poolConfig.contractAddress),\r\n      name: 'startBlock',\r\n    }\r\n  })\r\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\r\n    return {\r\n      address: getAddress(poolConfig.contractAddress),\r\n      name: 'bonusEndBlock',\r\n    }\r\n  })\r\n\r\n  const starts = await multicall(sousChefABI, callsStartBlock)\r\n  const ends = await multicall(sousChefABI, callsEndBlock)\r\n\r\n  return poolsWithEnd.map((cakePoolConfig, index) => {\r\n    const startBlock = starts[index]\r\n    const endBlock = ends[index]\r\n    return {\r\n      sousId: cakePoolConfig.sousId,\r\n      startBlock: new BigNumber(startBlock).toJSON(),\r\n      endBlock: new BigNumber(endBlock).toJSON(),\r\n    }\r\n  })\r\n}\r\n\r\nexport const fetchPoolsTotalStatking = async () => {\r\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\r\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\r\n\r\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\r\n    return {\r\n      address: getAddress(poolConfig.stakingToken.address),\r\n      name: 'balanceOf',\r\n      params: [getAddress(poolConfig.contractAddress)],\r\n    }\r\n  })\r\n\r\n  const callsBnbPools = bnbPool.map((poolConfig) => {\r\n    return {\r\n      address: getWbnbAddress(),\r\n      name: 'balanceOf',\r\n      params: [getAddress(poolConfig.contractAddress)],\r\n    }\r\n  })\r\n\r\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\r\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\r\n\r\n  return [\r\n    ...nonBnbPools.map((p, index) => ({\r\n      sousId: p.sousId,\r\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\r\n    })),\r\n    ...bnbPool.map((p, index) => ({\r\n      sousId: p.sousId,\r\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\r\n    })),\r\n  ]\r\n}\r\n","import { AbiItem } from 'web3-utils'\r\nimport poolsConfig from 'config/constants/pools'\r\nimport masterChefABI from 'config/abi/masterchef.json'\r\nimport sousChefABI from 'config/abi/sousChef.json'\r\nimport erc20ABI from 'config/abi/erc20.json'\r\nimport multicall from 'utils/multicall'\r\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\r\nimport { getWeb3NoAccount } from 'utils/web3'\r\nimport BigNumber from 'bignumber.js'\r\n\r\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\r\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\r\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\r\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\r\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\r\nconst web3 = getWeb3NoAccount()\r\nconst masterChefContract = new web3.eth.Contract((masterChefABI as unknown) as AbiItem, getMasterChefAddress())\r\n\r\nexport const fetchPoolsAllowance = async (account) => {\r\n  const calls = nonBnbPools.map((p) => ({\r\n    address: getAddress(p.stakingToken.address),\r\n    name: 'allowance',\r\n    params: [account, getAddress(p.contractAddress)],\r\n  }))\r\n\r\n  const allowances = await multicall(erc20ABI, calls)\r\n  return nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\r\n    {},\r\n  )\r\n}\r\n\r\nexport const fetchUserBalances = async (account) => {\r\n  // Non BNB pools\r\n  const calls = nonBnbPools.map((p) => ({\r\n    address: getAddress(p.stakingToken.address),\r\n    name: 'balanceOf',\r\n    params: [account],\r\n  }))\r\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\r\n  const tokenBalances = nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  // BNB pools\r\n  const bnbBalance = await web3.eth.getBalance(account)\r\n  const bnbBalances = bnbPools.reduce(\r\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  return { ...tokenBalances, ...bnbBalances }\r\n}\r\n\r\nexport const fetchUserStakeBalances = async (account) => {\r\n  const calls = nonMasterPools.map((p) => ({\r\n    address: getAddress(p.contractAddress),\r\n    name: 'userInfo',\r\n    params: [account],\r\n  }))\r\n  const userInfo = await multicall(sousChefABI, calls)\r\n  const stakedBalances = nonMasterPools.reduce(\r\n    (acc, pool, index) => ({\r\n      ...acc,\r\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\r\n    }),\r\n    {},\r\n  )\r\n\r\n  // Cake / Cake pool\r\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\r\n\r\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\r\n}\r\n\r\nexport const fetchUserPendingRewards = async (account) => {\r\n  const calls = nonMasterPools.map((p) => ({\r\n    address: getAddress(p.contractAddress),\r\n    name: 'pendingReward',\r\n    params: [account],\r\n  }))\r\n  const res = await multicall(sousChefABI, calls)\r\n  const pendingRewards = nonMasterPools.reduce(\r\n    (acc, pool, index) => ({\r\n      ...acc,\r\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\r\n    }),\r\n    {},\r\n  )\r\n\r\n  // Cake / Cake pool\r\n  const pendingReward = await masterChefContract.methods.pendingPiano('0', account).call()\r\n\r\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice } from '@reduxjs/toolkit'\r\nimport poolsConfig from 'config/constants/pools'\r\nimport { fetchPoolsBlockLimits, fetchPoolsTotalStatking } from './fetchPools'\r\nimport {\r\n  fetchPoolsAllowance,\r\n  fetchUserBalances,\r\n  fetchUserStakeBalances,\r\n  fetchUserPendingRewards,\r\n} from './fetchPoolsUser'\r\nimport { PoolsState, Pool } from '../types'\r\n\r\nconst initialState: PoolsState = { data: [...poolsConfig] }\r\n\r\nexport const PoolsSlice = createSlice({\r\n  name: 'Pools',\r\n  initialState,\r\n  reducers: {\r\n    setPoolsPublicData: (state, action) => {\r\n      const livePoolsData: Pool[] = action.payload\r\n      state.data = state.data.map((pool) => {\r\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\r\n        return { ...pool, ...livePoolData }\r\n      })\r\n    },\r\n    setPoolsUserData: (state, action) => {\r\n      const userData = action.payload\r\n      state.data = state.data.map((pool) => {\r\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\r\n        return { ...pool, userData: userPoolData }\r\n      })\r\n    },\r\n    updatePoolsUserData: (state, action) => {\r\n      const { field, value, sousId } = action.payload\r\n      const index = state.data.findIndex((p) => p.sousId === sousId)\r\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\r\n\r\n// Thunks\r\nexport const fetchPoolsPublicDataAsync = () => async (dispatch) => {\r\n  const blockLimits = await fetchPoolsBlockLimits()\r\n  const totalStakings = await fetchPoolsTotalStatking()\r\n\r\n  const liveData = poolsConfig.map((pool) => {\r\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\r\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\r\n    return {\r\n      ...blockLimit,\r\n      ...totalStaking,\r\n    }\r\n  })\r\n\r\n  dispatch(setPoolsPublicData(liveData))\r\n}\r\n\r\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\r\n  const allowances = await fetchPoolsAllowance(account)\r\n  const stakingTokenBalances = await fetchUserBalances(account)\r\n  const stakedBalances = await fetchUserStakeBalances(account)\r\n  const pendingRewards = await fetchUserPendingRewards(account)\r\n\r\n  const userData = poolsConfig.map((pool) => ({\r\n    sousId: pool.sousId,\r\n    allowance: allowances[pool.sousId],\r\n    stakingTokenBalance: stakingTokenBalances[pool.sousId],\r\n    stakedBalance: stakedBalances[pool.sousId],\r\n    pendingReward: pendingRewards[pool.sousId],\r\n  }))\r\n\r\n  dispatch(setPoolsUserData(userData))\r\n}\r\n\r\nexport const updateUserAllowance = (sousId: string, account: string) => async (dispatch) => {\r\n  const allowances = await fetchPoolsAllowance(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\r\n}\r\n\r\nexport const updateUserBalance = (sousId: string, account: string) => async (dispatch) => {\r\n  const tokenBalances = await fetchUserBalances(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\r\n}\r\n\r\nexport const updateUserStakedBalance = (sousId: string, account: string) => async (dispatch) => {\r\n  const stakedBalances = await fetchUserStakeBalances(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\r\n}\r\n\r\nexport const updateUserPendingReward = (sousId: string, account: string) => async (dispatch) => {\r\n  const pendingRewards = await fetchUserPendingRewards(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\r\n}\r\n\r\nexport default PoolsSlice.reducer\r\n","import { useEffect } from 'react'\r\nimport { connectorLocalStorageKey, ConnectorNames } from '@mozartfinance/uikit'\r\nimport useAuth from 'hooks/useAuth'\r\n\r\nconst useEagerConnect = () => {\r\n  const { login } = useAuth()\r\n\r\n  useEffect(() => {\r\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\r\n\r\n    // Disable eager connect for BSC Wallet. Currently the BSC Wallet extension does not inject BinanceChain\r\n    // into the Window object in time causing it to throw an error\r\n    // TODO: Figure out an elegant way to listen for when the BinanceChain object is ready\r\n    if (connectorId && connectorId !== ConnectorNames.BSC) {\r\n      login(connectorId)\r\n    }\r\n  }, [login])\r\n}\r\n\r\nexport default useEagerConnect\r\n","import { useEffect } from 'react'\r\nimport { usePriceCakeBusd } from 'state/hooks'\r\n\r\nconst useGetDocumentTitlePrice = () => {\r\n  const cakePriceUsd = usePriceCakeBusd()\r\n\r\n  const cakePriceUsdString = cakePriceUsd.eq(0)\r\n    ? ''\r\n    : ` - $${cakePriceUsd.toNumber().toLocaleString(undefined, {\r\n        minimumFractionDigits: 3,\r\n        maximumFractionDigits: 3,\r\n      })}`\r\n\r\n  useEffect(() => {\r\n    document.title = `Mozart Finance${cakePriceUsdString}`\r\n  }, [cakePriceUsdString])\r\n}\r\nexport default useGetDocumentTitlePrice\r\n","import { createGlobalStyle } from 'styled-components'\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { PancakeTheme } from '@mozartfinance/uikit/dist/theme'\r\n\r\ndeclare module 'styled-components' {\r\n  /* eslint-disable @typescript-eslint/no-empty-interface */\r\n  export interface DefaultTheme extends PancakeTheme {}\r\n}\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    font-family: 'Kanit', sans-serif;\r\n  }\r\n  body {\r\n    background-color: ${({ theme }) => theme.colors.background};\r\n\r\n    img {\r\n      height: auto;\r\n      max-width: 100%;\r\n    }\r\n  }\r\n`\r\n\r\nexport default GlobalStyle\r\n","export const EN = { code: 'en', language: 'English' }\r\nexport const AR = { code: 'ar', language: 'العربية' }\r\nexport const CA = { code: 'ca', language: 'Català' }\r\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\r\nexport const ZHTW = { code: 'zh-TW', language: '繁體中文' }\r\nexport const CS = { code: 'cs', language: 'Čeština' }\r\nexport const DA = { code: 'da', language: 'Dansk' }\r\nexport const DE = { code: 'de', language: 'Deutsch' }\r\nexport const NL = { code: 'nl', language: 'Nederlands' }\r\nexport const FIL = { code: 'fil', language: 'Filipino' }\r\nexport const FI = { code: 'fi', language: 'Suomalainen' }\r\nexport const FR = { code: 'fr', language: 'Français' }\r\nexport const EL = { code: 'el', language: 'Ελληνικά' }\r\nexport const HI = { code: 'hi', language: 'हिंदी' }\r\nexport const HU = { code: 'hu', language: 'Magyar' }\r\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\r\nexport const IT = { code: 'it', language: 'Italiano' }\r\nexport const JA = { code: 'ja', language: '日本語' }\r\nexport const KO = { code: 'ko', language: '한국어' }\r\nexport const PTBR = { code: 'pt-BR', language: 'Português' }\r\nexport const RO = { code: 'ro', language: 'Română' }\r\nexport const RU = { code: 'ru', language: 'Русский' }\r\nexport const SR = { code: 'sr', language: 'Српски' }\r\nexport const ESES = { code: 'es-ES', language: 'Español' }\r\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\r\nexport const TA = { code: 'ta', language: 'தமிழ்' }\r\nexport const TR = { code: 'tr', language: 'Türkçe' }\r\nexport const UK = { code: 'uk', language: 'Українська' }\r\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\r\n\r\nexport const allLanguages = [\r\n  EN,\r\n  AR,\r\n  CA,\r\n  ZHCN,\r\n  ZHTW,\r\n  CS,\r\n  DA,\r\n  DE,\r\n  NL,\r\n  FIL,\r\n  FI,\r\n  FR,\r\n  EL,\r\n  HI,\r\n  HU,\r\n  ID,\r\n  IT,\r\n  JA,\r\n  KO,\r\n  PTBR,\r\n  RO,\r\n  RU,\r\n  SR,\r\n  ESES,\r\n  SVSE,\r\n  TA,\r\n  TR,\r\n  UK,\r\n  VI,\r\n]\r\n","import React, { useState, useEffect } from 'react'\r\nimport { StringTranslations } from '@crowdin/crowdin-api-client'\r\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\r\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\r\n\r\nconst CACHE_KEY = 'pancakeSwapLanguage'\r\n\r\nexport interface LangType {\r\n  code: string\r\n  language: string\r\n}\r\n\r\nexport interface LanguageState {\r\n  selectedLanguage: LangType\r\n  setSelectedLanguage: (langObject: LangType) => void\r\n  translatedLanguage: LangType\r\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\r\n}\r\n\r\nconst LanguageContext = React.createContext({\r\n  selectedLanguage: EN,\r\n  setSelectedLanguage: () => undefined,\r\n  translatedLanguage: EN,\r\n  setTranslatedLanguage: () => undefined,\r\n} as LanguageState)\r\n\r\nconst fileId = 8\r\nconst projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECTID)\r\nconst stringTranslationsApi = new StringTranslations({\r\n  token: process.env.REACT_APP_CROWDIN_APIKEY,\r\n})\r\n\r\nconst fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\r\n  return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\r\n}\r\n\r\nconst LanguageContextProvider = ({ children }) => {\r\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\r\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\r\n  const [translations, setTranslations] = useState<Array<any>>([])\r\n\r\n  const getStoredLang = (storedLangCode: string) => {\r\n    return allLanguages.filter((language) => {\r\n      return language.code === storedLangCode\r\n    })[0]\r\n  }\r\n\r\n  useEffect(() => {\r\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\r\n    if (storedLangCode) {\r\n      const storedLang = getStoredLang(storedLangCode)\r\n      setSelectedLanguage(storedLang)\r\n    } else {\r\n      setSelectedLanguage(EN)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (selectedLanguage) {\r\n      fetchTranslationsForSelectedLanguage(selectedLanguage)\r\n        .then((translationApiResponse) => {\r\n          if (translationApiResponse.data.length < 1) {\r\n            setTranslations([])\r\n          } else {\r\n            setTranslations(translationApiResponse.data)\r\n          }\r\n        })\r\n        .then(() => setTranslatedLanguage(selectedLanguage))\r\n        .catch((e) => {\r\n          setTranslations([])\r\n          console.error('Error while loading translations', e)\r\n        })\r\n    }\r\n  }, [selectedLanguage, setTranslations])\r\n\r\n  const handleLanguageSelect = (langObject: LangType) => {\r\n    setSelectedLanguage(langObject)\r\n    localStorage.setItem(CACHE_KEY, langObject.code)\r\n  }\r\n\r\n  return (\r\n    <LanguageContext.Provider\r\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\r\n    >\r\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\r\n    </LanguageContext.Provider>\r\n  )\r\n}\r\n\r\nexport { LanguageContext, LanguageContextProvider }\r\n","import React, { useState } from 'react'\r\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\r\nimport { light, dark } from '@mozartfinance/uikit'\r\n\r\nconst CACHE_KEY = 'IS_DARK'\r\n\r\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\r\n\r\nconst ThemeContextProvider = ({ children }) => {\r\n  const [isDark, setIsDark] = useState(() => {\r\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\r\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\r\n  })\r\n\r\n  const toggleTheme = () => {\r\n    setIsDark((prevState) => {\r\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\r\n      return !prevState\r\n    })\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\r\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n\r\nexport { ThemeContext, ThemeContextProvider }\r\n","import { useContext } from 'react'\r\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\r\nimport { ThemeContext } from 'contexts/ThemeContext'\r\n\r\nconst useTheme = () => {\r\n  const { isDark, toggleTheme } = useContext(ThemeContext)\r\n  const theme = useContext(StyledThemeContext)\r\n  return { isDark, toggleTheme, theme }\r\n}\r\n\r\nexport default useTheme\r\n","import { MenuEntry } from '@mozartfinance/uikit'\r\n\r\nconst config: MenuEntry[] = [\r\n  {\r\n    label: 'Home',\r\n    icon: 'HomeIcon',\r\n    href: '/',\r\n  },\r\n  {\r\n    label: 'Trade',\r\n    icon: 'TradeIcon',\r\n    items: [\r\n      {\r\n        label: 'Exchange',\r\n        href: 'https://exchange.mozartfinance.io',\r\n      },\r\n      {\r\n        label: 'Liquidity',\r\n        href: 'https://exchange.mozartfinance.io/#/pool',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    label: 'Farms',\r\n    icon: 'FarmIcon',\r\n    href: '/farms',\r\n  },\r\n  {\r\n    label: 'Pools',\r\n    icon: 'PoolIcon',\r\n    href: '/pools',\r\n  },\r\n  {\r\n    label: 'More',\r\n    icon: 'MoreIcon',\r\n    items: [\r\n      {\r\n        label: 'Github',\r\n        href: 'https://github.com/mozartfinance',\r\n      },\r\n      {\r\n        label: 'Docs',\r\n        href: 'https://mozartfinance.gitbook.io/mozart-finance/',\r\n      },\r\n      {\r\n        label: 'Blog',\r\n        href: 'https://mozart-finance.medium.com/',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    label: 'Audit by IB',\r\n    icon: 'TicketIcon',\r\n    href: 'https://github.com/ImmuneBytes/Smart-Contract-Audit-Reports/blob/main/Mozart%20Finance/Mozart%20Finance%20(PIANO)%20-%20Final%20Audit%20Report.pdf',\r\n  },\r\n]\r\n\r\nexport default config\r\n","import React, { useContext } from 'react'\r\nimport { Menu as UikitMenu } from '@mozartfinance/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { allLanguages } from 'config/localisation/languageCodes'\r\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useAuth from 'hooks/useAuth'\r\nimport { usePriceCakeBusd, useProfile } from 'state/hooks'\r\nimport config from './config'\r\n\r\nconst Menu = (props) => {\r\n  const { account } = useWeb3React()\r\n  const { login, logout } = useAuth()\r\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\r\n  const { isDark, toggleTheme } = useTheme()\r\n  const cakePriceUsd = usePriceCakeBusd()\r\n  // const { profile } = useProfile()\r\n\r\n  return (\r\n    <UikitMenu\r\n      account={account}\r\n      login={login}\r\n      logout={logout}\r\n      isDark={isDark}\r\n      toggleTheme={toggleTheme}\r\n      currentLang={selectedLanguage && selectedLanguage.code}\r\n      langs={allLanguages}\r\n      setLang={setSelectedLanguage}\r\n      cakePriceUsd={cakePriceUsd.toNumber()}\r\n      links={config}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","import React, { Suspense, SuspenseProps } from 'react'\r\n\r\ninterface State {\r\n  hasError: boolean\r\n}\r\n\r\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { hasError: false }\r\n  }\r\n\r\n  static getDerivedStateFromError() {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true }\r\n  }\r\n\r\n  componentDidCatch(error) {\r\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\r\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\r\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\r\n\r\n    // Save a flag on the window object indicating that we have already had a chunk error.\r\n    // This prevents infinite reloads\r\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\r\n\r\n    // If was a chunk load error, refresh the page\r\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\r\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\r\n      window.history.replaceState(nextState, '')\r\n      window.location.reload()\r\n      return\r\n    }\r\n\r\n    throw error\r\n  }\r\n\r\n  render() {\r\n    const { hasError } = this.state\r\n    const { fallback } = this.props\r\n\r\n    if (hasError) {\r\n      return fallback\r\n    }\r\n\r\n    return <Suspense {...this.props} />\r\n  }\r\n}\r\n\r\nexport default SuspenseWithChunkError\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { ToastContainer, Toast } from '@mozartfinance/uikit'\r\nimport { useToast } from 'state/hooks'\r\nimport { State } from 'state/types'\r\n\r\nconst ToastListener = () => {\r\n  const toasts: Toast[] = useSelector((state: State) => state.toasts.data)\r\n  const { remove } = useToast()\r\n\r\n  const handleRemove = (id: string) => remove(id)\r\n\r\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\r\n}\r\n\r\nexport default ToastListener\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Page from './layout/Page'\r\n\r\n\r\nconst Wrapper = styled(Page)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\nconst StyledImage = styled.img`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 58px;\r\n`\r\n\r\nconst PageLoader: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n        <StyledImage src=\"/images/mozart-flying.png\" alt=\"Mozart illustration\" width={300} height={300} />\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PageLoader","import React, { useState, useCallback } from 'react'\r\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@mozartfinance/uikit'\r\n\r\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\r\n  const [show, setShow] = useState(false)\r\n  const startFalling = useCallback(() => setShow(true), [setShow])\r\n  useKonamiCheatCode(startFalling)\r\n\r\n  if (show) {\r\n    return (\r\n      <div onAnimationEnd={() => setShow(false)}>\r\n        <FallingBunnies {...props} />\r\n      </div>\r\n    )\r\n  }\r\n  return null\r\n}\r\n\r\nexport default React.memo(EasterEgg)\r\n","import { useEffect, useState } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getBunnySpecialContract } from 'utils/contractHelpers'\r\n\r\nexport const BULL_NFT = 11\r\nexport const HICCUP_NFT = 10\r\n\r\nconst bunnySpecialContract = getBunnySpecialContract()\r\n\r\nconst useGetBullHiccupClaimableStatus = () => {\r\n  const [hasChecked, setHasChecked] = useState(false)\r\n  const [claimables, setClaimables] = useState({\r\n    [BULL_NFT]: false,\r\n    [HICCUP_NFT]: false,\r\n  })\r\n  const { account } = useWeb3React()\r\n\r\n  useEffect(() => {\r\n    const checkClaimableStatus = async () => {\r\n      const [isBullClaimable, isHiccupClaimable] = (await bunnySpecialContract.methods\r\n        .canClaimMultiple(account, [BULL_NFT, HICCUP_NFT])\r\n        .call()) as boolean[]\r\n\r\n      setClaimables({\r\n        [BULL_NFT]: isBullClaimable,\r\n        [HICCUP_NFT]: isHiccupClaimable,\r\n      })\r\n      setHasChecked(true)\r\n    }\r\n\r\n    if (account) {\r\n      checkClaimableStatus()\r\n    }\r\n  }, [account, setClaimables, setHasChecked])\r\n\r\n  return {\r\n    isSomeClaimable: Object.values(claimables).some((status) => status === true),\r\n    isBullClaimable: claimables[BULL_NFT],\r\n    isHiccupClaimable: claimables[HICCUP_NFT],\r\n    hasChecked,\r\n  }\r\n}\r\n\r\nexport default useGetBullHiccupClaimableStatus\r\n","import { createBrowserHistory } from 'history'\r\n\r\n// Manually create the history object so we can access outside the Router e.g. in modals\r\nconst history = createBrowserHistory()\r\n\r\nexport default history\r\n","import React, { useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Modal, Text, Button, Flex, InjectedModalProps } from '@mozartfinance/uikit'\r\nimport history from 'routerHistory'\r\nimport { delay } from 'lodash'\r\nimport useI18n from 'hooks/useI18n'\r\nimport confetti from 'canvas-confetti'\r\nimport nftList from 'config/constants/nfts'\r\nimport { BULL_NFT, HICCUP_NFT } from '../hooks/useGetBullHiccupClaimableStatus'\r\n\r\ninterface ClaimBullHiccupNftModalProps extends InjectedModalProps {\r\n  isBullClaimable: boolean\r\n  isHiccupClaimable: boolean\r\n}\r\n\r\nconst bullNft = nftList.find((nft) => nft.bunnyId === BULL_NFT)\r\nconst hiccupNft = nftList.find((nft) => nft.bunnyId === HICCUP_NFT)\r\n\r\nconst NftImage = styled.img`\r\n  border-radius: 50%;\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst showConfetti = () => {\r\n  confetti({\r\n    resize: true,\r\n    particleCount: 200,\r\n    startVelocity: 30,\r\n    gravity: 0.5,\r\n    spread: 350,\r\n    origin: {\r\n      x: 0.5,\r\n      y: 0.3,\r\n    },\r\n  })\r\n}\r\n\r\nconst renderNftPreview = (isBullClaimable: boolean, isHiccupClaimable: boolean) => {\r\n  if (isBullClaimable && isHiccupClaimable) {\r\n    return <img src=\"/images/bull-hiccup.png\" height=\"128px\" width=\"128px\" alt=\"nft\" style={{ marginBottom: '24px' }} />\r\n  }\r\n\r\n  if (isBullClaimable) {\r\n    return <NftImage src={`/images/nfts/${bullNft.images.md}`} height=\"128px\" width=\"128px\" alt=\"nft\" />\r\n  }\r\n\r\n  return <NftImage src={`/images/nfts/${hiccupNft.images.md}`} height=\"128px\" width=\"128px\" alt=\"nft\" />\r\n}\r\n\r\nconst ClaimBullHiccupNftModal: React.FC<ClaimBullHiccupNftModalProps> = ({\r\n  isBullClaimable,\r\n  isHiccupClaimable,\r\n  onDismiss,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const collectibleMessage =\r\n    isBullClaimable && isHiccupClaimable\r\n      ? TranslateString(999, 'You won two Collectibles!')\r\n      : TranslateString(999, 'You won a collectible!')\r\n\r\n  // This is required because the modal exists outside the Router\r\n  const handleClick = () => {\r\n    onDismiss()\r\n    history.push('/collectibles')\r\n  }\r\n\r\n  useEffect(() => {\r\n    delay(showConfetti, 100)\r\n  }, [])\r\n\r\n  return (\r\n    <Modal title={TranslateString(999, 'Congratulations!')} onDismiss={onDismiss}>\r\n      <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\r\n        {renderNftPreview(isBullClaimable, isHiccupClaimable)}\r\n        <Text bold color=\"secondary\" fontSize=\"24px\" mb=\"24px\">\r\n          {collectibleMessage}\r\n        </Text>\r\n        <Button onClick={handleClick}>{TranslateString(999, 'Claim now')}</Button>\r\n      </Flex>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ClaimBullHiccupNftModal\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useModal } from '@mozartfinance/uikit'\r\nimport useGetBullHiccupClaimableStatus from '../hooks/useGetBullHiccupClaimableStatus'\r\nimport ClaimBullHiccupNftModal from './ClaimBullHiccupNftModal'\r\n\r\n/**\r\n * This is represented as a component rather than a hook because we need to keep it\r\n * inside the Router.\r\n *\r\n * TODO: Put global checks in redux or make a generic area to house global checks\r\n */\r\nconst GlobalCheckBullHiccupClaimStatus = () => {\r\n  const hasDisplayedModal = useRef(false)\r\n  const { isSomeClaimable, isBullClaimable, isHiccupClaimable } = useGetBullHiccupClaimableStatus()\r\n  const [onPresentGiftModal] = useModal(\r\n    <ClaimBullHiccupNftModal isBullClaimable={isBullClaimable} isHiccupClaimable={isHiccupClaimable} />,\r\n  )\r\n  const { account } = useWeb3React()\r\n  const { pathname } = useLocation()\r\n\r\n  useEffect(() => {\r\n    if (!pathname.includes('/collectibles') && isSomeClaimable && !hasDisplayedModal.current) {\r\n      onPresentGiftModal()\r\n      hasDisplayedModal.current = true\r\n    }\r\n  }, [pathname, isSomeClaimable, hasDisplayedModal, onPresentGiftModal])\r\n\r\n  // Reset the check flag when account changes\r\n  useEffect(() => {\r\n    hasDisplayedModal.current = false\r\n  }, [account, hasDisplayedModal])\r\n\r\n  return null\r\n}\r\n\r\nexport default GlobalCheckBullHiccupClaimStatus\r\n","import React, { useEffect, lazy } from 'react'\r\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\r\nimport { ResetCSS } from '@mozartfinance/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport useEagerConnect from 'hooks/useEagerConnect'\r\nimport { useFetchPriceList, useFetchProfile, useFetchPublicData } from 'state/hooks'\r\nimport useGetDocumentTitlePrice from './hooks/useGetDocumentTitlePrice'\r\nimport GlobalStyle from './style/Global'\r\nimport Menu from './components/Menu'\r\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\r\nimport ToastListener from './components/ToastListener'\r\nimport PageLoader from './components/PageLoader'\r\nimport EasterEgg from './components/EasterEgg'\r\nimport Pools from './views/Pools'\r\nimport GlobalCheckBullHiccupClaimStatus from './views/Collectibles/components/GlobalCheckBullHiccupClaimStatus'\r\nimport history from './routerHistory'\r\n\r\n// Route-based code splitting\r\n// Only pool is included in the main bundle because of it's the most visited page\r\nconst Home = lazy(() => import('./views/Home'))\r\nconst Farms = lazy(() => import('./views/Farms'))\r\nconst Lottery = lazy(() => import('./views/Lottery'))\r\n// const Ifos = lazy(() => import('./views/Ifos'))\r\nconst NotFound = lazy(() => import('./views/NotFound'))\r\n// const Collectibles = lazy(() => import('./views/Collectibles'))\r\n// const Teams = lazy(() => import('./views/Teams'))\r\n// const Team = lazy(() => import('./views/Teams/Team'))\r\n// const Profile = lazy(() => import('./views/Profile'))\r\n\r\n// This config is required for number formating\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nconst App: React.FC = () => {\r\n  // Monkey patch warn() because of web3 flood\r\n  // To be removed when web3 1.3.5 is released\r\n  useEffect(() => {\r\n    console.warn = () => null\r\n  }, [])\r\n\r\n  useEagerConnect()\r\n  useFetchPublicData()\r\n  useFetchProfile()\r\n  useFetchPriceList()\r\n  useGetDocumentTitlePrice()\r\n\r\n  return (\r\n    <Router history={history}>\r\n      <ResetCSS />\r\n      <GlobalStyle />\r\n      <Menu>\r\n        <SuspenseWithChunkError fallback={<PageLoader />}>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <Lottery />\r\n            </Route>\r\n            {/* <Route path=\"/lottery\">\r\n              <Lottery />\r\n            </Route>\r\n            <Route path=\"/farms\">\r\n              <Farms />\r\n            </Route>\r\n            <Route path=\"/pools\">\r\n              <Pools />\r\n            </Route> */}\r\n            \r\n            {/* 404 */}\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </SuspenseWithChunkError>\r\n      </Menu>\r\n      <EasterEgg iterations={2} />\r\n      <ToastListener />\r\n      <GlobalCheckBullHiccupClaimStatus />\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default React.memo(App)\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport farmsReducer from './farms'\r\nimport toastsReducer from './toasts'\r\nimport poolsReducer from './pools'\r\nimport pricesReducer from './prices'\r\nimport profileReducer from './profile'\r\nimport teamsReducer from './teams'\r\nimport achievementsReducer from './achievements'\r\nimport blockReducer from './block'\r\n\r\nexport default configureStore({\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n  reducer: {\r\n    farms: farmsReducer,\r\n    toasts: toastsReducer,\r\n    pools: poolsReducer,\r\n    prices: pricesReducer,\r\n    profile: profileReducer,\r\n    teams: teamsReducer,\r\n    achievements: achievementsReducer,\r\n    block: blockReducer,\r\n  },\r\n})\r\n","import React from 'react'\r\nimport { ModalProvider } from '@mozartfinance/uikit'\r\nimport { Web3ReactProvider } from '@web3-react/core'\r\nimport { Provider } from 'react-redux'\r\nimport { getLibrary } from 'utils/web3React'\r\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\r\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\r\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\r\nimport store from 'state'\r\n\r\nconst Providers: React.FC = ({ children }) => {\r\n  return (\r\n    <Web3ReactProvider getLibrary={getLibrary}>\r\n      <Provider store={store}>\r\n        <ThemeContextProvider>\r\n          <LanguageContextProvider>\r\n            <RefreshContextProvider>\r\n              <ModalProvider>{children}</ModalProvider>\r\n            </RefreshContextProvider>\r\n          </LanguageContextProvider>\r\n        </ThemeContextProvider>\r\n      </Provider>\r\n    </Web3ReactProvider>\r\n  )\r\n}\r\n\r\nexport default Providers\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport Providers from './Providers'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Providers>\r\n      <App />\r\n    </Providers>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\r\nexport { clear, remove, push } from './toasts'\r\nexport {\r\n  fetchPoolsPublicDataAsync,\r\n  fetchPoolsUserDataAsync,\r\n  updateUserAllowance,\r\n  updateUserBalance,\r\n  updateUserPendingReward,\r\n  updateUserStakedBalance,\r\n} from './pools'\r\nexport { profileFetchStart, profileFetchSucceeded, profileFetchFailed } from './profile'\r\nexport { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } from './teams'\r\nexport { setBlock } from './block'\r\n","/* eslint-disable no-param-reassign */\r\nimport { Toast } from '@mozartfinance/uikit'\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { ToastsState } from '../types'\r\n\r\nconst initialState: ToastsState = {\r\n  data: [],\r\n}\r\n\r\nexport const toastsSlice = createSlice({\r\n  name: 'toasts',\r\n  initialState,\r\n  reducers: {\r\n    push: (state: ToastsState, action: PayloadAction<Toast>) => {\r\n      const { payload } = action\r\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload.id)\r\n\r\n      // If id already matches remove it before adding it to the top of the stack\r\n      if (toastIndex >= 0) {\r\n        state.data.splice(toastIndex, 1)\r\n      }\r\n\r\n      state.data.unshift(payload)\r\n    },\r\n    remove: (state: ToastsState, action: PayloadAction<string>) => {\r\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload)\r\n\r\n      if (toastIndex >= 0) {\r\n        state.data.splice(toastIndex, 1)\r\n      }\r\n    },\r\n    clear: (state: ToastsState) => {\r\n      state.data = []\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { clear, remove, push } = toastsSlice.actions\r\n\r\nexport default toastsSlice.reducer\r\n","import { Profile } from 'state/types'\r\n\r\nexport type ProfileResponse = {\r\n  0: string\r\n  1: string\r\n  2: string\r\n  3: string\r\n  4: string\r\n  5: boolean\r\n}\r\n\r\nexport const transformProfileResponse = (profileResponse: ProfileResponse): Partial<Profile> => {\r\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\r\n\r\n  return {\r\n    userId: Number(userId),\r\n    points: Number(numberPoints),\r\n    teamId: Number(teamId),\r\n    tokenId: Number(tokenId),\r\n    nftAddress,\r\n    isActive,\r\n  }\r\n}\r\n","import Cookies from 'js-cookie'\r\nimport { getProfileContract, getPancakeRabbitContract } from 'utils/contractHelpers'\r\nimport { Nft } from 'config/constants/types'\r\nimport { Profile } from 'state/types'\r\nimport { getTeam } from 'state/teams/helpers'\r\nimport nfts from 'config/constants/nfts'\r\nimport { transformProfileResponse } from './helpers'\r\n\r\nconst profileContract = getProfileContract()\r\nconst rabbitContract = getPancakeRabbitContract()\r\nconst profileApi = process.env.REACT_APP_API_PROFILE\r\n\r\nexport interface GetProfileResponse {\r\n  hasRegistered: boolean\r\n  profile?: Profile\r\n}\r\n\r\nconst getUsername = async (address: string): Promise<string> => {\r\n  try {\r\n    const response = await fetch(`${profileApi}/api/users/${address}`)\r\n\r\n    if (!response.ok) {\r\n      return ''\r\n    }\r\n\r\n    const { username = '' } = await response.json()\r\n\r\n    return username\r\n  } catch (error) {\r\n    return ''\r\n  }\r\n}\r\n\r\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\r\n  try {\r\n    const hasRegistered = (await profileContract.methods.hasRegistered(address).call()) as boolean\r\n\r\n    if (!hasRegistered) {\r\n      return { hasRegistered, profile: null }\r\n    }\r\n\r\n    const profileResponse = await profileContract.methods.getUserProfile(address).call()\r\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\r\n    const team = await getTeam(teamId)\r\n    const username = await getUsername(address)\r\n\r\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\r\n    // so only fetch the nft data if active\r\n    let nft: Nft\r\n    if (isActive) {\r\n      const bunnyId = await rabbitContract.methods.getBunnyId(tokenId).call()\r\n      nft = nfts.find((nftItem) => nftItem.bunnyId === Number(bunnyId))\r\n\r\n      // Save the preview image in a cookie so it can be used on the exchange\r\n      Cookies.set(\r\n        `profile_${address}`,\r\n        {\r\n          username,\r\n          avatar: `https://pancakeswap.finance/images/nfts/${nft.images.sm}`,\r\n        },\r\n        { domain: 'mozartfinance.io', secure: true, expires: 30 },\r\n      )\r\n    }\r\n\r\n    const profile = {\r\n      userId,\r\n      points,\r\n      teamId,\r\n      tokenId,\r\n      username,\r\n      nftAddress,\r\n      isActive,\r\n      nft,\r\n      team,\r\n    } as Profile\r\n\r\n    return { hasRegistered, profile }\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n\r\nexport default getProfile\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { ProfileState } from 'state/types'\r\nimport getProfile, { GetProfileResponse } from './getProfile'\r\n\r\nconst initialState: ProfileState = {\r\n  isInitialized: false,\r\n  isLoading: true,\r\n  hasRegistered: false,\r\n  data: null,\r\n}\r\n\r\nexport const profileSlice = createSlice({\r\n  name: 'profile',\r\n  initialState,\r\n  reducers: {\r\n    profileFetchStart: (state) => {\r\n      state.isLoading = true\r\n    },\r\n    profileFetchSucceeded: (state, action: PayloadAction<GetProfileResponse>) => {\r\n      const { profile, hasRegistered } = action.payload\r\n\r\n      return {\r\n        isInitialized: true,\r\n        isLoading: false,\r\n        hasRegistered,\r\n        data: profile,\r\n      }\r\n    },\r\n    profileFetchFailed: (state) => {\r\n      state.isLoading = false\r\n      state.isInitialized = true\r\n    },\r\n    addPoints: (state, action: PayloadAction<number>) => {\r\n      state.data.points += action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, addPoints } = profileSlice.actions\r\n\r\n// Thunks\r\nexport const fetchProfile = (address: string) => async (dispatch) => {\r\n  try {\r\n    dispatch(profileFetchStart())\r\n    const response = await getProfile(address)\r\n    dispatch(profileFetchSucceeded(response))\r\n  } catch (error) {\r\n    dispatch(profileFetchFailed())\r\n  }\r\n}\r\n\r\nexport default profileSlice.reducer\r\n"],"sourceRoot":""}