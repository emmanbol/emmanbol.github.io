{"version":3,"sources":["config/index.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","hooks/useAuth.ts","utils/getRpcUrl.ts","state/farms/fetchFarms.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","state/teams/helpers.ts","config/constants/teams.ts","config/constants/nfts.ts","hooks/useRefresh.ts","components/layout/Page.tsx","config/constants/ifo.ts","state/block/index.ts","components/Tags.tsx","contexts/RefreshContext.tsx","utils/makeBatchRequest.ts","state/prices/index.ts","utils/web3React.ts","utils/wallet.ts","contexts/Localisation/translationsContext.ts","config/constants/campaigns.ts","utils/achievements.ts","state/achievements/helpers.ts","state/achievements/index.ts","config/constants/contracts.ts","utils/addressHelpers.ts","components/UnlockButton.tsx","config/constants/index.ts","hooks/useApprove.ts","hooks/useHarvest.ts","hooks/useStake.ts","hooks/useUnstake.ts","utils/apy.ts","utils/compoundApyHelpers.ts","views/Farms/components/FarmCard/ApyCalculatorModal.tsx","views/Farms/components/FarmCard/ApyButton.tsx","config/constants/tokens.ts","components/layout/Container.tsx","components/layout/Flex.tsx","state/actions.ts","utils/contractHelpers.ts","hooks/useI18n.ts","state/hooks.ts","hooks/useContract.ts","utils/callHelpers.ts","utils/multicall.ts","utils/formatBalance.ts","config/constants/pools.ts","hooks/useWeb3.ts","utils/web3.ts","config/constants/farms.ts","hooks/useEagerConnect.ts","hooks/useGetDocumentTitlePrice.ts","style/Global.tsx","config/localisation/languageCodes.ts","contexts/Localisation/languageContext.tsx","contexts/ThemeContext.tsx","hooks/useTheme.ts","components/Menu/config.ts","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/ToastListener/index.tsx","components/PageLoader.tsx","components/EasterEgg/EasterEgg.tsx","components/Label/Label.tsx","components/Balance.tsx","components/TokenInput/TokenInput.tsx","views/Pools/components/DepositModal.tsx","views/Pools/components/WithdrawModal.tsx","views/Pools/components/CompoundModal.tsx","views/Pools/components/CardTitle.tsx","views/Pools/components/Card.tsx","views/Pools/components/OldSyrupTitle.tsx","views/Pools/components/HarvestButton.tsx","views/Pools/components/CardFooter.tsx","views/Pools/components/PoolCard.tsx","views/Pools/components/PoolTabButtons/index.tsx","views/Pools/components/Divider.tsx","views/Pools/Syrup.tsx","views/Collectibles/hooks/useGetBullHiccupClaimableStatus.ts","routerHistory.ts","views/Collectibles/components/ClaimBullHiccupNftModal.tsx","views/Collectibles/components/GlobalCheckBullHiccupClaimStatus.tsx","App.tsx","state/index.ts","Providers.tsx","index.tsx","state/teams/index.tsx","config/constants/types.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/index.ts","state/toasts/index.ts","state/profile/helpers.ts","state/profile/getProfile.ts","state/profile/index.tsx"],"names":["BigNumber","config","EXPONENTIAL_AT","DECIMAL_PLACES","CAKE_PER_BLOCK","BLOCKS_PER_YEAR","BASE_URL","BASE_EXCHANGE_URL","BASE_ADD_LIQUIDITY_URL","LOTTERY_MAX_NUMBER_OF_TICKETS","LOTTERY_TICKET_PRICE","StyledSpacer","styled","div","props","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","theme","colors","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","useAuth","useWeb3React","activate","deactivate","toastError","useToast","login","useCallback","connectorID","connector","connectorsByName","error","a","UnsupportedChainIdError","setupNetwork","window","localStorage","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","name","message","logout","nodes","process","getNodeUrl","randomIndex","random","fetchFarms","Promise","all","farmsConfig","farmConfig","lpAddress","getAddress","lpAddresses","calls","address","token","params","quoteToken","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBlanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","lpTokenRatio","lpTotalInQuoteToken","pow","times","tokenAmount","quoteTokenAmount","masterchefABI","pid","info","totalAllocPoint","allocPoint","_hex","poolWeight","toJSON","tokenPriceVsQuote","multiplier","toString","depositFeeBP","data","fetchFarmUserAllowances","account","masterChefAdress","farm","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","initialState","farmsSlice","createSlice","reducers","setFarmsPublicData","state","action","liveFarmsData","payload","liveFarmData","find","f","setFarmUserData","arrayOfUserDataObjects","forEach","userDataEl","index","userData","actions","fetchFarmsPublicDataAsync","dispatch","farms","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","allowance","profileContract","getProfileContract","getTeam","teamId","methods","getTeamProfile","call","teamName","numberUsers","numberPoints","isJoinable","staticTeamInfo","teamsList","staticTeam","id","merge","users","points","getTeams","teamsById","reduce","accum","team","numberTeams","nbTeams","push","makeBatchRequest","teamData","onChainTeamData","Number","teams","Nfts","description","images","lg","md","sm","ipfs","video","webm","mp4","sortOrder","bunnyId","blur","useRefresh","RefreshContext","fastRefresh","fast","slowRefresh","slow","Page","Container","mediaQueries","ifos","blockSlice","currentBlock","initialBlock","setBlock","CoreTag","variant","outline","startIcon","color","CommunityTag","BinanceTag","DualTag","NoFeeTag","createContext","RefreshContextProvider","useState","setSlow","setFast","useEffect","interval","setInterval","prev","clearInterval","Provider","value","batch","getWeb3NoAccount","BatchRequest","promises","resolve","reject","add","request","err","result","execute","fetchPrices","createAsyncThunk","fetch","response","json","update_at","prices","Object","keys","toLowerCase","pricesSlice","isLoading","lastUpdated","extraReducers","builder","addCase","pending","fulfilled","rpcUrl","chainId","parseInt","injected","InjectedConnector","supportedChainIds","walletconnect","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","provider","ethereum","method","chainName","nativeCurrency","symbol","decimals","rpcUrls","blockExplorerUrls","console","registerToken","tokenAddress","tokenSymbol","tokenImage","type","options","image","tokenAdded","defaultTranslationState","translations","setTranslations","TranslationsContext","campaigns","campaignMap","Map","campaign","set","getAchievementTitle","fallback","title","getAchievementDescription","getUserPointIncreaseEvents","gql","user","getAchievements","pointIncreaseEvents","userPoint","campaignMeta","get","campaignId","badge","achievementSlice","addAchievement","addAchievements","concat","setAchievements","clearAchievements","fetchAchievements","achievements","kebabCase","toastTypes","DANGER","97","56","getCakeAddress","tokens","piano","addresses","getMulticallAddress","getWbnbAddress","wbnb","getLotteryAddress","getLotteryTicketAddress","getPancakeProfileAddress","getPancakeRabbitsAddress","getBunnyFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","UnlockButton","TranslateString","useI18n","onPresentConnectModal","useWalletModal","onClick","communityFarms","filter","isCommunity","useApprove","lpContract","useDispatch","masterChefContract","useMasterchef","onApprove","approve","tx","useSousApprove","sousId","sousChefContract","useSousChef","updateUserAllowance","useLotteryApprove","cakeContract","useCake","lotteryContract","useLottery","useHarvest","farmPid","onReward","harvest","txHash","useAllHarvest","farmPids","harvestPromises","useSousHarvest","isUsingBnb","handleHarvest","soushHarvestBnb","soushHarvest","updateUserPendingReward","updateUserBalance","useSousStake","handleStake","amount","stake","sousStakeBnb","sousStake","updateUserStakedBalance","onStake","useStake","SYRUPIDS","useSousUnstake","isOldSyrup","includes","onUnstake","unstake","sousEmegencyUnstake","sousUnstake","useUnstake","getPoolApy","stakingTokenPrice","rewardTokenPrice","totalStaked","tokenPerBlock","totalRewardPricePerYear","totalStakingTokenInPool","apy","isNaN","isFinite","toNumber","getFarmApy","cakePriceUsd","poolLiquidityUsd","calculateCakeEarnedPerThousandDollars","number","numberOfDays","apyAsDecimal","farmApy","daysAsDecimalOfYear","principal","cakePrice","finalAmount","Math","round","apyModalRoi","amountEarned","amountInvested","toFixed","Grid","GridItem","Description","Text","ApyCalculatorModal","onDismiss","lpLabel","addLiquidityUrl","oneThousandDollarsWorthOfCake","cakeEarnedPerThousand1D","cakeEarnedPerThousand7D","cakeEarnedPerThousand30D","cakeEarnedPerThousand365D","fontSize","bold","textTransform","mb","justifyContent","href","ApyButton","useModal","onPresentApyModal","event","stopPropagation","scale","ml","width","bnb","projectLink","foam","busd","cake","usdc","ada","dot","eth","usdt","FlexLayout","getContract","abi","web3","web3NoAccount","Contract","getBep20Contract","bep20Abi","getIfoContract","ifoAbi","getSouschefContract","poolsConfig","pool","poolCategory","PoolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","getPointCenterIfoContract","pointCenterIfo","getCakeContract","cakeAbi","profileABI","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getLotteryContract","lotteryAbi","getLotteryTicketContract","lotteryTicketAbi","getMasterchefContract","masterChef","getClaimRefundContract","claimRefundAbi","translationId","foundTranslation","translation","stringId","text","includesVariable","interpolatedText","isEmpty","dataKey","templateKey","RegExp","replace","useFetchPublicData","fetchPoolsPublicDataAsync","getBlockNumber","blockNumber","useFarms","useSelector","useFarmFromPid","useFarmFromSymbol","lpSymbol","useFarmUser","usePools","fetchPoolsUserDataAsync","pools","useMemo","toast","pushToast","toastInfo","INFO","toastSuccess","SUCCESS","toastWarning","WARNING","remove","removeToast","clear","clearToast","useFetchProfile","fetchProfile","useFetchPriceList","useGetApiPrices","useGetApiPrice","usePriceCakeBusd","ZERO","cakeBnbFarm","bnbBusdFarm","bnbBusdPrice","useBlock","block","useTotalValue","quoteTokenPriceUsd","totalLiquidity","plus","stakingToken","getBalanceNumber","useERC20","useWeb3","useLotteryTicket","ethers","constants","MaxUint256","send","from","enterStaking","gas","on","transactionHash","deposit","leaveStaking","withdraw","emergencyWithdraw","multi","MultiCallAbi","itf","Interface","calldata","encodeFunctionData","aggregate","returnData","res","decodeFunctionResult","balance","displayBalance","dividedBy","getFullDisplayBalance","earningToken","CORE","isFinished","library","refEth","useRef","Web3","setweb3","current","RPC_URL","getRpcUrl","httpProvider","providers","HttpProvider","timeout","useEagerConnect","connectorId","getItem","useGetDocumentTitlePrice","cakePriceUsdString","eq","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","document","GlobalStyle","createGlobalStyle","background","EN","code","language","allLanguages","CACHE_KEY","LanguageContext","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","projectId","REACT_APP_CROWDIN_PROJECTID","stringTranslationsApi","StringTranslations","REACT_APP_CROWDIN_APIKEY","LanguageContextProvider","storedLangCode","storedLang","getStoredLang","listLanguageTranslations","fetchTranslationsForSelectedLanguage","then","translationApiResponse","catch","e","langObject","setItem","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","JSON","parse","setIsDark","prevState","stringify","dark","light","useTheme","StyledThemeContext","label","icon","items","Menu","currentLang","langs","setLang","links","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","history","nextState","replaceState","location","reload","this","Component","ToastListener","toasts","onRemove","Wrapper","StyledImage","img","PageLoader","src","alt","height","EasterEgg","show","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","memo","StyledLabel","Label","Balance","isDisabled","unit","reverse","previousValue","start","end","duration","separator","defaultProps","TokenInput","max","onChange","onSelectMax","minHeight","alignItems","placeholder","mx","DepositModal","onConfirm","tokenName","stakingTokenDecimals","val","setVal","pendingTx","setPendingTx","fullBalance","handleChange","currentTarget","handleSelectMax","disabled","WithdrawModal","CompoundModal","BalanceRow","CardTitle","Card","card","isActive","Title","ActionLink","OldSyrupTitle","hasBalance","target","StyledButton","button","padding","StyledLink","Link","StyledExternalLink","Button","buttonSize","buttonPadding","to","buttonColor","ButtonChild","boxShadow","tags","COMMUNITY","StyledFooter","StyledDetailsButton","primary","Details","Row","Flex","FlexFull","TokenLink","CardFooter","startBlock","endBlock","isOpen","setIsOpen","Icon","ChevronUp","ChevronDown","Tag","blocksUntilStart","blocksRemaining","imageSrc","role","aria-label","PoolFinishedSash","StyledCardActions","BalanceAndCompound","StyledActionSpacer","StyledDetails","PoolCard","stakingLimit","isBnbPool","stakingTokenContract","parseFloat","requestedApproval","setRequestedApproval","stakingTokenBalance","pendingReward","accountHasStakedBalance","needsApproval","isCardActive","convertedLimit","multipliedBy","isGreaterThan","onPresentDeposit","onPresentCompound","poolImage","toLocaleLowerCase","onPresentWithdraw","handleApprove","farmAPY","style","marginBottom","display","flex","HarvestButton","PoolTabButtons","stackedOnly","setStackedOnly","useRouteMatch","url","isExact","ToggleWrapper","checked","activeIndex","as","textSubtle","Hero","Farm","path","partition","finishedPools","openPools","stackedOnlyPools","Divider","exact","orderBy","bunnySpecialContract","useGetBullHiccupClaimableStatus","hasChecked","setHasChecked","claimables","setClaimables","canClaimMultiple","isBullClaimable","isHiccupClaimable","checkClaimableStatus","isSomeClaimable","values","some","status","createBrowserHistory","bullNft","nftList","nft","hiccupNft","NftImage","showConfetti","confetti","resize","particleCount","startVelocity","gravity","spread","origin","x","y","renderNftPreview","ClaimBullHiccupNftModal","collectibleMessage","delay","flexDirection","GlobalCheckBullHiccupClaimStatus","hasDisplayedModal","onPresentGiftModal","pathname","useLocation","Home","lazy","Farms","Lottery","NotFound","App","warn","Global","component","iterations","configureStore","devTools","reducer","farmsReducer","toastsReducer","poolsReducer","pricesReducer","profile","profileReducer","teamsReducer","achievementsReducer","blockReducer","Providers","store","ReactDOM","render","StrictMode","getElementById","isInitialized","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","fetchTeam","fetchTeams","fetchPoolsBlockLimits","poolsWithEnd","p","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","fetchPoolsTotalStatking","nonBnbPools","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","bnbPools","nonMasterPools","masterChefABI","fetchPoolsAllowance","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","masterPoolAmount","0","fetchUserPendingRewards","pendingRewards","pendingPiano","PoolsSlice","setPoolsPublicData","livePoolsData","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","field","findIndex","blockLimits","totalStakings","liveData","blockLimit","totalStaking","stakingTokenBalances","toastsSlice","toastIndex","splice","unshift","transformProfileResponse","profileResponse","userId","nftAddress","tokenId","rabbitContract","profileApi","REACT_APP_API_PROFILE","getUsername","ok","username","getProfile","hasRegistered","getUserProfile","getBunnyId","nfts","nftItem","Cookies","avatar","domain","secure","expires","profileSlice","profileFetchStart","profileFetchSucceeded","profileFetchFailed","addPoints"],"mappings":"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","file":"static/js/main.a173d1ad.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js/bignumber'\r\n\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nexport const BSC_BLOCK_TIME = 3\r\nexport const CAKE_PER_BLOCK = new BigNumber(1)\r\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\r\nexport const BASE_URL = 'https://mozartfinance.io/'\r\nexport const BASE_EXCHANGE_URL = 'https://exchange.mozartfinance.io/'\r\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_EXCHANGE_URL}/#/add`\r\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_EXCHANGE_URL}/#/pool`\r\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\r\nexport const LOTTERY_TICKET_PRICE = 1\r\n","import React, { useContext } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\ninterface SpacerProps {\r\n  size?: 'sm' | 'md' | 'lg'\r\n}\r\n\r\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\r\n  const { spacing } = useContext(ThemeContext)\r\n\r\n  let s: number\r\n  switch (size) {\r\n    case 'lg':\r\n      s = spacing[6]\r\n      break\r\n    case 'sm':\r\n      s = spacing[2]\r\n      break\r\n    case 'md':\r\n    default:\r\n      s = spacing[4]\r\n  }\r\n\r\n  return <StyledSpacer size={s} />\r\n}\r\n\r\ninterface StyledSpacerProps {\r\n  size: number\r\n}\r\n\r\nconst StyledSpacer = styled.div<StyledSpacerProps>`\r\n  height: ${(props) => props.size}px;\r\n  width: ${(props) => props.size}px;\r\n`\r\n\r\nexport default Spacer\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Spacer from '../Spacer'\r\n\r\nconst ModalActions: React.FC = ({ children }) => {\r\n  const l = React.Children.toArray(children).length\r\n  return (\r\n    <StyledModalActions>\r\n      {React.Children.map(children, (child, i) => (\r\n        <>\r\n          <StyledModalAction>{child}</StyledModalAction>\r\n          {i < l - 1 && <Spacer />}\r\n        </>\r\n      ))}\r\n    </StyledModalActions>\r\n  )\r\n}\r\n\r\nconst StyledModalActions = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\r\n  display: flex;\r\n  margin: 0;\r\n  padding: ${(props) => props.theme.spacing[4]}px 0;\r\n`\r\n\r\nconst StyledModalAction = styled.div`\r\n  flex: 1;\r\n`\r\n\r\nexport default ModalActions\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\r\nimport {\r\n  NoEthereumProviderError,\r\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\r\n} from '@web3-react/injected-connector'\r\nimport {\r\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\r\n  WalletConnectConnector,\r\n} from '@web3-react/walletconnect-connector'\r\nimport { ConnectorNames, connectorLocalStorageKey } from '@mozartfinance/uikit'\r\nimport { useToast } from 'state/hooks'\r\nimport { connectorsByName } from 'utils/web3React'\r\nimport { setupNetwork } from 'utils/wallet'\r\n\r\nconst useAuth = () => {\r\n  const { activate, deactivate } = useWeb3React()\r\n  const { toastError } = useToast()\r\n\r\n  const login = useCallback((connectorID: ConnectorNames) => {\r\n    const connector = connectorsByName[connectorID]\r\n    if (connector) {\r\n      activate(connector, async (error: Error) => {\r\n        if (error instanceof UnsupportedChainIdError) {\r\n          const hasSetup = await setupNetwork()\r\n          if (hasSetup) {\r\n            activate(connector)\r\n          }\r\n        } else {\r\n          window.localStorage.removeItem(connectorLocalStorageKey)\r\n          if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\r\n            toastError('Provider Error', 'No provider was found')\r\n          } else if (\r\n            error instanceof UserRejectedRequestErrorInjected ||\r\n            error instanceof UserRejectedRequestErrorWalletConnect\r\n          ) {\r\n            if (connector instanceof WalletConnectConnector) {\r\n              const walletConnector = connector as WalletConnectConnector\r\n              walletConnector.walletConnectProvider = null\r\n            }\r\n            toastError('Authorization Error', 'Please authorize to access your account')\r\n          } else {\r\n            toastError(error.name, error.message)\r\n          }\r\n        }\r\n      })\r\n    } else {\r\n      toastError(\"Can't find connector\", 'The connector config is wrong')\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return { login, logout: deactivate }\r\n}\r\n\r\nexport default useAuth\r\n","import random from 'lodash/random'\r\n\r\n// Array of available nodes to connect to\r\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\r\n\r\nconst getNodeUrl = () => {\r\n  const randomIndex = random(0, nodes.length - 1)\r\n  return nodes[randomIndex]\r\n}\r\n\r\nexport default getNodeUrl\r\n","import BigNumber from 'bignumber.js'\r\nimport erc20 from 'config/abi/erc20.json'\r\nimport masterchefABI from 'config/abi/masterchef.json'\r\nimport multicall from 'utils/multicall'\r\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\r\nimport farmsConfig from 'config/constants/farms'\r\n\r\nconst fetchFarms = async () => {\r\n  const data = await Promise.all(\r\n    farmsConfig.map(async (farmConfig) => {\r\n      const lpAddress = getAddress(farmConfig.lpAddresses)\r\n      const calls = [\r\n        // Balance of token in the LP contract\r\n        {\r\n          address: getAddress(farmConfig.token.address),\r\n          name: 'balanceOf',\r\n          params: [lpAddress],\r\n        },\r\n        // Balance of quote token on LP contract\r\n        {\r\n          address: getAddress(farmConfig.quoteToken.address),\r\n          name: 'balanceOf',\r\n          params: [lpAddress],\r\n        },\r\n        // Balance of LP tokens in the master chef contract\r\n        {\r\n          address: lpAddress,\r\n          name: 'balanceOf',\r\n          params: [getMasterChefAddress()],\r\n        },\r\n        // Total supply of LP tokens\r\n        {\r\n          address: lpAddress,\r\n          name: 'totalSupply',\r\n        },\r\n        // Token decimals\r\n        {\r\n          address: getAddress(farmConfig.token.address),\r\n          name: 'decimals',\r\n        },\r\n        // Quote token decimals\r\n        {\r\n          address: getAddress(farmConfig.quoteToken.address),\r\n          name: 'decimals',\r\n        },\r\n      ]\r\n\r\n      const [\r\n        tokenBalanceLP,\r\n        quoteTokenBlanceLP,\r\n        lpTokenBalanceMC,\r\n        lpTotalSupply,\r\n        tokenDecimals,\r\n        quoteTokenDecimals,\r\n      ] = await multicall(erc20, calls)\r\n\r\n      // Ratio in % a LP tokens that are in staking, vs the total number in circulation\r\n      const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\r\n\r\n      // Total value in staking in quote token value\r\n      const lpTotalInQuoteToken = new BigNumber(quoteTokenBlanceLP)\r\n        .div(new BigNumber(10).pow(18))\r\n        .times(new BigNumber(2))\r\n        .times(lpTokenRatio)\r\n\r\n      // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\r\n      const tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)).times(lpTokenRatio)\r\n      const quoteTokenAmount = new BigNumber(quoteTokenBlanceLP)\r\n        .div(new BigNumber(10).pow(quoteTokenDecimals))\r\n        .times(lpTokenRatio)\r\n\r\n      const [info, totalAllocPoint] = await multicall(masterchefABI, [\r\n        {\r\n          address: getMasterChefAddress(),\r\n          name: 'poolInfo',\r\n          params: [farmConfig.pid],\r\n        },\r\n        {\r\n          address: getMasterChefAddress(),\r\n          name: 'totalAllocPoint',\r\n        },\r\n      ])\r\n\r\n      const allocPoint = new BigNumber(info.allocPoint._hex)\r\n      const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\r\n\r\n      return {\r\n        ...farmConfig,\r\n        tokenAmount: tokenAmount.toJSON(),\r\n        quoteTokenAmount: quoteTokenAmount.toJSON(),\r\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\r\n        tokenPriceVsQuote: quoteTokenAmount.div(tokenAmount).toJSON(),\r\n        poolWeight: poolWeight.toJSON(),\r\n        multiplier: `${allocPoint.div(100).toString()}X`,\r\n        depositFeeBP: info.depositFeeBP,\r\n      }\r\n    }),\r\n  )\r\n  return data\r\n}\r\n\r\nexport default fetchFarms\r\n","import BigNumber from 'bignumber.js'\r\nimport erc20ABI from 'config/abi/erc20.json'\r\nimport masterchefABI from 'config/abi/masterchef.json'\r\nimport multicall from 'utils/multicall'\r\nimport farmsConfig from 'config/constants/farms'\r\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\r\n\r\nexport const fetchFarmUserAllowances = async (account: string) => {\r\n  const masterChefAdress = getMasterChefAddress()\r\n\r\n  const calls = farmsConfig.map((farm) => {\r\n    const lpContractAddress = getAddress(farm.lpAddresses)\r\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAdress] }\r\n  })\r\n\r\n  const rawLpAllowances = await multicall(erc20ABI, calls)\r\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\r\n    return new BigNumber(lpBalance).toJSON()\r\n  })\r\n  return parsedLpAllowances\r\n}\r\n\r\nexport const fetchFarmUserTokenBalances = async (account: string) => {\r\n  const calls = farmsConfig.map((farm) => {\r\n    const lpContractAddress = getAddress(farm.lpAddresses)\r\n    return {\r\n      address: lpContractAddress,\r\n      name: 'balanceOf',\r\n      params: [account],\r\n    }\r\n  })\r\n\r\n  const rawTokenBalances = await multicall(erc20ABI, calls)\r\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\r\n    return new BigNumber(tokenBalance).toJSON()\r\n  })\r\n  return parsedTokenBalances\r\n}\r\n\r\nexport const fetchFarmUserStakedBalances = async (account: string) => {\r\n  const masterChefAdress = getMasterChefAddress()\r\n\r\n  const calls = farmsConfig.map((farm) => {\r\n    return {\r\n      address: masterChefAdress,\r\n      name: 'userInfo',\r\n      params: [farm.pid, account],\r\n    }\r\n  })\r\n\r\n  const rawStakedBalances = await multicall(masterchefABI, calls)\r\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\r\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\r\n  })\r\n  return parsedStakedBalances\r\n}\r\n\r\nexport const fetchFarmUserEarnings = async (account: string) => {\r\n  const masterChefAdress = getMasterChefAddress()\r\n\r\n  const calls = farmsConfig.map((farm) => {\r\n    return {\r\n      address: masterChefAdress,\r\n      name: 'pendingPiano',\r\n      params: [farm.pid, account],\r\n    }\r\n  })\r\n\r\n  const rawEarnings = await multicall(masterchefABI, calls)\r\n  const parsedEarnings = rawEarnings.map((earnings) => {\r\n    return new BigNumber(earnings).toJSON()\r\n  })\r\n  return parsedEarnings\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice } from '@reduxjs/toolkit'\r\nimport farmsConfig from 'config/constants/farms'\r\nimport fetchFarms from './fetchFarms'\r\nimport {\r\n  fetchFarmUserEarnings,\r\n  fetchFarmUserAllowances,\r\n  fetchFarmUserTokenBalances,\r\n  fetchFarmUserStakedBalances,\r\n} from './fetchFarmUser'\r\nimport { FarmsState, Farm } from '../types'\r\n\r\nconst initialState: FarmsState = { data: [...farmsConfig] }\r\n\r\nexport const farmsSlice = createSlice({\r\n  name: 'Farms',\r\n  initialState,\r\n  reducers: {\r\n    setFarmsPublicData: (state, action) => {\r\n      const liveFarmsData: Farm[] = action.payload\r\n      state.data = state.data.map((farm) => {\r\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\r\n        return { ...farm, ...liveFarmData }\r\n      })\r\n    },\r\n    setFarmUserData: (state, action) => {\r\n      const { arrayOfUserDataObjects } = action.payload\r\n      arrayOfUserDataObjects.forEach((userDataEl) => {\r\n        const { index } = userDataEl\r\n        state.data[index] = { ...state.data[index], userData: userDataEl }\r\n      })\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setFarmsPublicData, setFarmUserData } = farmsSlice.actions\r\n\r\n// Thunks\r\nexport const fetchFarmsPublicDataAsync = () => async (dispatch) => {\r\n  const farms = await fetchFarms()\r\n  dispatch(setFarmsPublicData(farms))\r\n}\r\nexport const fetchFarmUserDataAsync = (account) => async (dispatch) => {\r\n  const userFarmAllowances = await fetchFarmUserAllowances(account)\r\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account)\r\n  const userStakedBalances = await fetchFarmUserStakedBalances(account)\r\n  const userFarmEarnings = await fetchFarmUserEarnings(account)\r\n\r\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\r\n    return {\r\n      index,\r\n      allowance: userFarmAllowances[index],\r\n      tokenBalance: userFarmTokenBalances[index],\r\n      stakedBalance: userStakedBalances[index],\r\n      earnings: userFarmEarnings[index],\r\n    }\r\n  })\r\n\r\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\r\n}\r\n\r\nexport default farmsSlice.reducer\r\n","import merge from 'lodash/merge'\r\nimport teamsList from 'config/constants/teams'\r\nimport { getProfileContract } from 'utils/contractHelpers'\r\nimport { Team } from 'config/constants/types'\r\nimport makeBatchRequest from 'utils/makeBatchRequest'\r\nimport { TeamsById, TeamResponse } from 'state/types'\r\n\r\nconst profileContract = getProfileContract()\r\n\r\nexport const getTeam = async (teamId: number): Promise<Team> => {\r\n  try {\r\n    const {\r\n      0: teamName,\r\n      2: numberUsers,\r\n      3: numberPoints,\r\n      4: isJoinable,\r\n    } = await profileContract.methods.getTeamProfile(teamId).call()\r\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\r\n\r\n    return merge({}, staticTeamInfo, {\r\n      isJoinable,\r\n      name: teamName,\r\n      users: numberUsers,\r\n      points: numberPoints,\r\n    })\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n\r\n/**\r\n * Gets on-chain data and merges it with the existing static list of teams\r\n */\r\nexport const getTeams = async (): Promise<TeamsById> => {\r\n  try {\r\n    const teamsById = teamsList.reduce((accum, team) => {\r\n      return {\r\n        ...accum,\r\n        [team.id]: team,\r\n      }\r\n    }, {})\r\n    const nbTeams = await profileContract.methods.numberTeams().call()\r\n    const calls = []\r\n\r\n    for (let i = 1; i <= nbTeams; i++) {\r\n      calls.push(profileContract.methods.getTeamProfile(i).call)\r\n    }\r\n\r\n    const teamData = (await makeBatchRequest(calls)) as TeamResponse[]\r\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\r\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\r\n\r\n      return {\r\n        ...accum,\r\n        [index + 1]: {\r\n          name: teamName,\r\n          users: Number(numberUsers),\r\n          points: Number(numberPoints),\r\n          isJoinable,\r\n        },\r\n      }\r\n    }, {})\r\n\r\n    return merge({}, teamsById, onChainTeamData)\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n","import { Team } from './types'\r\n\r\nconst teams: Team[] = [\r\n\r\n]\r\n\r\nexport default teams\r\n","import { Nft } from './types'\r\n\r\nconst Nfts: Nft[] = [\r\n  {\r\n    name: 'Bullish',\r\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\r\n    images: {\r\n      lg: 'bullish-lg.png',\r\n      md: 'bullish-md.png',\r\n      sm: 'bullish-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png',\r\n    },\r\n    video: {\r\n      webm: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm',\r\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 11,\r\n  },\r\n  {\r\n    name: 'Hiccup',\r\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\r\n    images: {\r\n      lg: 'hiccup-lg.png',\r\n      md: 'hiccup-md.png',\r\n      sm: 'hiccup-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 10,\r\n  },\r\n  {\r\n    name: 'Sleepy',\r\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\r\n    images: {\r\n      lg: 'sleepy-lg.png',\r\n      md: 'sleepy-md.png',\r\n      sm: 'sleepy-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png',\r\n      blur: 'sleepy-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 5,\r\n  },\r\n  {\r\n    name: 'Sunny',\r\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\r\n    images: {\r\n      lg: 'sunny-lg.png',\r\n      md: 'sunny-md.png',\r\n      sm: 'sunny-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png',\r\n      blur: 'sunny-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 9,\r\n  },\r\n  {\r\n    name: 'Churro',\r\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\r\n    images: {\r\n      lg: 'churro-lg.png',\r\n      md: 'churro-md.png',\r\n      sm: 'churro-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png',\r\n      blur: 'churro-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 8,\r\n  },\r\n  {\r\n    name: 'Dollop',\r\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\r\n    images: {\r\n      lg: 'dollop-lg.png',\r\n      md: 'dollop-md.png',\r\n      sm: 'dollop-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png',\r\n      blur: 'dollop-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 6,\r\n  },\r\n  {\r\n    name: 'Twinkle',\r\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\r\n    images: {\r\n      lg: 'twinkle-lg.png',\r\n      md: 'twinkle-md.png',\r\n      sm: 'twinkle-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png',\r\n      blur: 'twinkle-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 7,\r\n  },\r\n  {\r\n    name: 'Swapsies',\r\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\r\n    images: {\r\n      lg: 'swapsies-lg.png',\r\n      md: 'swapsies-md.png',\r\n      sm: 'swapsies-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\r\n      blur: 'swapsies-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 0,\r\n  },\r\n  {\r\n    name: 'Drizzle',\r\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\r\n    images: {\r\n      lg: 'drizzle-lg.png',\r\n      md: 'drizzle-md.png',\r\n      sm: 'drizzle-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\r\n      blur: 'drizzle-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 1,\r\n  },\r\n  {\r\n    name: 'Blueberries',\r\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\r\n    images: {\r\n      lg: 'blueberries-lg.png',\r\n      md: 'blueberries-md.png',\r\n      sm: 'blueberries-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\r\n      blur: 'blueberries-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 2,\r\n  },\r\n  {\r\n    name: 'Circular',\r\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\r\n    images: {\r\n      lg: 'circular-lg.png',\r\n      md: 'circular-md.png',\r\n      sm: 'circular-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\r\n      blur: 'circular-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 3,\r\n  },\r\n  {\r\n    name: 'Sparkle',\r\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\r\n    images: {\r\n      lg: 'sparkle-lg.png',\r\n      md: 'sparkle-md.png',\r\n      sm: 'sparkle-sm.png',\r\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\r\n      blur: 'sparkle-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    bunnyId: 4,\r\n  },\r\n]\r\n\r\nexport default Nfts\r\n","import { useContext } from 'react'\r\nimport { RefreshContext } from 'contexts/RefreshContext'\r\n\r\nconst useRefresh = () => {\r\n  const { fast, slow } = useContext(RefreshContext)\r\n  return { fastRefresh: fast, slowRefresh: slow }\r\n}\r\n\r\nexport default useRefresh\r\n","import styled from 'styled-components'\r\nimport Container from './Container'\r\n\r\nconst Page = styled(Container)`\r\n  min-height: calc(100vh - 64px);\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-top: 24px;\r\n    padding-bottom: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 32px;\r\n    padding-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport default Page\r\n","import { Ifo } from './types'\r\n\r\nconst ifos: Ifo[] = [\r\n\r\n]\r\n\r\nexport default ifos\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { BlockState } from '../types'\r\n\r\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\r\n\r\nexport const blockSlice = createSlice({\r\n  name: 'Block',\r\n  initialState,\r\n  reducers: {\r\n    setBlock: (state, action: PayloadAction<number>) => {\r\n      if (state.initialBlock === 0) {\r\n        state.initialBlock = action.payload\r\n      }\r\n\r\n      state.currentBlock = action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setBlock } = blockSlice.actions\r\n\r\nexport default blockSlice.reducer\r\n","import React from 'react'\r\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon } from '@mozartfinance/uikit'\r\n\r\nconst CoreTag = (props) => (\r\n  <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon color=\"secondary\" />} {...props}>\r\n    Core\r\n  </Tag>\r\n)\r\n\r\nconst CommunityTag = (props) => (\r\n  <Tag variant=\"textSubtle\" outline startIcon={<CommunityIcon color=\"secondary\" />} {...props}>\r\n    Community\r\n  </Tag>\r\n)\r\n\r\nconst BinanceTag = (props) => (\r\n  <Tag variant=\"binance\" outline startIcon={<BinanceIcon color=\"secondary\" />} {...props}>\r\n    Binance\r\n  </Tag>\r\n)\r\n\r\nconst DualTag = (props) => (\r\n  <Tag variant=\"textSubtle\" outline {...props}>\r\n    Dual\r\n  </Tag>\r\n)\r\n\r\nconst NoFeeTag = () => (\r\n    <Tag variant=\"success\" outline startIcon={<VerifiedIcon />}>\r\n        No Fees\r\n    </Tag>\r\n)\r\n\r\nexport { CoreTag, CommunityTag, BinanceTag, DualTag, NoFeeTag }\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nconst FAST_INTERVAL = 10000\r\nconst SLOW_INTERVAL = 60000\r\n\r\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\r\n\r\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\r\nconst RefreshContextProvider = ({ children }) => {\r\n  const [slow, setSlow] = useState(0)\r\n  const [fast, setFast] = useState(0)\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      setFast((prev) => prev + 1)\r\n    }, FAST_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      setSlow((prev) => prev + 1)\r\n    }, SLOW_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\r\n}\r\n\r\nexport { RefreshContext, RefreshContextProvider }\r\n","import { getWeb3NoAccount } from './web3'\r\n\r\n/**\r\n * Accepts an array of contract method calls and batches them\r\n *\r\n * Example:\r\n *\r\n * [\r\n *  contract.method.balanceOf().call,\r\n *  contract.method.startBlockNumber().call\r\n * ]\r\n */\r\nconst makeBatchRequest = (calls: any[]) => {\r\n  try {\r\n    const web3 = getWeb3NoAccount()\r\n    const batch = new web3.BatchRequest()\r\n\r\n    const promises = calls.map((call) => {\r\n      return new Promise((resolve, reject) => {\r\n        batch.add(\r\n          call.request({}, (err, result) => {\r\n            if (err) {\r\n              reject(err)\r\n            } else {\r\n              resolve(result)\r\n            }\r\n          }),\r\n        )\r\n      })\r\n    })\r\n\r\n    batch.execute()\r\n\r\n    return Promise.all(promises)\r\n  } catch {\r\n    return null\r\n  }\r\n}\r\n\r\nexport default makeBatchRequest\r\n","/* eslint-disable no-param-reassign */\r\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { PriceApiResponse, PriceState } from 'state/types'\r\n\r\nconst initialState: PriceState = {\r\n  isLoading: false,\r\n  lastUpdated: null,\r\n  data: null,\r\n}\r\n\r\n// Thunks\r\nexport const fetchPrices = createAsyncThunk<PriceApiResponse>('prices/fetch', async () => {\r\n  const response = await fetch('https://api.pancakeswap.com/api/v1/price')\r\n  const data = (await response.json()) as PriceApiResponse\r\n\r\n  // Return normalized token names\r\n  return {\r\n    update_at: data.update_at,\r\n    prices: Object.keys(data.prices).reduce((accum, token) => {\r\n      return {\r\n        ...accum,\r\n        [token.toLowerCase()]: data.prices[token],\r\n      }\r\n    }, {}),\r\n  }\r\n})\r\n\r\nexport const pricesSlice = createSlice({\r\n  name: 'prices',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchPrices.pending, (state) => {\r\n      state.isLoading = true\r\n    })\r\n    builder.addCase(fetchPrices.fulfilled, (state, action: PayloadAction<PriceApiResponse>) => {\r\n      state.isLoading = false\r\n      state.lastUpdated = action.payload.update_at\r\n      state.data = action.payload.prices\r\n    })\r\n  },\r\n})\r\n\r\nexport default pricesSlice.reducer\r\n","import { InjectedConnector } from '@web3-react/injected-connector'\r\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\r\nimport { BscConnector } from '@binance-chain/bsc-connector'\r\nimport { ConnectorNames } from '@mozartfinance/uikit'\r\nimport Web3 from 'web3'\r\nimport getNodeUrl from './getRpcUrl'\r\n\r\nconst POLLING_INTERVAL = 12000\r\nconst rpcUrl = getNodeUrl()\r\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\r\n\r\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\r\n\r\nconst walletconnect = new WalletConnectConnector({\r\n  rpc: { [chainId]: rpcUrl },\r\n  bridge: 'https://bridge.walletconnect.org',\r\n  qrcode: true,\r\n  pollingInterval: POLLING_INTERVAL,\r\n})\r\n\r\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\r\n\r\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\r\n  [ConnectorNames.Injected]: injected,\r\n  [ConnectorNames.WalletConnect]: walletconnect,\r\n  [ConnectorNames.BSC]: bscConnector,\r\n}\r\n\r\nexport const getLibrary = (provider): Web3 => {\r\n  return provider\r\n}\r\n","// Set of helper functions to facilitate wallet setup\r\n\r\nimport { nodes } from './getRpcUrl'\r\n\r\n/**\r\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\r\n * @returns {boolean} true if the setup succeeded, false otherwise\r\n */\r\nexport const setupNetwork = async () => {\r\n  const provider = (window as WindowChain).ethereum\r\n  if (provider) {\r\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\r\n    try {\r\n      await provider.request({\r\n        method: 'wallet_addEthereumChain',\r\n        params: [\r\n          {\r\n            chainId: `0x${chainId.toString(16)}`,\r\n            chainName: 'Binance Smart Chain Mainnet',\r\n            nativeCurrency: {\r\n              name: 'BNB',\r\n              symbol: 'bnb',\r\n              decimals: 18,\r\n            },\r\n            rpcUrls: nodes,\r\n            blockExplorerUrls: ['https://bscscan.com/'],\r\n          },\r\n        ],\r\n      })\r\n      return true\r\n    } catch (error) {\r\n      console.error(error)\r\n      return false\r\n    }\r\n  } else {\r\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\r\n    return false\r\n  }\r\n}\r\n\r\n/**\r\n * Prompt the user to add a custom token to metamask\r\n * @param tokenAddress\r\n * @param tokenSymbol\r\n * @param tokenDecimals\r\n * @param tokenImage\r\n * @returns {boolean} true if the token has been added, false otherwise\r\n */\r\nexport const registerToken = async (\r\n  tokenAddress: string,\r\n  tokenSymbol: string,\r\n  tokenDecimals: number,\r\n  tokenImage: string,\r\n) => {\r\n  const tokenAdded = await (window as WindowChain).ethereum.request({\r\n    method: 'wallet_watchAsset',\r\n    params: {\r\n      type: 'ERC20',\r\n      options: {\r\n        address: tokenAddress,\r\n        symbol: tokenSymbol,\r\n        decimals: tokenDecimals,\r\n        image: tokenImage,\r\n      },\r\n    },\r\n  })\r\n\r\n  return tokenAdded\r\n}\r\n","import React, { createContext } from 'react'\r\n\r\nexport interface TranslationState {\r\n  translations: Array<any>\r\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\r\n}\r\n\r\nconst defaultTranslationState: TranslationState = {\r\n  translations: [],\r\n  setTranslations: (): void => undefined,\r\n}\r\n\r\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\r\n","import { Campaign } from './types'\r\n\r\n/**\r\n * id: The campaign id (required)\r\n * type: The type of the achievement\r\n * title: A string or an object to be translated.\r\n * Note: If the value is a string it is likely used as data in a translation object\r\n *\r\n * badge: Achievement avatar\r\n */\r\n\r\nconst campaigns: Campaign[] = [\r\n\r\n]\r\n\r\n/**\r\n * Transform the campaign config into a map. Keeps the config the same\r\n * as the others and allows easy access to a campaign by id\r\n */\r\nexport const campaignMap = new Map<string, Campaign>()\r\n\r\ncampaigns.forEach((campaign) => {\r\n  campaignMap.set(campaign.id, campaign)\r\n})\r\n\r\nexport default campaigns\r\n","import { Campaign } from 'config/constants/types'\r\nimport { getPointCenterIfoContract } from 'utils/contractHelpers'\r\nimport ifosList from 'config/constants/ifo'\r\nimport { campaignMap } from 'config/constants/campaigns'\r\nimport { Achievement, TranslatableText } from 'state/types'\r\nimport makeBatchRequest from './makeBatchRequest'\r\n\r\ninterface IfoMapResponse {\r\n  thresholdToClaim: string\r\n  campaignId: string\r\n  numberPoints: string\r\n}\r\n\r\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\r\n  switch (campaign.type) {\r\n    case 'ifo':\r\n      return {\r\n        id: 999,\r\n        fallback: `IFO Shopper: ${campaign.title}`,\r\n        data: {\r\n          name: campaign.title as string,\r\n        },\r\n      }\r\n    default:\r\n      return campaign.title\r\n  }\r\n}\r\n\r\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\r\n  switch (campaign.type) {\r\n    case 'ifo':\r\n      return {\r\n        id: 999,\r\n        fallback: `Committed more than $5 worth of LP in the ${campaign.title} IFO`,\r\n        data: {\r\n          name: campaign.title as string,\r\n        },\r\n      }\r\n    default:\r\n      return campaign.description\r\n  }\r\n}\r\n\r\n/**\r\n * Checks if a wallet is eligble to claim points from valid IFO's\r\n */\r\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\r\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\r\n  const ifoCampaignAddresses = ifoCampaigns.map((ifoItem) => ifoItem.address)\r\n  const pointCenterContract = getPointCenterIfoContract()\r\n\r\n  // Returns the claim status of every IFO with a campaign ID\r\n  const claimStatuses = (await pointCenterContract.methods\r\n    .checkClaimStatuses(account, ifoCampaignAddresses)\r\n    .call()) as boolean[]\r\n\r\n  // Get IFO data for all IFO's that are eligible to claim\r\n  const claimableIfoData = (await makeBatchRequest(\r\n    claimStatuses.reduce((accum, claimStatus, index) => {\r\n      if (claimStatus === true) {\r\n        return [...accum, pointCenterContract.methods.ifos(ifoCampaignAddresses[index]).call]\r\n      }\r\n\r\n      return accum\r\n    }, []),\r\n  )) as IfoMapResponse[]\r\n\r\n  // Transform response to an Achievement\r\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\r\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\r\n      return accum\r\n    }\r\n\r\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\r\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\r\n\r\n    return [\r\n      ...accum,\r\n      {\r\n        address,\r\n        id: claimableIfoDataItem.campaignId,\r\n        type: 'ifo',\r\n        title: getAchievementTitle(campaignMeta),\r\n        description: getAchievementDescription(campaignMeta),\r\n        badge: campaignMeta.badge,\r\n        points: Number(claimableIfoDataItem.numberPoints),\r\n      },\r\n    ]\r\n  }, [])\r\n}\r\n","import { request, gql } from 'graphql-request'\r\nimport { campaignMap } from 'config/constants/campaigns'\r\nimport { Achievement } from 'state/types'\r\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\r\n\r\ninterface UserPointIncreaseEvent {\r\n  campaignId: string\r\n  id: string // wallet address\r\n  points: string\r\n}\r\n\r\nconst profileSubgraphApi = process.env.REACT_APP_SUBGRAPH_PROFILE\r\n\r\n/**\r\n * Gets all user point increase events on the profile filtered by wallet address\r\n */\r\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\r\n  try {\r\n    const data = await request(\r\n      profileSubgraphApi,\r\n      gql`\r\n        {\r\n          user(id: \"${account.toLowerCase()}\") {\r\n            points {\r\n              id\r\n              campaignId\r\n              points\r\n            }\r\n          }\r\n        }\r\n      `,\r\n    )\r\n    return data.user.points\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n\r\n/**\r\n * Gets all user point increase events and adds achievement meta\r\n */\r\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\r\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\r\n\r\n  if (!pointIncreaseEvents) {\r\n    return []\r\n  }\r\n\r\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\r\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\r\n\r\n    return [\r\n      ...accum,\r\n      {\r\n        id: userPoint.campaignId,\r\n        type: campaignMeta.type,\r\n        address: userPoint.id,\r\n        title: getAchievementTitle(campaignMeta),\r\n        description: getAchievementDescription(campaignMeta),\r\n        badge: campaignMeta.badge,\r\n        points: Number(userPoint.points),\r\n      },\r\n    ]\r\n  }, [])\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { toastTypes } from '@mozartfinance/uikit'\r\nimport { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\r\nimport { kebabCase } from 'lodash'\r\nimport { push } from 'state/toasts'\r\nimport { AchievementState, Achievement } from '../types'\r\nimport { getAchievements } from './helpers'\r\n\r\nconst initialState: AchievementState = {\r\n  data: [],\r\n}\r\n\r\nexport const achievementSlice = createSlice({\r\n  name: 'achievements',\r\n  initialState,\r\n  reducers: {\r\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\r\n      state.data.push(action.payload)\r\n    },\r\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\r\n      state.data.concat(action.payload)\r\n    },\r\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\r\n      state.data = action.payload\r\n    },\r\n    clearAchievements: (state) => {\r\n      state.data = []\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\r\n\r\n// Thunks\r\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\r\n  try {\r\n    const achievements = await getAchievements(account)\r\n    dispatch(setAchievements(achievements))\r\n  } catch (error) {\r\n    console.error(error)\r\n    const title = 'Error fetching achievements'\r\n    dispatch(push({ id: kebabCase(title), type: toastTypes.DANGER, title }))\r\n  }\r\n}\r\n\r\nexport default achievementSlice.reducer\r\n","export default {\r\n  masterChef: {\r\n    97: '',\r\n    56: '0x2AED73484814e67F8b795Fc38Af71E2CEc429d0f',\r\n  },\r\n  sousChef: {\r\n    97: '',\r\n    56: '0xeE685114AaA400e196B7aa38633a7Cc8E10243D1',\r\n  },\r\n  lottery: {\r\n    97: '0x99c2EcD51d52c036B00130d882Bc65f20Fdecf9f',\r\n    56: '0x3C3f2049cc17C136a604bE23cF7E42745edf3b91',\r\n  },\r\n  lotteryNFT: {\r\n    97: '0x8175c10383511b3a1C68f9dB222dc14A19CC950e',\r\n    56: '0x5e74094Cd416f55179DBd0E45b1a8ED030e396A1',\r\n  },\r\n  mulltiCall: {\r\n    56: '0x1ee38d535d541c55c9dae27b12edf090c608e6fb',\r\n    97: '0x67ADCB4dF3931b0C5Da724058ADC2174a9844412',\r\n  },\r\n  pancakeProfile: {\r\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\r\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\r\n  },\r\n  pancakeRabbits: {\r\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\r\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\r\n  },\r\n  bunnyFactory: {\r\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\r\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\r\n  },\r\n  claimRefund: {\r\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\r\n    97: '',\r\n  },\r\n  pointCenterIfo: {\r\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\r\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\r\n  },\r\n  bunnySpecial: {\r\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\r\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\r\n  },\r\n}\r\n","import addresses from 'config/constants/contracts'\r\nimport tokens from 'config/constants/tokens'\r\nimport { Address } from 'config/constants/types'\r\n\r\nexport const getAddress = (address: Address): string => {\r\n  const mainNetChainId = 56\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  return address[chainId] ? address[chainId] : address[mainNetChainId]\r\n}\r\n\r\nexport const getCakeAddress = () => {\r\n  return getAddress(tokens.piano.address)\r\n}\r\nexport const getMasterChefAddress = () => {\r\n  return getAddress(addresses.masterChef)\r\n}\r\nexport const getMulticallAddress = () => {\r\n  return getAddress(addresses.mulltiCall)\r\n}\r\nexport const getWbnbAddress = () => {\r\n  return getAddress(tokens.wbnb.address)\r\n}\r\nexport const getLotteryAddress = () => {\r\n  return getAddress(addresses.lottery)\r\n}\r\nexport const getLotteryTicketAddress = () => {\r\n  return getAddress(addresses.lotteryNFT)\r\n}\r\nexport const getPancakeProfileAddress = () => {\r\n  return getAddress(addresses.pancakeProfile)\r\n}\r\nexport const getPancakeRabbitsAddress = () => {\r\n  return getAddress(addresses.pancakeRabbits)\r\n}\r\nexport const getBunnyFactoryAddress = () => {\r\n  return getAddress(addresses.bunnyFactory)\r\n}\r\nexport const getClaimRefundAddress = () => {\r\n  return getAddress(addresses.claimRefund)\r\n}\r\nexport const getPointCenterIfoAddress = () => {\r\n  return getAddress(addresses.pointCenterIfo)\r\n}\r\nexport const getBunnySpecialAddress = () => {\r\n  return getAddress(addresses.bunnySpecial)\r\n}\r\n","import React from 'react'\r\nimport { Button, useWalletModal } from '@mozartfinance/uikit'\r\nimport useAuth from 'hooks/useAuth'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst UnlockButton = (props) => {\r\n  const TranslateString = useI18n()\r\n  const { login, logout } = useAuth()\r\n  const { onPresentConnectModal } = useWalletModal(login, logout)\r\n\r\n  return (\r\n    <Button onClick={onPresentConnectModal} {...props}>\r\n      {TranslateString(292, 'Unlock Wallet')}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default UnlockButton\r\n","import farmsConfig from './farms'\r\n\r\nconst communityFarms = farmsConfig.filter((farm) => farm.isCommunity).map((farm) => farm.token.symbol)\r\n\r\nexport { farmsConfig, communityFarms }\r\nexport { default as poolsConfig } from './pools'\r\nexport { default as ifosConfig } from './ifo'\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { ethers } from 'ethers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\r\nimport { approve } from 'utils/callHelpers'\r\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\r\n\r\n// Approve a Farm\r\nexport const useApprove = (lpContract: Contract) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, masterChefContract, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, masterChefContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve a Pool\r\nexport const useSousApprove = (lpContract: Contract, sousId) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWeb3React()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, sousChefContract, account)\r\n      dispatch(updateUserAllowance(sousId, account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve the lottery\r\nexport const useLotteryApprove = () => {\r\n  const { account } = useWeb3React()\r\n  const cakeContract = useCake()\r\n  const lotteryContract = useLottery()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(cakeContract, lotteryContract, account)\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, cakeContract, lotteryContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve an IFO\r\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\r\n  const { account } = useWeb3React()\r\n  const onApprove = useCallback(async () => {\r\n    const tx = await tokenContract.methods.approve(spenderAddress, ethers.constants.MaxUint256).send({ from: account })\r\n    return tx\r\n  }, [account, spenderAddress, tokenContract])\r\n\r\n  return onApprove\r\n}\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useDispatch } from 'react-redux'\r\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\r\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\n\r\nexport const useHarvest = (farmPid: number) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    const txHash = await harvest(masterChefContract, farmPid, account)\r\n    dispatch(fetchFarmUserDataAsync(account))\r\n    return txHash\r\n  }, [account, dispatch, farmPid, masterChefContract])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport const useAllHarvest = (farmPids: number[]) => {\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    const harvestPromises = farmPids.reduce((accum, pid) => {\r\n      return [...accum, harvest(masterChefContract, pid, account)]\r\n    }, [])\r\n\r\n    return Promise.all(harvestPromises)\r\n  }, [account, farmPids, masterChefContract])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWeb3React()\r\n  const sousChefContract = useSousChef(sousId)\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    if (sousId === 0) {\r\n      await harvest(masterChefContract, 0, account)\r\n    } else if (isUsingBnb) {\r\n      await soushHarvestBnb(sousChefContract, account)\r\n    } else {\r\n      await soushHarvest(sousChefContract, account)\r\n    }\r\n    dispatch(updateUserPendingReward(sousId, account))\r\n    dispatch(updateUserBalance(sousId, account))\r\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useDispatch } from 'react-redux'\r\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\r\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\n\r\nconst useStake = (pid: number) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleStake = useCallback(\r\n    async (amount: string) => {\r\n      const txHash = await stake(masterChefContract, pid, amount, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      console.info(txHash)\r\n    },\r\n    [account, dispatch, masterChefContract, pid],\r\n  )\r\n\r\n  return { onStake: handleStake }\r\n}\r\n\r\nexport const useSousStake = (sousId, isUsingBnb = false) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleStake = useCallback(\r\n    async (amount: string, decimals: number) => {\r\n      if (sousId === 0) {\r\n        await stake(masterChefContract, 0, amount, account)\r\n      } else if (isUsingBnb) {\r\n        await sousStakeBnb(sousChefContract, amount, account)\r\n      } else {\r\n        await sousStake(sousChefContract, amount, decimals, account)\r\n      }\r\n      dispatch(updateUserStakedBalance(sousId, account))\r\n      dispatch(updateUserBalance(sousId, account))\r\n    },\r\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\r\n  )\r\n\r\n  return { onStake: handleStake }\r\n}\r\n\r\nexport default useStake\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n  fetchFarmUserDataAsync,\r\n  updateUserStakedBalance,\r\n  updateUserBalance,\r\n  updateUserPendingReward,\r\n} from 'state/actions'\r\nimport { unstake, sousUnstake, sousEmegencyUnstake } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\n\r\nconst useUnstake = (pid: number) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleUnstake = useCallback(\r\n    async (amount: string) => {\r\n      const txHash = await unstake(masterChefContract, pid, amount, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      console.info(txHash)\r\n    },\r\n    [account, dispatch, masterChefContract, pid],\r\n  )\r\n\r\n  return { onUnstake: handleUnstake }\r\n}\r\n\r\nconst SYRUPIDS = [5, 6, 3, 1, 22, 23, 78]\r\n\r\nexport const useSousUnstake = (sousId) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n  const sousChefContract = useSousChef(sousId)\r\n  const isOldSyrup = SYRUPIDS.includes(sousId)\r\n\r\n  const handleUnstake = useCallback(\r\n    async (amount: string, decimals: number) => {\r\n      if (sousId === 0) {\r\n        const txHash = await unstake(masterChefContract, 0, amount, account)\r\n        console.info(txHash)\r\n      } else if (isOldSyrup) {\r\n        const txHash = await sousEmegencyUnstake(sousChefContract, amount, account)\r\n        console.info(txHash)\r\n      } else {\r\n        const txHash = await sousUnstake(sousChefContract, amount, decimals, account)\r\n        console.info(txHash)\r\n      }\r\n      dispatch(updateUserStakedBalance(sousId, account))\r\n      dispatch(updateUserBalance(sousId, account))\r\n      dispatch(updateUserPendingReward(sousId, account))\r\n    },\r\n    [account, dispatch, isOldSyrup, masterChefContract, sousChefContract, sousId],\r\n  )\r\n\r\n  return { onUnstake: handleUnstake }\r\n}\r\n\r\nexport default useUnstake\r\n","import BigNumber from 'bignumber.js'\r\nimport { BLOCKS_PER_YEAR, CAKE_PER_BLOCK } from 'config'\r\n\r\n/**\r\n * Get the APY value in %\r\n * @param stakingTokenPrice Token price in the same quote currency\r\n * @param rewardTokenPrice Token price in the same quote currency\r\n * @param totalStaked Total amount of stakingToken in the pool\r\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\r\n * @returns Null if the APY is NaN or infinite.\r\n */\r\nexport const getPoolApy = (\r\n  stakingTokenPrice: number,\r\n  rewardTokenPrice: number,\r\n  totalStaked: number,\r\n  tokenPerBlock: number,\r\n): number => {\r\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\r\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\r\n  const apy = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\r\n  return apy.isNaN() || !apy.isFinite() ? null : apy.toNumber()\r\n}\r\n\r\n/**\r\n * Get farm APY value in %\r\n * @param poolWeight allocationPoint / totalAllocationPoint\r\n * @param cakePriceUsd Cake price in USD\r\n * @param poolLiquidityUsd Total pool liquidity in USD\r\n * @returns\r\n */\r\nexport const getFarmApy = (poolWeight: BigNumber, cakePriceUsd: BigNumber, poolLiquidityUsd: BigNumber): number => {\r\n  const yearlyCakeRewardAllocation = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR).times(poolWeight)\r\n  const apy = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\r\n  return apy.isNaN() || !apy.isFinite() ? null : apy.toNumber()\r\n}\r\n\r\nexport default null\r\n","const roundToTwoDp = (number) => Math.round(number * 100) / 100\r\n\r\nexport const calculateCakeEarnedPerThousandDollars = ({ numberOfDays, farmApy, cakePrice }) => {\r\n  // Everything here is worked out relative to a year, with the asset compounding daily\r\n  const timesCompounded = 365\r\n  //   We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\r\n  const apyAsDecimal = farmApy / 100\r\n  const daysAsDecimalOfYear = numberOfDays / timesCompounded\r\n  //   Calculate the starting CAKE balance with a dollar balance of $1000.\r\n  const principal = 1000 / cakePrice\r\n\r\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\r\n  const finalAmount = principal * (1 + apyAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\r\n\r\n  // To get the cake earned, deduct the amount after compounding (finalAmount) from the starting CAKE balance (principal)\r\n  const interestEarned = finalAmount - principal\r\n  return roundToTwoDp(interestEarned)\r\n}\r\n\r\nexport const apyModalRoi = ({ amountEarned, amountInvested }) => {\r\n  const percentage = (amountEarned / amountInvested) * 100\r\n  return percentage.toFixed(2)\r\n}\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { Modal, Text, LinkExternal, Flex } from '@mozartfinance/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { calculateCakeEarnedPerThousandDollars, apyModalRoi } from 'utils/compoundApyHelpers'\r\n\r\ninterface ApyCalculatorModalProps {\r\n  onDismiss?: () => void\r\n  lpLabel?: string\r\n  cakePrice?: BigNumber\r\n  apy?: number\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: repeat(4, auto);\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst GridItem = styled.div`\r\n  margin-bottom: '10px';\r\n`\r\n\r\nconst Description = styled(Text)`\r\n  max-width: 320px;\r\n  margin-bottom: 28px;\r\n`\r\n\r\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\r\n  onDismiss,\r\n  lpLabel,\r\n  cakePrice,\r\n  apy,\r\n  addLiquidityUrl,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const oneThousandDollarsWorthOfCake = 1000 / cakePrice.toNumber()\r\n\r\n  const cakeEarnedPerThousand1D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 1, farmApy: apy, cakePrice })\r\n  const cakeEarnedPerThousand7D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 7, farmApy: apy, cakePrice })\r\n  const cakeEarnedPerThousand30D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 30, farmApy: apy, cakePrice })\r\n  const cakeEarnedPerThousand365D = calculateCakeEarnedPerThousandDollars({\r\n    numberOfDays: 365,\r\n    farmApy: apy,\r\n    cakePrice,\r\n  })\r\n\r\n  return (\r\n    <Modal title=\"ROI\" onDismiss={onDismiss}>\r\n      <Grid>\r\n        <GridItem>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(860, 'Timeframe')}\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(858, 'ROI')}\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\r\n            {TranslateString(864, 'PIANO per $1000')}\r\n          </Text>\r\n        </GridItem>\r\n        {/* 1 day row */}\r\n        <GridItem>\r\n          <Text>1d</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{cakeEarnedPerThousand1D}</Text>\r\n        </GridItem>\r\n        {/* 7 day row */}\r\n        <GridItem>\r\n          <Text>7d</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{cakeEarnedPerThousand7D}</Text>\r\n        </GridItem>\r\n        {/* 30 day row */}\r\n        <GridItem>\r\n          <Text>30d</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand30D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{cakeEarnedPerThousand30D}</Text>\r\n        </GridItem>\r\n        {/* 365 day / APY row */}\r\n        <GridItem>\r\n          <Text>365d(APY)</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>\r\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand365D, amountInvested: oneThousandDollarsWorthOfCake })}%\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{cakeEarnedPerThousand365D}</Text>\r\n        </GridItem>\r\n      </Grid>\r\n      <Description fontSize=\"12px\" color=\"textSubtle\">\r\n        {TranslateString(\r\n          866,\r\n          'Calculated based on current rates. Compounding once daily. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.',\r\n        )}\r\n      </Description>\r\n      <Flex justifyContent=\"center\">\r\n        <LinkExternal href={addLiquidityUrl}>\r\n          {TranslateString(999, 'Get')} {lpLabel}\r\n        </LinkExternal>\r\n      </Flex>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ApyCalculatorModal\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { IconButton, useModal, CalculateIcon } from '@mozartfinance/uikit'\r\nimport ApyCalculatorModal from './ApyCalculatorModal'\r\n\r\nexport interface ApyButtonProps {\r\n  lpLabel?: string\r\n  cakePrice?: BigNumber\r\n  apy?: number\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst ApyButton: React.FC<ApyButtonProps> = ({ lpLabel, cakePrice, apy, addLiquidityUrl }) => {\r\n  const [onPresentApyModal] = useModal(\r\n    <ApyCalculatorModal lpLabel={lpLabel} cakePrice={cakePrice} apy={apy} addLiquidityUrl={addLiquidityUrl} />,\r\n  )\r\n\r\n  const handleClickButton = (event): void => {\r\n    event.stopPropagation()\r\n    onPresentApyModal()\r\n  }\r\n\r\n  return (\r\n    <IconButton onClick={handleClickButton} variant=\"text\" scale=\"sm\" ml=\"4px\">\r\n      <CalculateIcon width=\"18px\" />\r\n    </IconButton>\r\n  )\r\n}\r\n\r\nexport default ApyButton\r\n","const tokens = {\r\n  bnb: {\r\n    symbol: 'BNB',\r\n    projectLink: 'https://www.binance.com/',\r\n  },\r\n  wbnb: {\r\n    symbol: 'wBNB',\r\n    address: {\r\n      56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\r\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://mozartfinance.io/',\r\n  },\r\n  piano: {\r\n    symbol: 'PIANO',\r\n    address: {\r\n      56: '0xd46936677b2c1bb696f2b67c55239331e2b7cd42',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://mozartfinance.io/',\r\n  },\r\n  foam: {\r\n    symbol: 'FOAM',\r\n    address: {\r\n      56: '0x5380ce816082d9a01c914cab73eb062f290131d6',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://mozartfinance.io/',\r\n  },\r\n  busd: {\r\n    symbol: 'BUSD',\r\n    address: {\r\n      56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.paxos.com/busd/',\r\n  },\r\n  cake: {\r\n    symbol: 'CAKE',\r\n    address: {\r\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\r\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://pancakeswap.finance/',\r\n  },\r\n  usdc: {\r\n    symbol: 'USDC',\r\n    address: {\r\n      56: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.centre.io/usdc',\r\n  },\r\n  ada: {\r\n    symbol: 'ADA',\r\n    address: {\r\n      56: '0x3ee2200efb3400fabb9aacf31297cbdd1d435d47',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.cardano.org/',\r\n  },\r\n  dot: {\r\n    symbol: 'DOT',\r\n    address: {\r\n      56: '0x7083609fce4d1d8dc0c979aab8c869ea2c873402',\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://polkadot.network/',\r\n  },\r\n  eth: {\r\n    symbol: 'ETH',\r\n    address: {\r\n      56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\r\n      97: '',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://ethereum.org/en/',\r\n  },\r\n  usdt: {\r\n    symbol: 'USDT',\r\n    address: {\r\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n      56: '0x55d398326f99059ff775485246999027b3197955',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://tether.to/',\r\n  },\r\n}\r\n\r\nexport default tokens\r\n","import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 1200px;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-left: 24px;\r\n    padding-right: 24px;\r\n  }\r\n`\r\n\r\nexport default Container\r\n","import styled from 'styled-components'\r\n\r\nconst FlexLayout = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  & > * {\r\n    min-width: 280px;\r\n    max-width: 31.5%;\r\n    width: 100%;\r\n    margin: 0 8px;\r\n    margin-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport default FlexLayout\r\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\r\nexport { clear, remove, push } from './toasts'\r\nexport {\r\n  fetchPoolsPublicDataAsync,\r\n  fetchPoolsUserDataAsync,\r\n  updateUserAllowance,\r\n  updateUserBalance,\r\n  updateUserPendingReward,\r\n  updateUserStakedBalance,\r\n} from './pools'\r\nexport { profileFetchStart, profileFetchSucceeded, profileFetchFailed } from './profile'\r\nexport { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } from './teams'\r\nexport { setBlock } from './block'\r\n","import Web3 from 'web3'\r\nimport { AbiItem } from 'web3-utils'\r\nimport web3NoAccount from 'utils/web3'\r\nimport { poolsConfig } from 'config/constants'\r\nimport { PoolCategory } from 'config/constants/types'\r\n\r\n// Addresses\r\nimport {\r\n  getAddress,\r\n  getPancakeProfileAddress,\r\n  getPancakeRabbitsAddress,\r\n  getBunnyFactoryAddress,\r\n  getBunnySpecialAddress,\r\n  getCakeAddress,\r\n  getLotteryAddress,\r\n  getLotteryTicketAddress,\r\n  getMasterChefAddress,\r\n  getPointCenterIfoAddress,\r\n  getClaimRefundAddress,\r\n} from 'utils/addressHelpers'\r\n\r\n// ABI\r\nimport profileABI from 'config/abi/pancakeProfile.json'\r\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\r\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\r\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\r\nimport bep20Abi from 'config/abi/erc20.json'\r\nimport lpTokenAbi from 'config/abi/lpToken.json'\r\nimport cakeAbi from 'config/abi/cake.json'\r\nimport ifoAbi from 'config/abi/ifo.json'\r\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\r\nimport lotteryAbi from 'config/abi/lottery.json'\r\nimport lotteryTicketAbi from 'config/abi/lotteryNft.json'\r\nimport masterChef from 'config/abi/masterchef.json'\r\nimport sousChef from 'config/abi/sousChef.json'\r\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\r\nimport claimRefundAbi from 'config/abi/claimRefund.json'\r\n\r\nconst getContract = (abi: any, address: string, web3?: Web3) => {\r\n  const _web3 = web3 ?? web3NoAccount\r\n  return new _web3.eth.Contract((abi as unknown) as AbiItem, address)\r\n}\r\n\r\nexport const getBep20Contract = (address: string, web3?: Web3) => {\r\n  return getContract(bep20Abi, address, web3)\r\n}\r\nexport const getLpContract = (address: string, web3?: Web3) => {\r\n  return getContract(lpTokenAbi, address, web3)\r\n}\r\nexport const getIfoContract = (address: string, web3?: Web3) => {\r\n  return getContract(ifoAbi, address, web3)\r\n}\r\nexport const getSouschefContract = (id: number, web3?: Web3) => {\r\n  const config = poolsConfig.find((pool) => pool.sousId === id)\r\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\r\n  return getContract(abi, getAddress(config.contractAddress), web3)\r\n}\r\nexport const getPointCenterIfoContract = (web3?: Web3) => {\r\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), web3)\r\n}\r\nexport const getCakeContract = (web3?: Web3) => {\r\n  return getContract(cakeAbi, getCakeAddress(), web3)\r\n}\r\nexport const getProfileContract = (web3?: Web3) => {\r\n  return getContract(profileABI, getPancakeProfileAddress(), web3)\r\n}\r\nexport const getPancakeRabbitContract = (web3?: Web3) => {\r\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), web3)\r\n}\r\nexport const getBunnyFactoryContract = (web3?: Web3) => {\r\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), web3)\r\n}\r\nexport const getBunnySpecialContract = (web3?: Web3) => {\r\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), web3)\r\n}\r\nexport const getLotteryContract = (web3?: Web3) => {\r\n  return getContract(lotteryAbi, getLotteryAddress(), web3)\r\n}\r\nexport const getLotteryTicketContract = (web3?: Web3) => {\r\n  return getContract(lotteryTicketAbi, getLotteryTicketAddress(), web3)\r\n}\r\nexport const getMasterchefContract = (web3?: Web3) => {\r\n  return getContract(masterChef, getMasterChefAddress(), web3)\r\n}\r\nexport const getClaimRefundContract = (web3?: Web3) => {\r\n  return getContract(claimRefundAbi, getClaimRefundAddress(), web3)\r\n}\r\n","import { useContext } from 'react'\r\nimport { isEmpty } from 'lodash'\r\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\r\n\r\ninterface ContextData {\r\n  [key: string]: number | string\r\n}\r\n\r\nconst useI18n = () => {\r\n  const { translations } = useContext(TranslationsContext)\r\n\r\n  return (translationId: number, fallback: string, data: ContextData = {}) => {\r\n    if (translations.length === 0) {\r\n      return fallback\r\n    }\r\n\r\n    const foundTranslation = translations.find((translation) => {\r\n      return translation.data.stringId === translationId\r\n    })\r\n\r\n    if (foundTranslation) {\r\n      const { text } = foundTranslation.data\r\n      const includesVariable = text.includes('%')\r\n\r\n      if (includesVariable) {\r\n        let interpolatedText = text\r\n\r\n        // If dynamic tags are found but no data was passed return the fallback\r\n        if (isEmpty(data)) {\r\n          return fallback\r\n        }\r\n\r\n        Object.keys(data).forEach((dataKey) => {\r\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\r\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey])\r\n        })\r\n\r\n        return interpolatedText\r\n      }\r\n\r\n      return text\r\n    }\r\n\r\n    return fallback\r\n  }\r\n}\r\n\r\nexport default useI18n\r\n","import { useEffect, useMemo } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { kebabCase } from 'lodash'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Toast, toastTypes } from '@mozartfinance/uikit'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Team } from 'config/constants/types'\r\nimport { getWeb3NoAccount } from 'utils/web3'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport {\r\n  fetchFarmsPublicDataAsync,\r\n  fetchPoolsPublicDataAsync,\r\n  fetchPoolsUserDataAsync,\r\n  push as pushToast,\r\n  remove as removeToast,\r\n  clear as clearToast,\r\n  setBlock,\r\n} from './actions'\r\nimport { State, Farm, Pool, ProfileState, TeamsState, AchievementState, PriceState } from './types'\r\nimport { fetchProfile } from './profile'\r\nimport { fetchTeam, fetchTeams } from './teams'\r\nimport { fetchAchievements } from './achievements'\r\nimport { fetchPrices } from './prices'\r\nimport {getBalanceNumber} from \"../utils/formatBalance\";\r\n\r\nexport const useFetchPublicData = () => {\r\n  const dispatch = useDispatch()\r\n  const { slowRefresh } = useRefresh()\r\n  useEffect(() => {\r\n    dispatch(fetchFarmsPublicDataAsync())\r\n    dispatch(fetchPoolsPublicDataAsync())\r\n  }, [dispatch, slowRefresh])\r\n\r\n  useEffect(() => {\r\n    const web3 = getWeb3NoAccount()\r\n    const interval = setInterval(async () => {\r\n      const blockNumber = await web3.eth.getBlockNumber()\r\n      dispatch(setBlock(blockNumber))\r\n    }, 6000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [dispatch])\r\n}\r\n\r\n// Farms\r\n\r\nexport const useFarms = (): Farm[] => {\r\n  const farms = useSelector((state: State) => state.farms.data)\r\n  return farms\r\n}\r\n\r\nexport const useFarmFromPid = (pid): Farm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\r\n  return farm\r\n}\r\n\r\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\r\n  return farm\r\n}\r\n\r\nexport const useFarmUser = (pid) => {\r\n  const farm = useFarmFromPid(pid)\r\n\r\n  return {\r\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\r\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\r\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\r\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\r\n  }\r\n}\r\n\r\n// Pools\r\n\r\nexport const usePools = (account): Pool[] => {\r\n  const { fastRefresh } = useRefresh()\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchPoolsUserDataAsync(account))\r\n    }\r\n  }, [account, dispatch, fastRefresh])\r\n\r\n  const pools = useSelector((state: State) => state.pools.data)\r\n  return pools\r\n}\r\n\r\nexport const usePoolFromPid = (sousId): Pool => {\r\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\r\n  return pool\r\n}\r\n\r\n// Toasts\r\nexport const useToast = () => {\r\n  const dispatch = useDispatch()\r\n  const helpers = useMemo(() => {\r\n    const push = (toast: Toast) => dispatch(pushToast(toast))\r\n\r\n    return {\r\n      toastError: (title: string, description?: string) => {\r\n        return push({ id: kebabCase(title), type: toastTypes.DANGER, title, description })\r\n      },\r\n      toastInfo: (title: string, description?: string) => {\r\n        return push({ id: kebabCase(title), type: toastTypes.INFO, title, description })\r\n      },\r\n      toastSuccess: (title: string, description?: string) => {\r\n        return push({ id: kebabCase(title), type: toastTypes.SUCCESS, title, description })\r\n      },\r\n      toastWarning: (title: string, description?: string) => {\r\n        return push({ id: kebabCase(title), type: toastTypes.WARNING, title, description })\r\n      },\r\n      push,\r\n      remove: (id: string) => dispatch(removeToast(id)),\r\n      clear: () => dispatch(clearToast()),\r\n    }\r\n  }, [dispatch])\r\n\r\n  return helpers\r\n}\r\n\r\n// Profile\r\n\r\nexport const useFetchProfile = () => {\r\n  const { account } = useWeb3React()\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchProfile(account))\r\n  }, [account, dispatch])\r\n}\r\n\r\nexport const useProfile = () => {\r\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\r\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\r\n}\r\n\r\n// Teams\r\n\r\nexport const useTeam = (id: number) => {\r\n  const team: Team = useSelector((state: State) => state.teams.data[id])\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTeam(id))\r\n  }, [id, dispatch])\r\n\r\n  return team\r\n}\r\n\r\nexport const useTeams = () => {\r\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTeams())\r\n  }, [dispatch])\r\n\r\n  return { teams: data, isInitialized, isLoading }\r\n}\r\n\r\n// Achievements\r\n\r\nexport const useFetchAchievements = () => {\r\n  const { account } = useWeb3React()\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchAchievements(account))\r\n    }\r\n  }, [account, dispatch])\r\n}\r\n\r\nexport const useAchievements = () => {\r\n  const achievements: AchievementState['data'] = useSelector((state: State) => state.achievements.data)\r\n  return achievements\r\n}\r\n\r\n// Prices\r\nexport const useFetchPriceList = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPrices())\r\n  }, [dispatch, slowRefresh])\r\n}\r\n\r\nexport const useGetApiPrices = () => {\r\n  const prices: PriceState['data'] = useSelector((state: State) => state.prices.data)\r\n  return prices\r\n}\r\n\r\nexport const useGetApiPrice = (token: string) => {\r\n  const prices = useGetApiPrices()\r\n\r\n  if (!prices) {\r\n    return null\r\n  }\r\n\r\n  return prices[token.toLowerCase()]\r\n}\r\n\r\nexport const usePriceCakeBusd = (): BigNumber => {\r\n  const ZERO = new BigNumber(0)\r\n  const cakeBnbFarm = useFarmFromPid(1)\r\n  const bnbBusdFarm = useFarmFromPid(4)\r\n\r\n  const bnbBusdPrice = bnbBusdFarm.tokenPriceVsQuote ? new BigNumber(1).div(bnbBusdFarm.tokenPriceVsQuote) : ZERO\r\n  const cakeBusdPrice = cakeBnbFarm.tokenPriceVsQuote ? bnbBusdPrice.times(cakeBnbFarm.tokenPriceVsQuote) : ZERO\r\n\r\n  return cakeBusdPrice\r\n}\r\n\r\n// Block\r\nexport const useBlock = () => {\r\n  return useSelector((state: State) => state.block)\r\n}\r\n\r\nexport const useInitialBlock = () => {\r\n  return useSelector((state: State) => state.block.initialBlock)\r\n}\r\n\r\nexport const usePoolsEx = (): Pool[] => {\r\n  const pools = useSelector((state: State) => state.pools.data)\r\n  return pools\r\n}\r\n\r\nexport const useTotalValue = (): BigNumber => {\r\n  const prices = useGetApiPrices()\r\n  const farms = useFarms()\r\n  const pools = usePoolsEx()\r\n\r\n  let value = new BigNumber(0)\r\n  if(prices) {\r\n    for (let i = 0; i < farms.length; i++) {\r\n      const farm = farms[i]\r\n      const quoteTokenPriceUsd = prices[farm.quoteToken.symbol.toLowerCase()]\r\n      const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(quoteTokenPriceUsd)\r\n      value = value.plus(totalLiquidity);\r\n    }\r\n    for (let i = 0; i < pools.length; i++) {\r\n      const pool = pools[i]\r\n      const quoteTokenPriceUsd = prices[pool.stakingToken.symbol.toLowerCase()]\r\n      const totalLiquidity = new BigNumber(getBalanceNumber(pool.totalStaked, pool.stakingToken.decimals)).times(quoteTokenPriceUsd)\r\n      value = value.plus(totalLiquidity);\r\n    }\r\n  }\r\n  return value;\r\n}","import { useMemo } from 'react'\r\nimport useWeb3 from 'hooks/useWeb3'\r\nimport {\r\n  getBep20Contract,\r\n  getCakeContract,\r\n  getBunnyFactoryContract,\r\n  getBunnySpecialContract,\r\n  getPancakeRabbitContract,\r\n  getProfileContract,\r\n  getIfoContract,\r\n  getLotteryContract,\r\n  getLotteryTicketContract,\r\n  getMasterchefContract,\r\n  getPointCenterIfoContract,\r\n  getSouschefContract,\r\n  getClaimRefundContract,\r\n} from 'utils/contractHelpers'\r\n\r\n/**\r\n * Helper hooks to get specific contracts (by ABI)\r\n */\r\n\r\nexport const useIfoContract = (address: string) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getIfoContract(address, web3), [address, web3])\r\n}\r\n\r\nexport const useERC20 = (address: string) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getBep20Contract(address, web3), [address, web3])\r\n}\r\n\r\nexport const useCake = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getCakeContract(web3), [web3])\r\n}\r\n\r\nexport const useBunnyFactory = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getBunnyFactoryContract(web3), [web3])\r\n}\r\n\r\nexport const usePancakeRabbits = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getPancakeRabbitContract(web3), [web3])\r\n}\r\n\r\nexport const useProfile = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getProfileContract(web3), [web3])\r\n}\r\n\r\nexport const useLottery = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getLotteryContract(web3), [web3])\r\n}\r\n\r\nexport const useLotteryTicket = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getLotteryTicketContract(web3), [web3])\r\n}\r\n\r\nexport const useMasterchef = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getMasterchefContract(web3), [web3])\r\n}\r\n\r\nexport const useSousChef = (id) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getSouschefContract(id, web3), [id, web3])\r\n}\r\n\r\nexport const usePointCenterIfoContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getPointCenterIfoContract(web3), [web3])\r\n}\r\n\r\nexport const useBunnySpecialContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getBunnySpecialContract(web3), [web3])\r\n}\r\n\r\nexport const useClaimRefundContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getClaimRefundContract(web3), [web3])\r\n}\r\n","import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\n\r\nexport const approve = async (lpContract, masterChefContract, account) => {\r\n  return lpContract.methods\r\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\r\n    .send({ from: account })\r\n}\r\n\r\nexport const stake = async (masterChefContract, pid, amount, account) => {\r\n  if (pid === 0) {\r\n    return masterChefContract.methods\r\n      .enterStaking(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n      .send({ from: account, gas: 200000 })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n\r\n  return masterChefContract.methods\r\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account, gas: 200000 })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStake = async (sousChefContract, amount, decimals = 18, account) => {\r\n  return sousChefContract.methods\r\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(decimals)).toString())\r\n    .send({ from: account, gas: 200000 })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, gas: 200000, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const unstake = async (masterChefContract, pid, amount, account) => {\r\n  if (pid === 0) {\r\n    return masterChefContract.methods\r\n      .leaveStaking(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n      .send({ from: account, gas: 200000 })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n\r\n  return masterChefContract.methods\r\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account, gas: 200000 })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousUnstake = async (sousChefContract, amount, decimals = 18, account) => {\r\n  // shit code: hard fix for old CTK and BLK\r\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  if (sousChefContract.options.address === '0x453a75908fb5a36d482d5f8fe88eca836f32ead5') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n\r\n  return sousChefContract.methods\r\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(decimals)).toString())\r\n    .send({ from: account, gas: 200000 })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .emergencyWithdraw()\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const harvest = async (masterChefContract, pid, account) => {\r\n  if (pid === 0) {\r\n    return masterChefContract.methods\r\n      .leaveStaking('0')\r\n      .send({ from: account, gas: 200000 })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n\r\n  return masterChefContract.methods\r\n    .deposit(pid, '0')\r\n    .send({ from: account, gas: 200000 })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvest = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit('0')\r\n    .send({ from: account, gas: 200000 })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvestBnb = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, gas: 200000, value: new BigNumber(0) })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n","import { AbiItem } from 'web3-utils'\r\nimport { Interface } from '@ethersproject/abi'\r\nimport { getWeb3NoAccount } from 'utils/web3'\r\nimport MultiCallAbi from 'config/abi/Multicall.json'\r\nimport { getMulticallAddress } from 'utils/addressHelpers'\r\n\r\ninterface Call {\r\n  address: string // Address of the contract\r\n  name: string // Function name on the contract (exemple: balanceOf)\r\n  params?: any[] // Function params\r\n}\r\n\r\nconst multicall = async (abi: any[], calls: Call[]) => {\r\n  const web3 = getWeb3NoAccount()\r\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\r\n  const itf = new Interface(abi)\r\n\r\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\r\n  const { returnData } = await multi.methods.aggregate(calldata).call()\r\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\r\n\r\n  return res\r\n}\r\n\r\nexport default multicall\r\n","import BigNumber from 'bignumber.js'\r\n\r\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\r\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\r\n  return displayBalance.toNumber()\r\n}\r\n\r\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\r\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\r\n}\r\n","import tokens from './tokens'\r\nimport { PoolConfig, PoolCategory } from './types'\r\n\r\nconst pools: PoolConfig[] = [\r\n  {\r\n    sousId: 0,\r\n    stakingToken: tokens.piano,\r\n    earningToken: tokens.piano,\r\n    contractAddress: {\r\n      56: '0x2AED73484814e67F8b795Fc38Af71E2CEc429d0f',\r\n      97: ''\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.2499779405276626',\r\n    sortOrder: 1,\r\n    isFinished: false,\r\n  },\r\n]\r\n\r\nexport default pools\r\n","import { useEffect, useState, useRef } from 'react'\r\nimport Web3 from 'web3'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getWeb3NoAccount } from 'utils/web3'\r\n\r\n/**\r\n * Provides a web3 instance using the provider provided by useWallet\r\n * with a fallback of an httpProver\r\n * Recreate web3 instance only if the provider change\r\n */\r\nconst useWeb3 = () => {\r\n  const { library } = useWeb3React()\r\n  const refEth = useRef(library)\r\n  const [web3, setweb3] = useState(library ? new Web3(library) : getWeb3NoAccount())\r\n\r\n  useEffect(() => {\r\n    if (library !== refEth.current) {\r\n      setweb3(library ? new Web3(library) : getWeb3NoAccount())\r\n      refEth.current = library\r\n    }\r\n  }, [library])\r\n\r\n  return web3\r\n}\r\n\r\nexport default useWeb3\r\n","import Web3 from 'web3'\r\nimport { HttpProviderOptions } from 'web3-core-helpers'\r\nimport getRpcUrl from 'utils/getRpcUrl'\r\n\r\nconst RPC_URL = getRpcUrl()\r\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\r\nconst web3NoAccount = new Web3(httpProvider)\r\n\r\nconst getWeb3NoAccount = () => {\r\n  return web3NoAccount\r\n}\r\n\r\nexport { getWeb3NoAccount }\r\nexport default web3NoAccount\r\n","import tokens from './tokens'\r\nimport { FarmConfig } from './types'\r\n\r\nconst farms: FarmConfig[] = [\r\n  {\r\n    pid: 0,\r\n    lpSymbol: 'PIANO',\r\n    lpAddresses: {\r\n      56: '0xd46936677B2C1Bb696F2b67c55239331E2b7Cd42',\r\n      97: '',\r\n    },\r\n    token: tokens.foam,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 1,\r\n    lpSymbol: 'PIANO-BNB LP',\r\n    lpAddresses: {\r\n      56: '0xb40AE531Da43F7D114F2E6D9c331171Ef4130f5F',\r\n      97: '',\r\n    },\r\n    token: tokens.piano,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 2,\r\n    lpSymbol: 'PIANO-BUSD LP',\r\n    lpAddresses: {\r\n      56: '0xd8D201CeBC25c39AD3E05536F94ECc3B6Bc8cAcc',\r\n      97: '',\r\n    },\r\n    token: tokens.piano,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 3,\r\n    lpSymbol: 'PIANO-CAKE LP',\r\n    lpAddresses: {\r\n      56: '0x0E7197386A37c0D792D9D357D59f89b679cf1b06',\r\n      97: '',\r\n    },\r\n    token: tokens.piano,\r\n    quoteToken: tokens.cake,\r\n  },\r\n  {\r\n    pid: 4,\r\n    lpSymbol: 'BUSD-BNB LP',\r\n    lpAddresses: {\r\n      56: '0x1b96b92314c44b159149f7e0303511fb2fc4774f',\r\n      97: ''\r\n    },\r\n    token: tokens.busd,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 5,\r\n    lpSymbol: 'USDC-BUSD LP',\r\n    lpAddresses: {\r\n      56: '0x680dd100e4b394bda26a59dd5c119a391e747d18',\r\n      97: ''\r\n    },\r\n    token: tokens.usdc,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 6,\r\n    lpSymbol: 'CAKE-BNB LP',\r\n    lpAddresses: {\r\n      56: '0xa527a61703d82139f8a06bc30097cc9caa2df5a6',\r\n      97: ''\r\n    },\r\n    token: tokens.cake,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 8,\r\n    lpSymbol: 'PIANO-ADA LP',\r\n    lpAddresses: {\r\n      56: '0xfFeb22c6143B982699E2dcBafBb0EAC51d0F408E',\r\n      97: ''\r\n    },\r\n    token: tokens.piano,\r\n    quoteToken: tokens.ada,\r\n  },\r\n  {\r\n    pid: 9,\r\n    lpSymbol: 'PIANO-DOT LP',\r\n    lpAddresses: {\r\n      56: '0xe3905652c879d9df7319b5756350dd2bb5e052e9',\r\n      97: ''\r\n    },\r\n    token: tokens.piano,\r\n    quoteToken: tokens.dot,\r\n  },\r\n  {\r\n    pid: 10,\r\n    lpSymbol: 'USDT-BUSD LP',\r\n    lpAddresses: {\r\n      56: '0xc15fa3e22c912a276550f3e5fe3b0deb87b55acd',\r\n      97: ''\r\n    },\r\n    token: tokens.usdt,\r\n    quoteToken: tokens.busd,\r\n  },\r\n  {\r\n    pid: 11,\r\n    lpSymbol: 'DOT-ETH LP',\r\n    lpAddresses: {\r\n      56: '0x84cd882a0abaf8ad69b85fef0a8d5a36f5c0ecc1',\r\n      97: ''\r\n    },\r\n    token: tokens.dot,\r\n    quoteToken: tokens.eth,\r\n  },\r\n\r\n\r\n]\r\n\r\nexport default farms\r\n","import { useEffect } from 'react'\r\nimport { connectorLocalStorageKey, ConnectorNames } from '@mozartfinance/uikit'\r\nimport useAuth from 'hooks/useAuth'\r\n\r\nconst useEagerConnect = () => {\r\n  const { login } = useAuth()\r\n\r\n  useEffect(() => {\r\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\r\n\r\n    // Disable eager connect for BSC Wallet. Currently the BSC Wallet extension does not inject BinanceChain\r\n    // into the Window object in time causing it to throw an error\r\n    // TODO: Figure out an elegant way to listen for when the BinanceChain object is ready\r\n    if (connectorId && connectorId !== ConnectorNames.BSC) {\r\n      login(connectorId)\r\n    }\r\n  }, [login])\r\n}\r\n\r\nexport default useEagerConnect\r\n","import { useEffect } from 'react'\r\nimport { usePriceCakeBusd } from 'state/hooks'\r\n\r\nconst useGetDocumentTitlePrice = () => {\r\n  const cakePriceUsd = usePriceCakeBusd()\r\n\r\n  const cakePriceUsdString = cakePriceUsd.eq(0)\r\n    ? ''\r\n    : ` - $${cakePriceUsd.toNumber().toLocaleString(undefined, {\r\n        minimumFractionDigits: 3,\r\n        maximumFractionDigits: 3,\r\n      })}`\r\n\r\n  useEffect(() => {\r\n    document.title = `Mozart Finance${cakePriceUsdString}`\r\n  }, [cakePriceUsdString])\r\n}\r\nexport default useGetDocumentTitlePrice\r\n","import { createGlobalStyle } from 'styled-components'\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { PancakeTheme } from '@mozartfinance/uikit/dist/theme'\r\n\r\ndeclare module 'styled-components' {\r\n  /* eslint-disable @typescript-eslint/no-empty-interface */\r\n  export interface DefaultTheme extends PancakeTheme {}\r\n}\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    font-family: 'Kanit', sans-serif;\r\n  }\r\n  body {\r\n    background-color: ${({ theme }) => theme.colors.background};\r\n\r\n    img {\r\n      height: auto;\r\n      max-width: 100%;\r\n    }\r\n  }\r\n`\r\n\r\nexport default GlobalStyle\r\n","export const EN = { code: 'en', language: 'English' }\r\nexport const AR = { code: 'ar', language: 'العربية' }\r\nexport const CA = { code: 'ca', language: 'Català' }\r\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\r\nexport const ZHTW = { code: 'zh-TW', language: '繁體中文' }\r\nexport const CS = { code: 'cs', language: 'Čeština' }\r\nexport const DA = { code: 'da', language: 'Dansk' }\r\nexport const DE = { code: 'de', language: 'Deutsch' }\r\nexport const NL = { code: 'nl', language: 'Nederlands' }\r\nexport const FIL = { code: 'fil', language: 'Filipino' }\r\nexport const FI = { code: 'fi', language: 'Suomalainen' }\r\nexport const FR = { code: 'fr', language: 'Français' }\r\nexport const EL = { code: 'el', language: 'Ελληνικά' }\r\nexport const HI = { code: 'hi', language: 'हिंदी' }\r\nexport const HU = { code: 'hu', language: 'Magyar' }\r\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\r\nexport const IT = { code: 'it', language: 'Italiano' }\r\nexport const JA = { code: 'ja', language: '日本語' }\r\nexport const KO = { code: 'ko', language: '한국어' }\r\nexport const PTBR = { code: 'pt-BR', language: 'Português' }\r\nexport const RO = { code: 'ro', language: 'Română' }\r\nexport const RU = { code: 'ru', language: 'Русский' }\r\nexport const SR = { code: 'sr', language: 'Српски' }\r\nexport const ESES = { code: 'es-ES', language: 'Español' }\r\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\r\nexport const TA = { code: 'ta', language: 'தமிழ்' }\r\nexport const TR = { code: 'tr', language: 'Türkçe' }\r\nexport const UK = { code: 'uk', language: 'Українська' }\r\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\r\n\r\nexport const allLanguages = [\r\n  EN,\r\n  AR,\r\n  CA,\r\n  ZHCN,\r\n  ZHTW,\r\n  CS,\r\n  DA,\r\n  DE,\r\n  NL,\r\n  FIL,\r\n  FI,\r\n  FR,\r\n  EL,\r\n  HI,\r\n  HU,\r\n  ID,\r\n  IT,\r\n  JA,\r\n  KO,\r\n  PTBR,\r\n  RO,\r\n  RU,\r\n  SR,\r\n  ESES,\r\n  SVSE,\r\n  TA,\r\n  TR,\r\n  UK,\r\n  VI,\r\n]\r\n","import React, { useState, useEffect } from 'react'\r\nimport { StringTranslations } from '@crowdin/crowdin-api-client'\r\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\r\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\r\n\r\nconst CACHE_KEY = 'pancakeSwapLanguage'\r\n\r\nexport interface LangType {\r\n  code: string\r\n  language: string\r\n}\r\n\r\nexport interface LanguageState {\r\n  selectedLanguage: LangType\r\n  setSelectedLanguage: (langObject: LangType) => void\r\n  translatedLanguage: LangType\r\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\r\n}\r\n\r\nconst LanguageContext = React.createContext({\r\n  selectedLanguage: EN,\r\n  setSelectedLanguage: () => undefined,\r\n  translatedLanguage: EN,\r\n  setTranslatedLanguage: () => undefined,\r\n} as LanguageState)\r\n\r\nconst fileId = 8\r\nconst projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECTID)\r\nconst stringTranslationsApi = new StringTranslations({\r\n  token: process.env.REACT_APP_CROWDIN_APIKEY,\r\n})\r\n\r\nconst fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\r\n  return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\r\n}\r\n\r\nconst LanguageContextProvider = ({ children }) => {\r\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\r\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\r\n  const [translations, setTranslations] = useState<Array<any>>([])\r\n\r\n  const getStoredLang = (storedLangCode: string) => {\r\n    return allLanguages.filter((language) => {\r\n      return language.code === storedLangCode\r\n    })[0]\r\n  }\r\n\r\n  useEffect(() => {\r\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\r\n    if (storedLangCode) {\r\n      const storedLang = getStoredLang(storedLangCode)\r\n      setSelectedLanguage(storedLang)\r\n    } else {\r\n      setSelectedLanguage(EN)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (selectedLanguage) {\r\n      fetchTranslationsForSelectedLanguage(selectedLanguage)\r\n        .then((translationApiResponse) => {\r\n          if (translationApiResponse.data.length < 1) {\r\n            setTranslations([])\r\n          } else {\r\n            setTranslations(translationApiResponse.data)\r\n          }\r\n        })\r\n        .then(() => setTranslatedLanguage(selectedLanguage))\r\n        .catch((e) => {\r\n          setTranslations([])\r\n          console.error('Error while loading translations', e)\r\n        })\r\n    }\r\n  }, [selectedLanguage, setTranslations])\r\n\r\n  const handleLanguageSelect = (langObject: LangType) => {\r\n    setSelectedLanguage(langObject)\r\n    localStorage.setItem(CACHE_KEY, langObject.code)\r\n  }\r\n\r\n  return (\r\n    <LanguageContext.Provider\r\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\r\n    >\r\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\r\n    </LanguageContext.Provider>\r\n  )\r\n}\r\n\r\nexport { LanguageContext, LanguageContextProvider }\r\n","import React, { useState } from 'react'\r\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\r\nimport { light, dark } from '@mozartfinance/uikit'\r\n\r\nconst CACHE_KEY = 'IS_DARK'\r\n\r\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\r\n\r\nconst ThemeContextProvider = ({ children }) => {\r\n  const [isDark, setIsDark] = useState(() => {\r\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\r\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\r\n  })\r\n\r\n  const toggleTheme = () => {\r\n    setIsDark((prevState) => {\r\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\r\n      return !prevState\r\n    })\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\r\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n\r\nexport { ThemeContext, ThemeContextProvider }\r\n","import { useContext } from 'react'\r\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\r\nimport { ThemeContext } from 'contexts/ThemeContext'\r\n\r\nconst useTheme = () => {\r\n  const { isDark, toggleTheme } = useContext(ThemeContext)\r\n  const theme = useContext(StyledThemeContext)\r\n  return { isDark, toggleTheme, theme }\r\n}\r\n\r\nexport default useTheme\r\n","import { MenuEntry } from '@mozartfinance/uikit'\r\n\r\nconst config: MenuEntry[] = [\r\n  {\r\n    label: 'Home',\r\n    icon: 'HomeIcon',\r\n    href: '/',\r\n  },\r\n  {\r\n    label: 'Trade',\r\n    icon: 'TradeIcon',\r\n    items: [\r\n      {\r\n        label: 'Exchange',\r\n        href: 'https://exchange.mozartfinance.io',\r\n      },\r\n      {\r\n        label: 'Liquidity',\r\n        href: 'https://exchange.mozartfinance.io/#/pool',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    label: 'Farms',\r\n    icon: 'FarmIcon',\r\n    href: '/farms',\r\n  },\r\n  {\r\n    label: 'Pools',\r\n    icon: 'PoolIcon',\r\n    href: '/pools',\r\n  },\r\n  {\r\n    label: 'More',\r\n    icon: 'MoreIcon',\r\n    items: [\r\n      {\r\n        label: 'Github',\r\n        href: 'https://github.com/mozartfinance',\r\n      },\r\n      {\r\n        label: 'Docs',\r\n        href: 'https://mozartfinance.gitbook.io/mozart-finance/',\r\n      },\r\n      {\r\n        label: 'Blog',\r\n        href: 'https://mozart-finance.medium.com/',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    label: 'Audit by IB',\r\n    icon: 'TicketIcon',\r\n    href: 'https://github.com/ImmuneBytes/Smart-Contract-Audit-Reports/blob/main/Mozart%20Finance/Mozart%20Finance%20(PIANO)%20-%20Final%20Audit%20Report.pdf',\r\n  },\r\n]\r\n\r\nexport default config\r\n","import React, { useContext } from 'react'\r\nimport { Menu as UikitMenu } from '@mozartfinance/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { allLanguages } from 'config/localisation/languageCodes'\r\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useAuth from 'hooks/useAuth'\r\nimport { usePriceCakeBusd, useProfile } from 'state/hooks'\r\nimport config from './config'\r\n\r\nconst Menu = (props) => {\r\n  const { account } = useWeb3React()\r\n  const { login, logout } = useAuth()\r\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\r\n  const { isDark, toggleTheme } = useTheme()\r\n  const cakePriceUsd = usePriceCakeBusd()\r\n  // const { profile } = useProfile()\r\n\r\n  return (\r\n    <UikitMenu\r\n      account={account}\r\n      login={login}\r\n      logout={logout}\r\n      isDark={isDark}\r\n      toggleTheme={toggleTheme}\r\n      currentLang={selectedLanguage && selectedLanguage.code}\r\n      langs={allLanguages}\r\n      setLang={setSelectedLanguage}\r\n      cakePriceUsd={cakePriceUsd.toNumber()}\r\n      links={config}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","import React, { Suspense, SuspenseProps } from 'react'\r\n\r\ninterface State {\r\n  hasError: boolean\r\n}\r\n\r\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { hasError: false }\r\n  }\r\n\r\n  static getDerivedStateFromError() {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true }\r\n  }\r\n\r\n  componentDidCatch(error) {\r\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\r\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\r\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\r\n\r\n    // Save a flag on the window object indicating that we have already had a chunk error.\r\n    // This prevents infinite reloads\r\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\r\n\r\n    // If was a chunk load error, refresh the page\r\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\r\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\r\n      window.history.replaceState(nextState, '')\r\n      window.location.reload()\r\n      return\r\n    }\r\n\r\n    throw error\r\n  }\r\n\r\n  render() {\r\n    const { hasError } = this.state\r\n    const { fallback } = this.props\r\n\r\n    if (hasError) {\r\n      return fallback\r\n    }\r\n\r\n    return <Suspense {...this.props} />\r\n  }\r\n}\r\n\r\nexport default SuspenseWithChunkError\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { ToastContainer, Toast } from '@mozartfinance/uikit'\r\nimport { useToast } from 'state/hooks'\r\nimport { State } from 'state/types'\r\n\r\nconst ToastListener = () => {\r\n  const toasts: Toast[] = useSelector((state: State) => state.toasts.data)\r\n  const { remove } = useToast()\r\n\r\n  const handleRemove = (id: string) => remove(id)\r\n\r\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\r\n}\r\n\r\nexport default ToastListener\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Page from './layout/Page'\r\n\r\n\r\nconst Wrapper = styled(Page)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\nconst StyledImage = styled.img`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 58px;\r\n`\r\n\r\nconst PageLoader: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n        <StyledImage src=\"/images/mozart-flying.png\" alt=\"Mozart illustration\" width={300} height={300} />\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PageLoader","import React, { useState, useCallback } from 'react'\r\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@mozartfinance/uikit'\r\n\r\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\r\n  const [show, setShow] = useState(false)\r\n  const startFalling = useCallback(() => setShow(true), [setShow])\r\n  useKonamiCheatCode(startFalling)\r\n\r\n  if (show) {\r\n    return (\r\n      <div onAnimationEnd={() => setShow(false)}>\r\n        <FallingBunnies {...props} />\r\n      </div>\r\n    )\r\n  }\r\n  return null\r\n}\r\n\r\nexport default React.memo(EasterEgg)\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\ninterface LabelProps {\r\n  text?: string\r\n  isFinished?: boolean\r\n}\r\n\r\nconst Label: React.FC<LabelProps> = ({ text, isFinished = false }) => (\r\n  <StyledLabel isFinished={isFinished}>{text}</StyledLabel>\r\n)\r\n\r\nconst StyledLabel = styled.div<{ isFinished: boolean }>`\r\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'primary']};\r\n  font-size: 14px;\r\n`\r\n\r\nexport default Label\r\n","import React, { useEffect, useRef } from 'react'\r\nimport CountUp from 'react-countup'\r\nimport { Text } from '@mozartfinance/uikit'\r\n\r\ninterface TextProps {\r\n  isDisabled?: boolean\r\n  fontSize?: string\r\n  color?: string\r\n}\r\n\r\ninterface BalanceProps extends TextProps {\r\n  value?: number\r\n  decimals?: number\r\n  unit?: string\r\n  reverse?: boolean\r\n}\r\n\r\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit, reverse = false }) => {\r\n  const previousValue = useRef(0)\r\n\r\n  useEffect(() => {\r\n    previousValue.current = value\r\n  }, [value])\r\n\r\n  return (\r\n    <Text bold color={isDisabled ? 'textDisabled' : color} fontSize={fontSize}>\r\n      {reverse && value && unit\r\n          ? <span>{unit}</span>\r\n          : ''\r\n      }\r\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\r\n      {!reverse && value && unit\r\n          ? <span>{unit}</span>\r\n          : ''\r\n      }\r\n    </Text>\r\n  )\r\n}\r\n\r\nBalance.defaultProps = {\r\n  fontSize: '32px',\r\n  isDisabled: false,\r\n  color: 'text',\r\n  decimals: 3,\r\n}\r\n\r\nexport default Balance\r\n","import React from 'react'\r\nimport { Box, Button, Flex, Text, Input, InputProps } from '@mozartfinance/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface TokenInputProps extends InputProps {\r\n  max: number | string\r\n  symbol: string\r\n  value: string\r\n  onSelectMax?: () => void\r\n  onChange: (evt: React.FormEvent<HTMLInputElement>) => void\r\n  depositFeeBP?: number\r\n}\r\n\r\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value, depositFeeBP = 0  }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Box>\r\n      <Flex justifyContent=\"flex-end\" minHeight=\"21px\" mb=\"8px\">\r\n        <Text color=\"primary\" fontSize=\"14px\">\r\n          {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\r\n        </Text>\r\n      </Flex>\r\n      <Flex alignItems=\"center\">\r\n        <Input onChange={onChange} placeholder=\"0\" value={value} />\r\n        <Flex alignItems=\"center\">\r\n          <Text bold color=\"primary\" textTransform=\"uppercase\" mx=\"8px\">\r\n            {symbol}\r\n          </Text>\r\n          <div>\r\n            <Button scale=\"sm\" onClick={onSelectMax}>\r\n              {TranslateString(452, 'Max')}\r\n            </Button>\r\n          </div>\r\n        </Flex>\r\n      </Flex>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default TokenInput\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@mozartfinance/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport TokenInput from 'components/TokenInput'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\n\r\ninterface DepositModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string, decimals: number) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n  stakingTokenDecimals?: number\r\n}\r\n\r\nconst DepositModal: React.FC<DepositModalProps> = ({\r\n  max,\r\n  onConfirm,\r\n  onDismiss,\r\n  tokenName = '',\r\n  stakingTokenDecimals = 18,\r\n}) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max, stakingTokenDecimals)\r\n  }, [max, stakingTokenDecimals])\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value)\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\r\n      <TokenInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n      />\r\n      <ModalActions>\r\n        <Button width=\"100%\" variant=\"secondary\" onClick={onDismiss}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          width=\"100%\"\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(val, stakingTokenDecimals)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default DepositModal\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@mozartfinance/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport TokenInput from 'components/TokenInput'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\n\r\ninterface WithdrawModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string, decimals: number) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n  stakingTokenDecimals?: number\r\n}\r\n\r\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({\r\n  onConfirm,\r\n  onDismiss,\r\n  max,\r\n  tokenName = '',\r\n  stakingTokenDecimals = 18,\r\n}) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max, stakingTokenDecimals)\r\n  }, [max, stakingTokenDecimals])\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value)\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\r\n      <TokenInput\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        value={val}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(val, stakingTokenDecimals)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default WithdrawModal\r\n","import BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport React, { useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@mozartfinance/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport Balance from 'components/Balance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\nimport {multiBuy} from \"../../../utils/lotteryUtils\";\r\n\r\ninterface DepositModalProps {\r\n  earnings: BigNumber\r\n  onConfirm: (amount: string, decimals: number) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n  stakingTokenDecimals?: number\r\n}\r\n\r\nconst CompoundModal: React.FC<DepositModalProps> = ({\r\n  earnings,\r\n  onConfirm,\r\n  onDismiss,\r\n  tokenName = '',\r\n  stakingTokenDecimals = 18,\r\n}) => {\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(earnings, stakingTokenDecimals)\r\n  }, [earnings, stakingTokenDecimals])\r\n\r\n  return (\r\n    <Modal\r\n      title={`${TranslateString(704, 'Compound')} ${TranslateString(330, `${tokenName} Earned`)}`}\r\n      onDismiss={onDismiss}\r\n    >\r\n      <BalanceRow>\r\n        <Balance value={Number(fullBalance)} />\r\n      </BalanceRow>\r\n      <ModalActions>\r\n        <Button width=\"100%\" variant=\"secondary\" onClick={onDismiss}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          id=\"compound-cake\"\r\n          width=\"100%\"\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(fullBalance, stakingTokenDecimals)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default CompoundModal\r\n\r\nconst BalanceRow = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: row;\r\n`\r\n","import styled from 'styled-components'\r\n\r\ninterface StyledTitleProps {\r\n  isFinished?: boolean\r\n}\r\n\r\nconst CardTitle = styled.div<StyledTitleProps>`\r\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'text']};\r\n  font-weight: 600;\r\n  font-size: 24px;\r\n  line-height: 1.1;\r\n  margin-bottom: 14px;\r\n`\r\n\r\nexport default CardTitle\r\n","import styled from 'styled-components'\r\n\r\nconst Card = styled.div<{ isActive?: boolean; isFinished?: boolean }>`\r\n  background: ${(props) => props.theme.card.background};\r\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\r\n  border-radius: 32px;\r\n  display: flex;\r\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\r\n  box-shadow: ${({ isActive }) =>\r\n    isActive\r\n      ? '0px 0px 0px 1px #0098A1, 0px 0px 4px 8px rgba(31, 199, 212, 0.4);'\r\n      : '0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05)'};\r\n  flex-direction: column;\r\n  position: relative;\r\n`\r\n\r\nexport default Card\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport CardTitle from './CardTitle'\r\n\r\ninterface Props {\r\n  hasBalance?: boolean\r\n}\r\n\r\nconst Title = styled.div`\r\n  color: #ed4b9e;\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  text-transform: uppercase;\r\n`\r\n\r\nconst ActionLink = styled.a`\r\n  color: #ed4b9e;\r\n  font-size: 14px;\r\n`\r\n\r\nconst OldSyrupTitle: React.FC<Props> = ({ hasBalance = false }) => {\r\n  if (hasBalance) {\r\n    return (\r\n      <div>\r\n        <Title>Action Required</Title>\r\n        <ActionLink\r\n          href=\" https://pancakeswap.medium.com/urgent-action-required-changes-to-syrup-pools-70b98d7b2541\"\r\n          target=\"_blank\"\r\n        >\r\n          What do I need to do?\r\n        </ActionLink>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <CardTitle isFinished>FINISHED</CardTitle>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OldSyrupTitle\r\n","import React, { useContext, useMemo } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\ninterface ButtonProps {\r\n  children?: React.ReactNode\r\n  disabled?: boolean\r\n  href?: string\r\n  onClick?: () => void\r\n  size?: 'sm' | 'md' | 'lg'\r\n  text?: string\r\n  to?: string\r\n  variant?: 'default' | 'secondary' | 'tertiary'\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({ children, disabled, href, onClick, size, text, to }) => {\r\n  const { colors, spacing } = useContext(ThemeContext)\r\n  const buttonColor = colors.background\r\n\r\n  let boxShadow: string\r\n  let buttonSize: number\r\n  let buttonPadding: number\r\n  let fontSize: number\r\n  switch (size) {\r\n    case 'sm':\r\n      buttonPadding = spacing[3]\r\n      buttonSize = 36\r\n      fontSize = 14\r\n      break\r\n    case 'lg':\r\n      buttonPadding = spacing[4]\r\n      buttonSize = 72\r\n      fontSize = 16\r\n      break\r\n    case 'md':\r\n    default:\r\n      buttonPadding = spacing[4]\r\n      buttonSize = 56\r\n      fontSize = 16\r\n  }\r\n\r\n  const ButtonChild = useMemo(() => {\r\n    if (to) {\r\n      return <StyledLink to={to}>{text}</StyledLink>\r\n    }\r\n    if (href) {\r\n      return (\r\n        <StyledExternalLink href={href} target=\"__blank\">\r\n          {text}\r\n        </StyledExternalLink>\r\n      )\r\n    }\r\n    return text\r\n  }, [href, text, to])\r\n\r\n  return (\r\n    <StyledButton\r\n      boxShadow={boxShadow}\r\n      color={buttonColor}\r\n      disabled={disabled}\r\n      fontSize={fontSize}\r\n      onClick={onClick}\r\n      padding={buttonPadding}\r\n      size={buttonSize}\r\n    >\r\n      {children}\r\n      {ButtonChild}\r\n    </StyledButton>\r\n  )\r\n}\r\n\r\ninterface StyledButtonProps {\r\n  boxShadow: string\r\n  color: string\r\n  disabled?: boolean\r\n  fontSize: number\r\n  padding: number\r\n  size: number\r\n}\r\n\r\nconst StyledButton = styled.button<StyledButtonProps>`\r\n  align-items: center;\r\n  background: ${(props) => (!props.disabled ? props.theme.card.background : `#ddd`)};\r\n  border: 0;\r\n  border-radius: 12px;\r\n  color: ${(props) => (!props.disabled ? `#751113` : `#acaaaf`)};\r\n  cursor: pointer;\r\n  display: flex;\r\n  font-size: ${(props) => props.fontSize}px;\r\n  font-weight: 700;\r\n  height: ${(props) => props.size}px;\r\n  justify-content: center;\r\n  outline: none;\r\n  padding-left: ${(props) => props.padding}px;\r\n  padding-right: ${(props) => props.padding}px;\r\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\r\n  width: 100%;\r\n  border: 2px solid ${(props) => (!props.disabled ? `#751113` : `#eee`)};\r\n  width: 100px;\r\n  height: 30px;\r\n  font-size: 14px;\r\n  padding: 0px;\r\n`\r\n\r\nconst StyledLink = styled(Link)`\r\n  align-items: center;\r\n  color: inherit;\r\n  display: flex;\r\n  flex: 1;\r\n  height: 56px;\r\n  justify-content: center;\r\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\r\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\r\n  text-decoration: none;\r\n`\r\n\r\nconst StyledExternalLink = styled.a`\r\n  align-items: center;\r\n  color: inherit;\r\n  display: flex;\r\n  flex: 1;\r\n  height: 56px;\r\n  justify-content: center;\r\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\r\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\r\n  text-decoration: none;\r\n`\r\n\r\nexport default Button\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { ChevronDown, ChevronUp } from 'react-feather'\r\nimport { Flex, MetamaskIcon } from '@mozartfinance/uikit'\r\nimport Balance from 'components/Balance'\r\nimport { CommunityTag, CoreTag, BinanceTag } from 'components/Tags'\r\nimport {useBlock, useGetApiPrices} from 'state/hooks'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport { registerToken } from 'utils/wallet'\r\nimport { BASE_URL } from 'config'\r\n\r\nconst tags = {\r\n  [PoolCategory.BINANCE]: BinanceTag,\r\n  [PoolCategory.CORE]: CoreTag,\r\n  [PoolCategory.COMMUNITY]: CommunityTag,\r\n}\r\n\r\ninterface Props {\r\n  projectLink: string\r\n  decimals: number\r\n  totalStaked: BigNumber\r\n  tokenName: string\r\n  tokenAddress: string\r\n  tokenDecimals: number\r\n  startBlock: number\r\n  endBlock: number\r\n  isFinished: boolean\r\n  poolCategory: PoolCategory\r\n  stakingTokenPrice: number\r\n  rewardTokenPrice: number\r\n}\r\n\r\nconst StyledFooter = styled.div<{ isFinished: boolean }>`\r\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\r\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled2' : 'primary2']};\r\n  padding: 24px;\r\n`\r\n\r\nconst StyledDetailsButton = styled.button`\r\n  align-items: center;\r\n  background-color: transparent;\r\n  border: 0;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  cursor: pointer;\r\n  display: inline-flex;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  height: 32px;\r\n  justify-content: center;\r\n  outline: 0;\r\n  padding: 0;\r\n  &:hover {\r\n    opacity: 0.9;\r\n  }\r\n\r\n  & > svg {\r\n    margin-left: 4px;\r\n  }\r\n`\r\n\r\nconst Details = styled.div`\r\n  margin-top: 24px;\r\n`\r\n\r\nconst Row = styled(Flex)`\r\n  align-items: center;\r\n`\r\n\r\nconst FlexFull = styled.div`\r\n  flex: 1;\r\n`\r\nconst Label = styled.div`\r\n  font-size: 14px;\r\n`\r\nconst TokenLink = styled.a`\r\n  font-size: 14px;\r\n  text-decoration: none;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  cursor: pointer;\r\n`\r\n\r\nconst CardFooter: React.FC<Props> = ({\r\n  projectLink,\r\n  decimals,\r\n  tokenAddress,\r\n  totalStaked,\r\n  tokenName,\r\n  tokenDecimals,\r\n  isFinished,\r\n  startBlock,\r\n  endBlock,\r\n  poolCategory,\r\n  stakingTokenPrice,\r\n  rewardTokenPrice\r\n}) => {\r\n  const { currentBlock } = useBlock()\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const Icon = isOpen ? ChevronUp : ChevronDown\r\n\r\n  const handleClick = () => setIsOpen(!isOpen)\r\n  const Tag = tags[poolCategory]\r\n\r\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\r\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\r\n\r\n  const imageSrc = `${BASE_URL}/images/tokens/${tokenName.toLowerCase()}.png`\r\n\r\n  const totalLiquidity = new BigNumber(getBalanceNumber(totalStaked, decimals)).times(rewardTokenPrice)\r\n\r\n  const totalLiquidityUnitReverse = true\r\n\r\n  return (\r\n    <StyledFooter isFinished={isFinished}>\r\n      <Row>\r\n        <FlexFull>\r\n          <Tag />\r\n        </FlexFull>\r\n        <StyledDetailsButton onClick={handleClick}>\r\n          {isOpen ? TranslateString(1066, 'Hide') : TranslateString(658, 'Details')} <Icon />\r\n        </StyledDetailsButton>\r\n      </Row>\r\n      {isOpen && (\r\n        <Details>\r\n          <Row mb=\"4px\">\r\n            <FlexFull>\r\n              <Label>\r\n                <span role=\"img\" aria-label=\"syrup\">\r\n                  {' '}\r\n                </span>\r\n                {TranslateString(408, 'Total')}\r\n              </Label>\r\n            </FlexFull>\r\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(totalStaked, decimals)} />\r\n          </Row>\r\n          <Row mb=\"4px\">\r\n            <FlexFull>\r\n              <Label>\r\n                <span role=\"img\" aria-label=\"syrup\">\r\n                  {' '}\r\n                </span>\r\n                {TranslateString(408, 'Total Liquidity')}\r\n              </Label>\r\n            </FlexFull>\r\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={totalLiquidity.toNumber()} unit=\"$\" reverse={totalLiquidityUnitReverse} />\r\n          </Row>\r\n          {blocksUntilStart > 0 && (\r\n            <Row mb=\"4px\">\r\n              <FlexFull>\r\n                <Label>{TranslateString(1212, 'Start')}:</Label>\r\n              </FlexFull>\r\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksUntilStart} decimals={0} />\r\n            </Row>\r\n          )}\r\n          {blocksUntilStart === 0 && blocksRemaining > 0 && (\r\n            <Row mb=\"4px\">\r\n              <FlexFull>\r\n                <Label>{TranslateString(410, 'End')}:</Label>\r\n              </FlexFull>\r\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksRemaining} decimals={0} />\r\n            </Row>\r\n          )}\r\n          {tokenAddress && (\r\n            <Flex mb=\"4px\">\r\n              <TokenLink onClick={() => registerToken(tokenAddress, tokenName, tokenDecimals, imageSrc)}>\r\n                Add {tokenName} to Metamask\r\n              </TokenLink>\r\n              <MetamaskIcon height={15} width={15} ml=\"4px\" />\r\n            </Flex>\r\n          )}\r\n          <TokenLink href={projectLink} target=\"_blank\">\r\n            {TranslateString(412, 'View project site')}\r\n          </TokenLink>\r\n        </Details>\r\n      )}\r\n    </StyledFooter>\r\n  )\r\n}\r\n\r\nexport default React.memo(CardFooter)\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport {Button, IconButton, useModal, AddIcon, Image, Text, Skeleton, Flex} from '@mozartfinance/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport Label from 'components/Label'\r\nimport { useERC20 } from 'hooks/useContract'\r\nimport { useSousApprove } from 'hooks/useApprove'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useSousStake } from 'hooks/useStake'\r\nimport { useSousUnstake } from 'hooks/useUnstake'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { getPoolApy, getFarmApy } from 'utils/apy'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { useSousHarvest } from 'hooks/useHarvest'\r\nimport Balance from 'components/Balance'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport tokens from 'config/constants/tokens'\r\nimport { Pool } from 'state/types'\r\nimport {useGetApiPrice, useGetApiPrices} from 'state/hooks'\r\nimport DepositModal from './DepositModal'\r\nimport WithdrawModal from './WithdrawModal'\r\nimport CompoundModal from './CompoundModal'\r\nimport CardTitle from './CardTitle'\r\nimport Card from './Card'\r\nimport OldSyrupTitle from './OldSyrupTitle'\r\nimport HarvestButton from './HarvestButton'\r\nimport CardFooter from './CardFooter'\r\nimport ApyButton from \"../../Farms/components/FarmCard/ApyButton\";\r\nimport {BASE_ADD_LIQUIDITY_URL} from \"../../../config\";\r\n\r\ninterface HarvestProps {\r\n  pool: Pool\r\n}\r\n\r\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\r\n  const {\r\n    sousId,\r\n    stakingToken,\r\n    earningToken,\r\n    harvest,\r\n    poolCategory,\r\n    totalStaked,\r\n    startBlock,\r\n    endBlock,\r\n    isFinished,\r\n    userData,\r\n    stakingLimit,\r\n  } = pool\r\n\r\n  // Pools using native BNB behave differently than pools using a token\r\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\r\n  const TranslateString = useI18n()\r\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\r\n  const { account } = useWeb3React()\r\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId)\r\n  const { onStake } = useSousStake(sousId, isBnbPool)\r\n  const { onUnstake } = useSousUnstake(sousId)\r\n  const { onReward } = useSousHarvest(sousId, isBnbPool)\r\n\r\n  // APY\r\n  const rewardTokenPrice = useGetApiPrice(earningToken.symbol)\r\n  const stakingTokenPrice = useGetApiPrice(stakingToken.symbol)\r\n  const apy = getPoolApy(\r\n    stakingTokenPrice,\r\n    rewardTokenPrice,\r\n    getBalanceNumber(pool.totalStaked, stakingToken.decimals),\r\n    parseFloat(pool.tokenPerBlock),\r\n  )\r\n\r\n\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n\r\n  const allowance = new BigNumber(userData?.allowance || 0)\r\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\r\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\r\n  const earnings = new BigNumber(userData?.pendingReward || 0)\r\n\r\n  const isOldSyrup = stakingToken.symbol === tokens.foam.symbol\r\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\r\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool\r\n  const isCardActive = isFinished && accountHasStakedBalance\r\n\r\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(earningToken.decimals))\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal\r\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\r\n      onConfirm={onStake}\r\n      tokenName={stakingLimit ? `${stakingToken.symbol} (${stakingLimit} max)` : stakingToken.symbol}\r\n      stakingTokenDecimals={stakingToken.decimals}\r\n    />,\r\n  )\r\n\r\n  const [onPresentCompound] = useModal(\r\n    <CompoundModal earnings={earnings} onConfirm={onStake} tokenName={stakingToken.symbol}/>,\r\n  )\r\n  const poolImage = `${pool.earningToken.symbol}-${pool.stakingToken.symbol}.png`.toLocaleLowerCase()\r\n  const [onPresentWithdraw] = useModal(\r\n    <WithdrawModal\r\n      max={stakedBalance}\r\n      onConfirm={onUnstake}\r\n      tokenName={stakingToken.symbol}\r\n      stakingTokenDecimals={stakingToken.decimals}\r\n    />,\r\n  )\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      const txHash = await onApprove()\r\n      // user rejected tx or didn't go thru\r\n      if (!txHash) {\r\n        setRequestedApproval(false)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove, setRequestedApproval])\r\n\r\n  const farmAPY = apy && apy.toLocaleString('en-US', { maximumFractionDigits: 2 })\r\n\r\n  const addLiquidityUrl = `https://bscscan.com/address/${pool.earningToken.address[56]}`\r\n\r\n  return (\r\n    <Card isActive={isCardActive} isFinished={isFinished && sousId !== 0}>\r\n      {isFinished && sousId !== 0 && <PoolFinishedSash />}\r\n      <div style={{ padding: '24px' }}>\r\n        <CardTitle isFinished={isFinished && sousId !== 0}>\r\n          {isOldSyrup && '[OLD]'} {earningToken.symbol} {TranslateString(348, 'Pool')}\r\n          {stakingToken.symbol === 'PIANO' ? (\r\n              <Text fontSize=\"12px\">You need at least 1% in your wallet for computing</Text>\r\n          ) : ''}\r\n        </CardTitle>\r\n        <div style={{ marginBottom: '8px', display: 'flex', alignItems: 'center' }}>\r\n          <div style={{ flex: 1 }}>\r\n            <Image src={`/images/pools/${poolImage}`} alt={earningToken.symbol} width={64} height={64} />\r\n          </div>\r\n          {account && harvest && !isOldSyrup && (\r\n            <HarvestButton\r\n              disabled={!earnings.toNumber() || pendingTx}\r\n              text={pendingTx ? TranslateString(999, 'Collecting') : TranslateString(562, 'Harvest')}\r\n              onClick={async () => {\r\n                setPendingTx(true)\r\n                await onReward()\r\n                setPendingTx(false)\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n        {!isOldSyrup ? (\r\n          <BalanceAndCompound>\r\n            <Balance value={getBalanceNumber(earnings, earningToken.decimals)} isDisabled={isFinished} />\r\n            {sousId === 0 && account && harvest && (\r\n              <HarvestButton\r\n                disabled={!earnings.toNumber() || pendingTx}\r\n                text={pendingTx ? TranslateString(999, 'Compounding') : TranslateString(704, 'Compound')}\r\n                onClick={onPresentCompound}\r\n              />\r\n            )}\r\n          </BalanceAndCompound>\r\n        ) : (\r\n          <OldSyrupTitle hasBalance={accountHasStakedBalance} />\r\n        )}\r\n        <Label isFinished={isFinished && sousId !== 0} text={TranslateString(330, `${earningToken.symbol} earned`)} />\r\n        <StyledCardActions>\r\n          {!account && <UnlockButton />}\r\n          {account &&\r\n            (needsApproval && !isOldSyrup ? (\r\n              <div style={{ flex: 1 }}>\r\n                <Button disabled={isFinished || requestedApproval} onClick={handleApprove} width=\"100%\">\r\n                  {`Approve ${stakingToken.symbol}`}\r\n                </Button>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <Button\r\n                  disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx}\r\n                  onClick={\r\n                    isOldSyrup\r\n                      ? async () => {\r\n                          setPendingTx(true)\r\n                          await onUnstake('0', stakingToken.decimals)\r\n                          setPendingTx(false)\r\n                        }\r\n                      : onPresentWithdraw\r\n                  }\r\n                >\r\n                  {`Unstake ${stakingToken.symbol}`}\r\n                </Button>\r\n                <StyledActionSpacer />\r\n                {!isOldSyrup && (\r\n                  <IconButton disabled={isFinished && sousId !== 0} onClick={onPresentDeposit}>\r\n                    <AddIcon color=\"white\" />\r\n                  </IconButton>\r\n                )}\r\n              </>\r\n            ))}\r\n        </StyledCardActions>\r\n        <StyledDetails>\r\n          <div>{TranslateString(736, 'APR')}:</div>\r\n          <div style={{ display: 'flex', alignItems: 'center' }}>\r\n            {apy ? (\r\n                <>\r\n                  <ApyButton lpLabel=\"\" addLiquidityUrl={addLiquidityUrl} cakePrice={new BigNumber(stakingTokenPrice)} apy={apy} />\r\n                  <Text bold fontSize=\"14px\">{farmAPY}%</Text>\r\n                </>\r\n            ) : (\r\n                <Skeleton height={24} width={80} />\r\n            )}\r\n          </div>\r\n        </StyledDetails>\r\n        <StyledDetails>\r\n          <div>{TranslateString(384, 'Your Stake')}:</div>\r\n          <Balance\r\n            fontSize=\"14px\"\r\n            isDisabled={isFinished}\r\n            value={getBalanceNumber(stakedBalance, stakingToken.decimals)}\r\n          />\r\n        </StyledDetails>\r\n      </div>\r\n      <CardFooter\r\n        projectLink={earningToken.projectLink}\r\n        decimals={stakingToken.decimals}\r\n        totalStaked={totalStaked}\r\n        startBlock={startBlock}\r\n        endBlock={endBlock}\r\n        isFinished={isFinished}\r\n        poolCategory={poolCategory}\r\n        tokenName={earningToken.symbol}\r\n        tokenAddress={earningToken.address ? getAddress(earningToken.address) : ''}\r\n        tokenDecimals={earningToken.decimals}\r\n        stakingTokenPrice={stakingTokenPrice}\r\n        rewardTokenPrice={rewardTokenPrice}\r\n      />\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst PoolFinishedSash = styled.div`\r\n  background-image: url('/images/pool-finished-sash.svg');\r\n  background-position: top right;\r\n  background-repeat: not-repeat;\r\n  height: 135px;\r\n  position: absolute;\r\n  right: -24px;\r\n  top: -24px;\r\n  width: 135px;\r\n`\r\n\r\nconst StyledCardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 16px 0;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n`\r\n\r\nconst BalanceAndCompound = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  flex-direction: row;\r\n`\r\n\r\nconst StyledActionSpacer = styled.div`\r\n  height: ${(props) => props.theme.spacing[4]}px;\r\n  width: ${(props) => props.theme.spacing[4]}px;\r\n`\r\n\r\nconst StyledDetails = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  font-size: 14px;\r\n`\r\n\r\nexport default PoolCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useRouteMatch, Link } from 'react-router-dom'\r\nimport { ButtonMenu, ButtonMenuItem, Toggle, Text } from '@mozartfinance/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst PoolTabButtons = ({ stackedOnly, setStackedOnly }) => {\r\n  const { url, isExact } = useRouteMatch()\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ToggleWrapper>\r\n        <Toggle checked={stackedOnly} onChange={() => setStackedOnly(!stackedOnly)} />\r\n        <Text> {TranslateString(999, 'Staked only')}</Text>\r\n      </ToggleWrapper>\r\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\r\n        <ButtonMenuItem as={Link} to={`${url}`}>\r\n          {TranslateString(1198, 'Live')}\r\n        </ButtonMenuItem>\r\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\r\n          {TranslateString(388, 'Finished')}\r\n        </ButtonMenuItem>\r\n      </ButtonMenu>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PoolTabButtons\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 32px;\r\n`\r\n\r\nconst ToggleWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-right: 32px;\r\n\r\n  ${Text} {\r\n    margin-left: 8px;\r\n  }\r\n`\r\n","import styled from 'styled-components'\r\n\r\nexport default styled.div`\r\n  background-color: ${({ theme }) => theme.colors.textSubtle};\r\n  height: 1px;\r\n  margin: 0 auto 32px;\r\n  width: 100%;\r\n`\r\n","import React, { useState, useMemo } from 'react'\r\nimport { Route, useRouteMatch } from 'react-router-dom'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Heading } from '@mozartfinance/uikit'\r\nimport orderBy from 'lodash/orderBy'\r\nimport partition from 'lodash/partition'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { usePools, useBlock } from 'state/hooks'\r\nimport FlexLayout from 'components/layout/Flex'\r\nimport Page from 'components/layout/Page'\r\nimport Coming from './components/Coming'\r\nimport PoolCard from './components/PoolCard'\r\nimport PoolTabButtons from './components/PoolTabButtons'\r\nimport Divider from './components/Divider'\r\n\r\nconst Farm: React.FC = () => {\r\n  const { path } = useRouteMatch()\r\n  const TranslateString = useI18n()\r\n  const { account } = useWeb3React()\r\n  const pools = usePools(account)\r\n  const { currentBlock } = useBlock()\r\n  const [stackedOnly, setStackedOnly] = useState(false)\r\n\r\n  const [finishedPools, openPools] = useMemo(\r\n    () => partition(pools, (pool) => pool.isFinished || currentBlock > pool.endBlock),\r\n    [currentBlock, pools],\r\n  )\r\n  const stackedOnlyPools = useMemo(\r\n    () => openPools.filter((pool) => pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)),\r\n    [openPools],\r\n  )\r\n\r\n  return (\r\n    <Page>\r\n      <Hero>\r\n        <div>\r\n          <Heading as=\"h1\" size=\"xxl\" mb=\"16px\">\r\n            {TranslateString(738, 'PIANO Pool')}\r\n          </Heading>\r\n          <ul>\r\n            <li>{TranslateString(580, 'Stake PIANO to earn new tokens.')}</li>\r\n            <li>{TranslateString(486, 'You can unstake at any time.')}</li>\r\n            <li>{TranslateString(406, 'Rewards are calculated per block.')}</li>\r\n          </ul>\r\n        </div>\r\n        <img src=\"/images/mozart-sleeping.png\" alt=\"PIANO icon\" width={410} height={191} />\r\n      </Hero>\r\n      <PoolTabButtons stackedOnly={stackedOnly} setStackedOnly={setStackedOnly} />\r\n      <Divider />\r\n      <FlexLayout>\r\n        <Route exact path={`${path}`}>\r\n          <>\r\n            {stackedOnly\r\n              ? orderBy(stackedOnlyPools, ['sortOrder']).map((pool) => <PoolCard key={pool.sousId} pool={pool} />)\r\n              : orderBy(openPools, ['sortOrder']).map((pool) => <PoolCard key={pool.sousId} pool={pool} />)}\r\n          </>\r\n        </Route>\r\n        <Route path={`${path}/history`}>\r\n          {orderBy(finishedPools, ['sortOrder']).map((pool) => (\r\n            <PoolCard key={pool.sousId} pool={pool} />\r\n          ))}\r\n        </Route>\r\n      </FlexLayout>\r\n    </Page>\r\n  )\r\n}\r\n\r\nconst Hero = styled.div`\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  display: grid;\r\n  grid-gap: 32px;\r\n  grid-template-columns: 1fr;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 250px;\r\n  padding: 48px 0;\r\n  ul {\r\n    margin: 0;\r\n    padding: 0;\r\n    list-style-type: none;\r\n    font-size: 16px;\r\n    li {\r\n      margin-bottom: 4px;\r\n    }\r\n  }\r\n  img {\r\n    height: auto;\r\n    max-width: 100%;\r\n  }\r\n  @media (min-width: 576px) {\r\n    grid-template-columns: 1fr 1fr;\r\n    margin: 0;\r\n    max-width: none;\r\n  }\r\n`\r\n\r\nexport default Farm\r\n","import { useEffect, useState } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getBunnySpecialContract } from 'utils/contractHelpers'\r\n\r\nexport const BULL_NFT = 11\r\nexport const HICCUP_NFT = 10\r\n\r\nconst bunnySpecialContract = getBunnySpecialContract()\r\n\r\nconst useGetBullHiccupClaimableStatus = () => {\r\n  const [hasChecked, setHasChecked] = useState(false)\r\n  const [claimables, setClaimables] = useState({\r\n    [BULL_NFT]: false,\r\n    [HICCUP_NFT]: false,\r\n  })\r\n  const { account } = useWeb3React()\r\n\r\n  useEffect(() => {\r\n    const checkClaimableStatus = async () => {\r\n      const [isBullClaimable, isHiccupClaimable] = (await bunnySpecialContract.methods\r\n        .canClaimMultiple(account, [BULL_NFT, HICCUP_NFT])\r\n        .call()) as boolean[]\r\n\r\n      setClaimables({\r\n        [BULL_NFT]: isBullClaimable,\r\n        [HICCUP_NFT]: isHiccupClaimable,\r\n      })\r\n      setHasChecked(true)\r\n    }\r\n\r\n    if (account) {\r\n      checkClaimableStatus()\r\n    }\r\n  }, [account, setClaimables, setHasChecked])\r\n\r\n  return {\r\n    isSomeClaimable: Object.values(claimables).some((status) => status === true),\r\n    isBullClaimable: claimables[BULL_NFT],\r\n    isHiccupClaimable: claimables[HICCUP_NFT],\r\n    hasChecked,\r\n  }\r\n}\r\n\r\nexport default useGetBullHiccupClaimableStatus\r\n","import { createBrowserHistory } from 'history'\r\n\r\n// Manually create the history object so we can access outside the Router e.g. in modals\r\nconst history = createBrowserHistory()\r\n\r\nexport default history\r\n","import React, { useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Modal, Text, Button, Flex, InjectedModalProps } from '@mozartfinance/uikit'\r\nimport history from 'routerHistory'\r\nimport { delay } from 'lodash'\r\nimport useI18n from 'hooks/useI18n'\r\nimport confetti from 'canvas-confetti'\r\nimport nftList from 'config/constants/nfts'\r\nimport { BULL_NFT, HICCUP_NFT } from '../hooks/useGetBullHiccupClaimableStatus'\r\n\r\ninterface ClaimBullHiccupNftModalProps extends InjectedModalProps {\r\n  isBullClaimable: boolean\r\n  isHiccupClaimable: boolean\r\n}\r\n\r\nconst bullNft = nftList.find((nft) => nft.bunnyId === BULL_NFT)\r\nconst hiccupNft = nftList.find((nft) => nft.bunnyId === HICCUP_NFT)\r\n\r\nconst NftImage = styled.img`\r\n  border-radius: 50%;\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst showConfetti = () => {\r\n  confetti({\r\n    resize: true,\r\n    particleCount: 200,\r\n    startVelocity: 30,\r\n    gravity: 0.5,\r\n    spread: 350,\r\n    origin: {\r\n      x: 0.5,\r\n      y: 0.3,\r\n    },\r\n  })\r\n}\r\n\r\nconst renderNftPreview = (isBullClaimable: boolean, isHiccupClaimable: boolean) => {\r\n  if (isBullClaimable && isHiccupClaimable) {\r\n    return <img src=\"/images/bull-hiccup.png\" height=\"128px\" width=\"128px\" alt=\"nft\" style={{ marginBottom: '24px' }} />\r\n  }\r\n\r\n  if (isBullClaimable) {\r\n    return <NftImage src={`/images/nfts/${bullNft.images.md}`} height=\"128px\" width=\"128px\" alt=\"nft\" />\r\n  }\r\n\r\n  return <NftImage src={`/images/nfts/${hiccupNft.images.md}`} height=\"128px\" width=\"128px\" alt=\"nft\" />\r\n}\r\n\r\nconst ClaimBullHiccupNftModal: React.FC<ClaimBullHiccupNftModalProps> = ({\r\n  isBullClaimable,\r\n  isHiccupClaimable,\r\n  onDismiss,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const collectibleMessage =\r\n    isBullClaimable && isHiccupClaimable\r\n      ? TranslateString(999, 'You won two Collectibles!')\r\n      : TranslateString(999, 'You won a collectible!')\r\n\r\n  // This is required because the modal exists outside the Router\r\n  const handleClick = () => {\r\n    onDismiss()\r\n    history.push('/collectibles')\r\n  }\r\n\r\n  useEffect(() => {\r\n    delay(showConfetti, 100)\r\n  }, [])\r\n\r\n  return (\r\n    <Modal title={TranslateString(999, 'Congratulations!')} onDismiss={onDismiss}>\r\n      <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\r\n        {renderNftPreview(isBullClaimable, isHiccupClaimable)}\r\n        <Text bold color=\"secondary\" fontSize=\"24px\" mb=\"24px\">\r\n          {collectibleMessage}\r\n        </Text>\r\n        <Button onClick={handleClick}>{TranslateString(999, 'Claim now')}</Button>\r\n      </Flex>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ClaimBullHiccupNftModal\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useModal } from '@mozartfinance/uikit'\r\nimport useGetBullHiccupClaimableStatus from '../hooks/useGetBullHiccupClaimableStatus'\r\nimport ClaimBullHiccupNftModal from './ClaimBullHiccupNftModal'\r\n\r\n/**\r\n * This is represented as a component rather than a hook because we need to keep it\r\n * inside the Router.\r\n *\r\n * TODO: Put global checks in redux or make a generic area to house global checks\r\n */\r\nconst GlobalCheckBullHiccupClaimStatus = () => {\r\n  const hasDisplayedModal = useRef(false)\r\n  const { isSomeClaimable, isBullClaimable, isHiccupClaimable } = useGetBullHiccupClaimableStatus()\r\n  const [onPresentGiftModal] = useModal(\r\n    <ClaimBullHiccupNftModal isBullClaimable={isBullClaimable} isHiccupClaimable={isHiccupClaimable} />,\r\n  )\r\n  const { account } = useWeb3React()\r\n  const { pathname } = useLocation()\r\n\r\n  useEffect(() => {\r\n    if (!pathname.includes('/collectibles') && isSomeClaimable && !hasDisplayedModal.current) {\r\n      onPresentGiftModal()\r\n      hasDisplayedModal.current = true\r\n    }\r\n  }, [pathname, isSomeClaimable, hasDisplayedModal, onPresentGiftModal])\r\n\r\n  // Reset the check flag when account changes\r\n  useEffect(() => {\r\n    hasDisplayedModal.current = false\r\n  }, [account, hasDisplayedModal])\r\n\r\n  return null\r\n}\r\n\r\nexport default GlobalCheckBullHiccupClaimStatus\r\n","import React, { useEffect, lazy } from 'react'\r\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\r\nimport { ResetCSS } from '@mozartfinance/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport useEagerConnect from 'hooks/useEagerConnect'\r\nimport { useFetchPriceList, useFetchProfile, useFetchPublicData } from 'state/hooks'\r\nimport useGetDocumentTitlePrice from './hooks/useGetDocumentTitlePrice'\r\nimport GlobalStyle from './style/Global'\r\nimport Menu from './components/Menu'\r\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\r\nimport ToastListener from './components/ToastListener'\r\nimport PageLoader from './components/PageLoader'\r\nimport EasterEgg from './components/EasterEgg'\r\nimport Pools from './views/Pools'\r\nimport GlobalCheckBullHiccupClaimStatus from './views/Collectibles/components/GlobalCheckBullHiccupClaimStatus'\r\nimport history from './routerHistory'\r\n\r\n// Route-based code splitting\r\n// Only pool is included in the main bundle because of it's the most visited page\r\nconst Home = lazy(() => import('./views/Home'))\r\nconst Farms = lazy(() => import('./views/Farms'))\r\nconst Lottery = lazy(() => import('./views/Lottery'))\r\n// const Ifos = lazy(() => import('./views/Ifos'))\r\nconst NotFound = lazy(() => import('./views/NotFound'))\r\n// const Collectibles = lazy(() => import('./views/Collectibles'))\r\n// const Teams = lazy(() => import('./views/Teams'))\r\n// const Team = lazy(() => import('./views/Teams/Team'))\r\n// const Profile = lazy(() => import('./views/Profile'))\r\n\r\n// This config is required for number formating\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nconst App: React.FC = () => {\r\n  // Monkey patch warn() because of web3 flood\r\n  // To be removed when web3 1.3.5 is released\r\n  useEffect(() => {\r\n    console.warn = () => null\r\n  }, [])\r\n\r\n  useEagerConnect()\r\n  useFetchPublicData()\r\n  useFetchProfile()\r\n  useFetchPriceList()\r\n  useGetDocumentTitlePrice()\r\n\r\n  return (\r\n    <Router history={history}>\r\n      <ResetCSS />\r\n      <GlobalStyle />\r\n      <Menu>\r\n        <SuspenseWithChunkError fallback={<PageLoader />}>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <Home />\r\n            </Route>\r\n            <Route path=\"/lottery\">\r\n              <Lottery />\r\n            </Route>\r\n            <Route path=\"/farms\">\r\n              <Farms />\r\n            </Route>\r\n            <Route path=\"/pools\">\r\n              <Pools />\r\n            </Route>\r\n            \r\n            {/* 404 */}\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </SuspenseWithChunkError>\r\n      </Menu>\r\n      <EasterEgg iterations={2} />\r\n      <ToastListener />\r\n      <GlobalCheckBullHiccupClaimStatus />\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default React.memo(App)\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport farmsReducer from './farms'\r\nimport toastsReducer from './toasts'\r\nimport poolsReducer from './pools'\r\nimport pricesReducer from './prices'\r\nimport profileReducer from './profile'\r\nimport teamsReducer from './teams'\r\nimport achievementsReducer from './achievements'\r\nimport blockReducer from './block'\r\n\r\nexport default configureStore({\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n  reducer: {\r\n    farms: farmsReducer,\r\n    toasts: toastsReducer,\r\n    pools: poolsReducer,\r\n    prices: pricesReducer,\r\n    profile: profileReducer,\r\n    teams: teamsReducer,\r\n    achievements: achievementsReducer,\r\n    block: blockReducer,\r\n  },\r\n})\r\n","import React from 'react'\r\nimport { ModalProvider } from '@mozartfinance/uikit'\r\nimport { Web3ReactProvider } from '@web3-react/core'\r\nimport { Provider } from 'react-redux'\r\nimport { getLibrary } from 'utils/web3React'\r\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\r\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\r\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\r\nimport store from 'state'\r\n\r\nconst Providers: React.FC = ({ children }) => {\r\n  return (\r\n    <Web3ReactProvider getLibrary={getLibrary}>\r\n      <Provider store={store}>\r\n        <ThemeContextProvider>\r\n          <LanguageContextProvider>\r\n            <RefreshContextProvider>\r\n              <ModalProvider>{children}</ModalProvider>\r\n            </RefreshContextProvider>\r\n          </LanguageContextProvider>\r\n        </ThemeContextProvider>\r\n      </Provider>\r\n    </Web3ReactProvider>\r\n  )\r\n}\r\n\r\nexport default Providers\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport Providers from './Providers'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Providers>\r\n      <App />\r\n    </Providers>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport teamsList from 'config/constants/teams'\r\nimport { Team } from 'config/constants/types'\r\nimport { TeamsById, TeamsState } from '../types'\r\nimport { getTeam, getTeams } from './helpers'\r\n\r\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\r\n  return {\r\n    ...accum,\r\n    [team.id]: team,\r\n  }\r\n}, {})\r\n\r\nconst initialState: TeamsState = {\r\n  isInitialized: false,\r\n  isLoading: true,\r\n  data: teamsById,\r\n}\r\n\r\nexport const teamsSlice = createSlice({\r\n  name: 'teams',\r\n  initialState,\r\n  reducers: {\r\n    fetchStart: (state) => {\r\n      state.isLoading = true\r\n    },\r\n    fetchFailed: (state) => {\r\n      state.isLoading = false\r\n      state.isInitialized = true\r\n    },\r\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\r\n      state.isInitialized = true\r\n      state.isLoading = false\r\n      state.data[action.payload.id] = action.payload\r\n    },\r\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\r\n      state.isInitialized = true\r\n      state.isLoading = false\r\n      state.data = action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\r\n\r\n// Thunks\r\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\r\n  try {\r\n    dispatch(fetchStart())\r\n    const team = await getTeam(teamId)\r\n    dispatch(teamFetchSucceeded(team))\r\n  } catch (error) {\r\n    dispatch(fetchFailed())\r\n  }\r\n}\r\n\r\nexport const fetchTeams = () => async (dispatch) => {\r\n  try {\r\n    dispatch(fetchStart())\r\n    const teams = await getTeams()\r\n    dispatch(teamsFetchSucceeded(teams))\r\n  } catch (error) {\r\n    dispatch(fetchFailed())\r\n  }\r\n}\r\n\r\nexport default teamsSlice.reducer\r\n","import { TranslatableText } from 'state/types'\r\n\r\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\r\n\r\nexport interface Ifo {\r\n  id: string\r\n  isActive: boolean\r\n  address: string\r\n  name: string\r\n  subTitle?: string\r\n  description?: string\r\n  launchDate: string\r\n  launchTime: string\r\n  saleAmount: string\r\n  raiseAmount: string\r\n  cakeToBurn: string\r\n  projectSiteUrl: string\r\n  currency: string\r\n  currencyAddress: string\r\n  tokenDecimals: number\r\n  tokenSymbol: string\r\n  releaseBlockNumber: number\r\n  campaignId?: string\r\n}\r\n\r\nexport enum PoolCategory {\r\n  'COMMUNITY' = 'Community',\r\n  'CORE' = 'Core',\r\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\r\n}\r\n\r\nexport interface Address {\r\n  97?: string\r\n  56: string\r\n}\r\n\r\nexport interface Token {\r\n  symbol: string\r\n  address?: Address\r\n  decimals?: number\r\n  projectLink?: string\r\n}\r\n\r\nexport interface FarmConfig {\r\n  pid: number\r\n  lpSymbol: string\r\n  lpAddresses: Address\r\n  token: Token\r\n  quoteToken: Token\r\n  multiplier?: string\r\n  isCommunity?: boolean\r\n  dual?: {\r\n    rewardPerBlock: number\r\n    earnLabel: string\r\n    endBlock: number\r\n  }\r\n  depositFeeBP?: number\r\n}\r\n\r\nexport interface PoolConfig {\r\n  sousId: number\r\n  earningToken: Token\r\n  stakingToken: Token\r\n  stakingLimit?: number\r\n  contractAddress: Address\r\n  poolCategory: PoolCategory\r\n  tokenPerBlock: string\r\n  sortOrder?: number\r\n  harvest?: boolean\r\n  isFinished?: boolean\r\n}\r\n\r\nexport type Images = {\r\n  lg: string\r\n  md: string\r\n  sm: string\r\n  ipfs?: string\r\n}\r\n\r\nexport type NftImages = {\r\n  blur?: string\r\n} & Images\r\n\r\nexport type NftVideo = {\r\n  webm: string\r\n  mp4: string\r\n}\r\n\r\nexport type Nft = {\r\n  name: string\r\n  description: string\r\n  images: NftImages\r\n  sortOrder: number\r\n  bunnyId: number\r\n  video?: NftVideo\r\n}\r\n\r\nexport type TeamImages = {\r\n  alt: string\r\n} & Images\r\n\r\nexport type Team = {\r\n  id: number\r\n  name: string\r\n  description: string\r\n  isJoinable?: boolean\r\n  users: number\r\n  points: number\r\n  images: TeamImages\r\n  background: string\r\n  textColor: string\r\n}\r\n\r\nexport type CampaignType = 'ifo'\r\n\r\nexport type Campaign = {\r\n  id: string\r\n  type: CampaignType\r\n  title?: TranslatableText\r\n  description?: TranslatableText\r\n  badge?: string\r\n}\r\n","import poolsConfig from 'config/constants/pools'\r\nimport sousChefABI from 'config/abi/sousChef.json'\r\nimport cakeABI from 'config/abi/cake.json'\r\nimport wbnbABI from 'config/abi/weth.json'\r\nimport multicall from 'utils/multicall'\r\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\r\nimport BigNumber from 'bignumber.js'\r\n\r\nexport const fetchPoolsBlockLimits = async () => {\r\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\r\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\r\n    return {\r\n      address: getAddress(poolConfig.contractAddress),\r\n      name: 'startBlock',\r\n    }\r\n  })\r\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\r\n    return {\r\n      address: getAddress(poolConfig.contractAddress),\r\n      name: 'bonusEndBlock',\r\n    }\r\n  })\r\n\r\n  const starts = await multicall(sousChefABI, callsStartBlock)\r\n  const ends = await multicall(sousChefABI, callsEndBlock)\r\n\r\n  return poolsWithEnd.map((cakePoolConfig, index) => {\r\n    const startBlock = starts[index]\r\n    const endBlock = ends[index]\r\n    return {\r\n      sousId: cakePoolConfig.sousId,\r\n      startBlock: new BigNumber(startBlock).toJSON(),\r\n      endBlock: new BigNumber(endBlock).toJSON(),\r\n    }\r\n  })\r\n}\r\n\r\nexport const fetchPoolsTotalStatking = async () => {\r\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\r\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\r\n\r\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\r\n    return {\r\n      address: getAddress(poolConfig.stakingToken.address),\r\n      name: 'balanceOf',\r\n      params: [getAddress(poolConfig.contractAddress)],\r\n    }\r\n  })\r\n\r\n  const callsBnbPools = bnbPool.map((poolConfig) => {\r\n    return {\r\n      address: getWbnbAddress(),\r\n      name: 'balanceOf',\r\n      params: [getAddress(poolConfig.contractAddress)],\r\n    }\r\n  })\r\n\r\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\r\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\r\n\r\n  return [\r\n    ...nonBnbPools.map((p, index) => ({\r\n      sousId: p.sousId,\r\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\r\n    })),\r\n    ...bnbPool.map((p, index) => ({\r\n      sousId: p.sousId,\r\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\r\n    })),\r\n  ]\r\n}\r\n","import { AbiItem } from 'web3-utils'\r\nimport poolsConfig from 'config/constants/pools'\r\nimport masterChefABI from 'config/abi/masterchef.json'\r\nimport sousChefABI from 'config/abi/sousChef.json'\r\nimport erc20ABI from 'config/abi/erc20.json'\r\nimport multicall from 'utils/multicall'\r\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\r\nimport { getWeb3NoAccount } from 'utils/web3'\r\nimport BigNumber from 'bignumber.js'\r\n\r\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\r\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\r\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\r\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\r\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\r\nconst web3 = getWeb3NoAccount()\r\nconst masterChefContract = new web3.eth.Contract((masterChefABI as unknown) as AbiItem, getMasterChefAddress())\r\n\r\nexport const fetchPoolsAllowance = async (account) => {\r\n  const calls = nonBnbPools.map((p) => ({\r\n    address: getAddress(p.stakingToken.address),\r\n    name: 'allowance',\r\n    params: [account, getAddress(p.contractAddress)],\r\n  }))\r\n\r\n  const allowances = await multicall(erc20ABI, calls)\r\n  return nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\r\n    {},\r\n  )\r\n}\r\n\r\nexport const fetchUserBalances = async (account) => {\r\n  // Non BNB pools\r\n  const calls = nonBnbPools.map((p) => ({\r\n    address: getAddress(p.stakingToken.address),\r\n    name: 'balanceOf',\r\n    params: [account],\r\n  }))\r\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\r\n  const tokenBalances = nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  // BNB pools\r\n  const bnbBalance = await web3.eth.getBalance(account)\r\n  const bnbBalances = bnbPools.reduce(\r\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  return { ...tokenBalances, ...bnbBalances }\r\n}\r\n\r\nexport const fetchUserStakeBalances = async (account) => {\r\n  const calls = nonMasterPools.map((p) => ({\r\n    address: getAddress(p.contractAddress),\r\n    name: 'userInfo',\r\n    params: [account],\r\n  }))\r\n  const userInfo = await multicall(sousChefABI, calls)\r\n  const stakedBalances = nonMasterPools.reduce(\r\n    (acc, pool, index) => ({\r\n      ...acc,\r\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\r\n    }),\r\n    {},\r\n  )\r\n\r\n  // Cake / Cake pool\r\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\r\n\r\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\r\n}\r\n\r\nexport const fetchUserPendingRewards = async (account) => {\r\n  const calls = nonMasterPools.map((p) => ({\r\n    address: getAddress(p.contractAddress),\r\n    name: 'pendingReward',\r\n    params: [account],\r\n  }))\r\n  const res = await multicall(sousChefABI, calls)\r\n  const pendingRewards = nonMasterPools.reduce(\r\n    (acc, pool, index) => ({\r\n      ...acc,\r\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\r\n    }),\r\n    {},\r\n  )\r\n\r\n  // Cake / Cake pool\r\n  const pendingReward = await masterChefContract.methods.pendingPiano('0', account).call()\r\n\r\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice } from '@reduxjs/toolkit'\r\nimport poolsConfig from 'config/constants/pools'\r\nimport { fetchPoolsBlockLimits, fetchPoolsTotalStatking } from './fetchPools'\r\nimport {\r\n  fetchPoolsAllowance,\r\n  fetchUserBalances,\r\n  fetchUserStakeBalances,\r\n  fetchUserPendingRewards,\r\n} from './fetchPoolsUser'\r\nimport { PoolsState, Pool } from '../types'\r\n\r\nconst initialState: PoolsState = { data: [...poolsConfig] }\r\n\r\nexport const PoolsSlice = createSlice({\r\n  name: 'Pools',\r\n  initialState,\r\n  reducers: {\r\n    setPoolsPublicData: (state, action) => {\r\n      const livePoolsData: Pool[] = action.payload\r\n      state.data = state.data.map((pool) => {\r\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\r\n        return { ...pool, ...livePoolData }\r\n      })\r\n    },\r\n    setPoolsUserData: (state, action) => {\r\n      const userData = action.payload\r\n      state.data = state.data.map((pool) => {\r\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\r\n        return { ...pool, userData: userPoolData }\r\n      })\r\n    },\r\n    updatePoolsUserData: (state, action) => {\r\n      const { field, value, sousId } = action.payload\r\n      const index = state.data.findIndex((p) => p.sousId === sousId)\r\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\r\n\r\n// Thunks\r\nexport const fetchPoolsPublicDataAsync = () => async (dispatch) => {\r\n  const blockLimits = await fetchPoolsBlockLimits()\r\n  const totalStakings = await fetchPoolsTotalStatking()\r\n\r\n  const liveData = poolsConfig.map((pool) => {\r\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\r\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\r\n    return {\r\n      ...blockLimit,\r\n      ...totalStaking,\r\n    }\r\n  })\r\n\r\n  dispatch(setPoolsPublicData(liveData))\r\n}\r\n\r\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\r\n  const allowances = await fetchPoolsAllowance(account)\r\n  const stakingTokenBalances = await fetchUserBalances(account)\r\n  const stakedBalances = await fetchUserStakeBalances(account)\r\n  const pendingRewards = await fetchUserPendingRewards(account)\r\n\r\n  const userData = poolsConfig.map((pool) => ({\r\n    sousId: pool.sousId,\r\n    allowance: allowances[pool.sousId],\r\n    stakingTokenBalance: stakingTokenBalances[pool.sousId],\r\n    stakedBalance: stakedBalances[pool.sousId],\r\n    pendingReward: pendingRewards[pool.sousId],\r\n  }))\r\n\r\n  dispatch(setPoolsUserData(userData))\r\n}\r\n\r\nexport const updateUserAllowance = (sousId: string, account: string) => async (dispatch) => {\r\n  const allowances = await fetchPoolsAllowance(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\r\n}\r\n\r\nexport const updateUserBalance = (sousId: string, account: string) => async (dispatch) => {\r\n  const tokenBalances = await fetchUserBalances(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\r\n}\r\n\r\nexport const updateUserStakedBalance = (sousId: string, account: string) => async (dispatch) => {\r\n  const stakedBalances = await fetchUserStakeBalances(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\r\n}\r\n\r\nexport const updateUserPendingReward = (sousId: string, account: string) => async (dispatch) => {\r\n  const pendingRewards = await fetchUserPendingRewards(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\r\n}\r\n\r\nexport default PoolsSlice.reducer\r\n","/* eslint-disable no-param-reassign */\r\nimport { Toast } from '@mozartfinance/uikit'\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { ToastsState } from '../types'\r\n\r\nconst initialState: ToastsState = {\r\n  data: [],\r\n}\r\n\r\nexport const toastsSlice = createSlice({\r\n  name: 'toasts',\r\n  initialState,\r\n  reducers: {\r\n    push: (state: ToastsState, action: PayloadAction<Toast>) => {\r\n      const { payload } = action\r\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload.id)\r\n\r\n      // If id already matches remove it before adding it to the top of the stack\r\n      if (toastIndex >= 0) {\r\n        state.data.splice(toastIndex, 1)\r\n      }\r\n\r\n      state.data.unshift(payload)\r\n    },\r\n    remove: (state: ToastsState, action: PayloadAction<string>) => {\r\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload)\r\n\r\n      if (toastIndex >= 0) {\r\n        state.data.splice(toastIndex, 1)\r\n      }\r\n    },\r\n    clear: (state: ToastsState) => {\r\n      state.data = []\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { clear, remove, push } = toastsSlice.actions\r\n\r\nexport default toastsSlice.reducer\r\n","import { Profile } from 'state/types'\r\n\r\nexport type ProfileResponse = {\r\n  0: string\r\n  1: string\r\n  2: string\r\n  3: string\r\n  4: string\r\n  5: boolean\r\n}\r\n\r\nexport const transformProfileResponse = (profileResponse: ProfileResponse): Partial<Profile> => {\r\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\r\n\r\n  return {\r\n    userId: Number(userId),\r\n    points: Number(numberPoints),\r\n    teamId: Number(teamId),\r\n    tokenId: Number(tokenId),\r\n    nftAddress,\r\n    isActive,\r\n  }\r\n}\r\n","import Cookies from 'js-cookie'\r\nimport { getProfileContract, getPancakeRabbitContract } from 'utils/contractHelpers'\r\nimport { Nft } from 'config/constants/types'\r\nimport { Profile } from 'state/types'\r\nimport { getTeam } from 'state/teams/helpers'\r\nimport nfts from 'config/constants/nfts'\r\nimport { transformProfileResponse } from './helpers'\r\n\r\nconst profileContract = getProfileContract()\r\nconst rabbitContract = getPancakeRabbitContract()\r\nconst profileApi = process.env.REACT_APP_API_PROFILE\r\n\r\nexport interface GetProfileResponse {\r\n  hasRegistered: boolean\r\n  profile?: Profile\r\n}\r\n\r\nconst getUsername = async (address: string): Promise<string> => {\r\n  try {\r\n    const response = await fetch(`${profileApi}/api/users/${address}`)\r\n\r\n    if (!response.ok) {\r\n      return ''\r\n    }\r\n\r\n    const { username = '' } = await response.json()\r\n\r\n    return username\r\n  } catch (error) {\r\n    return ''\r\n  }\r\n}\r\n\r\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\r\n  try {\r\n    const hasRegistered = (await profileContract.methods.hasRegistered(address).call()) as boolean\r\n\r\n    if (!hasRegistered) {\r\n      return { hasRegistered, profile: null }\r\n    }\r\n\r\n    const profileResponse = await profileContract.methods.getUserProfile(address).call()\r\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\r\n    const team = await getTeam(teamId)\r\n    const username = await getUsername(address)\r\n\r\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\r\n    // so only fetch the nft data if active\r\n    let nft: Nft\r\n    if (isActive) {\r\n      const bunnyId = await rabbitContract.methods.getBunnyId(tokenId).call()\r\n      nft = nfts.find((nftItem) => nftItem.bunnyId === Number(bunnyId))\r\n\r\n      // Save the preview image in a cookie so it can be used on the exchange\r\n      Cookies.set(\r\n        `profile_${address}`,\r\n        {\r\n          username,\r\n          avatar: `https://pancakeswap.finance/images/nfts/${nft.images.sm}`,\r\n        },\r\n        { domain: 'mozartfinance.io', secure: true, expires: 30 },\r\n      )\r\n    }\r\n\r\n    const profile = {\r\n      userId,\r\n      points,\r\n      teamId,\r\n      tokenId,\r\n      username,\r\n      nftAddress,\r\n      isActive,\r\n      nft,\r\n      team,\r\n    } as Profile\r\n\r\n    return { hasRegistered, profile }\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n\r\nexport default getProfile\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { ProfileState } from 'state/types'\r\nimport getProfile, { GetProfileResponse } from './getProfile'\r\n\r\nconst initialState: ProfileState = {\r\n  isInitialized: false,\r\n  isLoading: true,\r\n  hasRegistered: false,\r\n  data: null,\r\n}\r\n\r\nexport const profileSlice = createSlice({\r\n  name: 'profile',\r\n  initialState,\r\n  reducers: {\r\n    profileFetchStart: (state) => {\r\n      state.isLoading = true\r\n    },\r\n    profileFetchSucceeded: (state, action: PayloadAction<GetProfileResponse>) => {\r\n      const { profile, hasRegistered } = action.payload\r\n\r\n      return {\r\n        isInitialized: true,\r\n        isLoading: false,\r\n        hasRegistered,\r\n        data: profile,\r\n      }\r\n    },\r\n    profileFetchFailed: (state) => {\r\n      state.isLoading = false\r\n      state.isInitialized = true\r\n    },\r\n    addPoints: (state, action: PayloadAction<number>) => {\r\n      state.data.points += action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, addPoints } = profileSlice.actions\r\n\r\n// Thunks\r\nexport const fetchProfile = (address: string) => async (dispatch) => {\r\n  try {\r\n    dispatch(profileFetchStart())\r\n    const response = await getProfile(address)\r\n    dispatch(profileFetchSucceeded(response))\r\n  } catch (error) {\r\n    dispatch(profileFetchFailed())\r\n  }\r\n}\r\n\r\nexport default profileSlice.reducer\r\n"],"sourceRoot":""}